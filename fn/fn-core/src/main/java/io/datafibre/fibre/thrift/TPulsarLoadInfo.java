/**
 * Autogenerated by Thrift Compiler (0.19.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package io.datafibre.fibre.thrift;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked", "unused"})
@javax.annotation.Generated(value = "Autogenerated by Thrift Compiler (0.19.0)", date = "2024-02-22")
public class TPulsarLoadInfo implements org.apache.thrift.TBase<TPulsarLoadInfo, TPulsarLoadInfo._Fields>, java.io.Serializable, Cloneable, Comparable<TPulsarLoadInfo> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("TPulsarLoadInfo");

  private static final org.apache.thrift.protocol.TField SERVICE_URL_FIELD_DESC = new org.apache.thrift.protocol.TField("service_url", org.apache.thrift.protocol.TType.STRING, (short)1);
  private static final org.apache.thrift.protocol.TField TOPIC_FIELD_DESC = new org.apache.thrift.protocol.TField("topic", org.apache.thrift.protocol.TType.STRING, (short)2);
  private static final org.apache.thrift.protocol.TField SUBSCRIPTION_FIELD_DESC = new org.apache.thrift.protocol.TField("subscription", org.apache.thrift.protocol.TType.STRING, (short)3);
  private static final org.apache.thrift.protocol.TField PARTITIONS_FIELD_DESC = new org.apache.thrift.protocol.TField("partitions", org.apache.thrift.protocol.TType.LIST, (short)4);
  private static final org.apache.thrift.protocol.TField INITIAL_POSITIONS_FIELD_DESC = new org.apache.thrift.protocol.TField("initial_positions", org.apache.thrift.protocol.TType.MAP, (short)5);
  private static final org.apache.thrift.protocol.TField PROPERTIES_FIELD_DESC = new org.apache.thrift.protocol.TField("properties", org.apache.thrift.protocol.TType.MAP, (short)6);

  private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new TPulsarLoadInfoStandardSchemeFactory();
  private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new TPulsarLoadInfoTupleSchemeFactory();

  public @org.apache.thrift.annotation.Nullable java.lang.String service_url; // required
  public @org.apache.thrift.annotation.Nullable java.lang.String topic; // required
  public @org.apache.thrift.annotation.Nullable java.lang.String subscription; // required
  public @org.apache.thrift.annotation.Nullable java.util.List<java.lang.String> partitions; // required
  public @org.apache.thrift.annotation.Nullable java.util.Map<java.lang.String,java.lang.Long> initial_positions; // optional
  public @org.apache.thrift.annotation.Nullable java.util.Map<java.lang.String,java.lang.String> properties; // optional

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    SERVICE_URL((short)1, "service_url"),
    TOPIC((short)2, "topic"),
    SUBSCRIPTION((short)3, "subscription"),
    PARTITIONS((short)4, "partitions"),
    INITIAL_POSITIONS((short)5, "initial_positions"),
    PROPERTIES((short)6, "properties");

    private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

    static {
      for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    @org.apache.thrift.annotation.Nullable
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // SERVICE_URL
          return SERVICE_URL;
        case 2: // TOPIC
          return TOPIC;
        case 3: // SUBSCRIPTION
          return SUBSCRIPTION;
        case 4: // PARTITIONS
          return PARTITIONS;
        case 5: // INITIAL_POSITIONS
          return INITIAL_POSITIONS;
        case 6: // PROPERTIES
          return PROPERTIES;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    @org.apache.thrift.annotation.Nullable
    public static _Fields findByName(java.lang.String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final java.lang.String _fieldName;

    _Fields(short thriftId, java.lang.String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    @Override
    public short getThriftFieldId() {
      return _thriftId;
    }

    @Override
    public java.lang.String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final _Fields optionals[] = {_Fields.INITIAL_POSITIONS,_Fields.PROPERTIES};
  public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.SERVICE_URL, new org.apache.thrift.meta_data.FieldMetaData("service_url", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.TOPIC, new org.apache.thrift.meta_data.FieldMetaData("topic", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.SUBSCRIPTION, new org.apache.thrift.meta_data.FieldMetaData("subscription", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.PARTITIONS, new org.apache.thrift.meta_data.FieldMetaData("partitions", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.ListMetaData(org.apache.thrift.protocol.TType.LIST, 
            new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING))));
    tmpMap.put(_Fields.INITIAL_POSITIONS, new org.apache.thrift.meta_data.FieldMetaData("initial_positions", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.MapMetaData(org.apache.thrift.protocol.TType.MAP, 
            new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING), 
            new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64))));
    tmpMap.put(_Fields.PROPERTIES, new org.apache.thrift.meta_data.FieldMetaData("properties", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.MapMetaData(org.apache.thrift.protocol.TType.MAP, 
            new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING), 
            new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING))));
    metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(TPulsarLoadInfo.class, metaDataMap);
  }

  public TPulsarLoadInfo() {
  }

  public TPulsarLoadInfo(
    java.lang.String service_url,
    java.lang.String topic,
    java.lang.String subscription,
    java.util.List<java.lang.String> partitions)
  {
    this();
    this.service_url = service_url;
    this.topic = topic;
    this.subscription = subscription;
    this.partitions = partitions;
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public TPulsarLoadInfo(TPulsarLoadInfo other) {
    if (other.isSetService_url()) {
      this.service_url = other.service_url;
    }
    if (other.isSetTopic()) {
      this.topic = other.topic;
    }
    if (other.isSetSubscription()) {
      this.subscription = other.subscription;
    }
    if (other.isSetPartitions()) {
      java.util.List<java.lang.String> __this__partitions = new java.util.ArrayList<java.lang.String>(other.partitions);
      this.partitions = __this__partitions;
    }
    if (other.isSetInitial_positions()) {
      java.util.Map<java.lang.String,java.lang.Long> __this__initial_positions = new java.util.HashMap<java.lang.String,java.lang.Long>(other.initial_positions);
      this.initial_positions = __this__initial_positions;
    }
    if (other.isSetProperties()) {
      java.util.Map<java.lang.String,java.lang.String> __this__properties = new java.util.HashMap<java.lang.String,java.lang.String>(other.properties);
      this.properties = __this__properties;
    }
  }

  @Override
  public TPulsarLoadInfo deepCopy() {
    return new TPulsarLoadInfo(this);
  }

  @Override
  public void clear() {
    this.service_url = null;
    this.topic = null;
    this.subscription = null;
    this.partitions = null;
    this.initial_positions = null;
    this.properties = null;
  }

  @org.apache.thrift.annotation.Nullable
  public java.lang.String getService_url() {
    return this.service_url;
  }

  public TPulsarLoadInfo setService_url(@org.apache.thrift.annotation.Nullable java.lang.String service_url) {
    this.service_url = service_url;
    return this;
  }

  public void unsetService_url() {
    this.service_url = null;
  }

  /** Returns true if field service_url is set (has been assigned a value) and false otherwise */
  public boolean isSetService_url() {
    return this.service_url != null;
  }

  public void setService_urlIsSet(boolean value) {
    if (!value) {
      this.service_url = null;
    }
  }

  @org.apache.thrift.annotation.Nullable
  public java.lang.String getTopic() {
    return this.topic;
  }

  public TPulsarLoadInfo setTopic(@org.apache.thrift.annotation.Nullable java.lang.String topic) {
    this.topic = topic;
    return this;
  }

  public void unsetTopic() {
    this.topic = null;
  }

  /** Returns true if field topic is set (has been assigned a value) and false otherwise */
  public boolean isSetTopic() {
    return this.topic != null;
  }

  public void setTopicIsSet(boolean value) {
    if (!value) {
      this.topic = null;
    }
  }

  @org.apache.thrift.annotation.Nullable
  public java.lang.String getSubscription() {
    return this.subscription;
  }

  public TPulsarLoadInfo setSubscription(@org.apache.thrift.annotation.Nullable java.lang.String subscription) {
    this.subscription = subscription;
    return this;
  }

  public void unsetSubscription() {
    this.subscription = null;
  }

  /** Returns true if field subscription is set (has been assigned a value) and false otherwise */
  public boolean isSetSubscription() {
    return this.subscription != null;
  }

  public void setSubscriptionIsSet(boolean value) {
    if (!value) {
      this.subscription = null;
    }
  }

  public int getPartitionsSize() {
    return (this.partitions == null) ? 0 : this.partitions.size();
  }

  @org.apache.thrift.annotation.Nullable
  public java.util.Iterator<java.lang.String> getPartitionsIterator() {
    return (this.partitions == null) ? null : this.partitions.iterator();
  }

  public void addToPartitions(java.lang.String elem) {
    if (this.partitions == null) {
      this.partitions = new java.util.ArrayList<java.lang.String>();
    }
    this.partitions.add(elem);
  }

  @org.apache.thrift.annotation.Nullable
  public java.util.List<java.lang.String> getPartitions() {
    return this.partitions;
  }

  public TPulsarLoadInfo setPartitions(@org.apache.thrift.annotation.Nullable java.util.List<java.lang.String> partitions) {
    this.partitions = partitions;
    return this;
  }

  public void unsetPartitions() {
    this.partitions = null;
  }

  /** Returns true if field partitions is set (has been assigned a value) and false otherwise */
  public boolean isSetPartitions() {
    return this.partitions != null;
  }

  public void setPartitionsIsSet(boolean value) {
    if (!value) {
      this.partitions = null;
    }
  }

  public int getInitial_positionsSize() {
    return (this.initial_positions == null) ? 0 : this.initial_positions.size();
  }

  public void putToInitial_positions(java.lang.String key, long val) {
    if (this.initial_positions == null) {
      this.initial_positions = new java.util.HashMap<java.lang.String,java.lang.Long>();
    }
    this.initial_positions.put(key, val);
  }

  @org.apache.thrift.annotation.Nullable
  public java.util.Map<java.lang.String,java.lang.Long> getInitial_positions() {
    return this.initial_positions;
  }

  public TPulsarLoadInfo setInitial_positions(@org.apache.thrift.annotation.Nullable java.util.Map<java.lang.String,java.lang.Long> initial_positions) {
    this.initial_positions = initial_positions;
    return this;
  }

  public void unsetInitial_positions() {
    this.initial_positions = null;
  }

  /** Returns true if field initial_positions is set (has been assigned a value) and false otherwise */
  public boolean isSetInitial_positions() {
    return this.initial_positions != null;
  }

  public void setInitial_positionsIsSet(boolean value) {
    if (!value) {
      this.initial_positions = null;
    }
  }

  public int getPropertiesSize() {
    return (this.properties == null) ? 0 : this.properties.size();
  }

  public void putToProperties(java.lang.String key, java.lang.String val) {
    if (this.properties == null) {
      this.properties = new java.util.HashMap<java.lang.String,java.lang.String>();
    }
    this.properties.put(key, val);
  }

  @org.apache.thrift.annotation.Nullable
  public java.util.Map<java.lang.String,java.lang.String> getProperties() {
    return this.properties;
  }

  public TPulsarLoadInfo setProperties(@org.apache.thrift.annotation.Nullable java.util.Map<java.lang.String,java.lang.String> properties) {
    this.properties = properties;
    return this;
  }

  public void unsetProperties() {
    this.properties = null;
  }

  /** Returns true if field properties is set (has been assigned a value) and false otherwise */
  public boolean isSetProperties() {
    return this.properties != null;
  }

  public void setPropertiesIsSet(boolean value) {
    if (!value) {
      this.properties = null;
    }
  }

  @Override
  public void setFieldValue(_Fields field, @org.apache.thrift.annotation.Nullable java.lang.Object value) {
    switch (field) {
    case SERVICE_URL:
      if (value == null) {
        unsetService_url();
      } else {
        setService_url((java.lang.String)value);
      }
      break;

    case TOPIC:
      if (value == null) {
        unsetTopic();
      } else {
        setTopic((java.lang.String)value);
      }
      break;

    case SUBSCRIPTION:
      if (value == null) {
        unsetSubscription();
      } else {
        setSubscription((java.lang.String)value);
      }
      break;

    case PARTITIONS:
      if (value == null) {
        unsetPartitions();
      } else {
        setPartitions((java.util.List<java.lang.String>)value);
      }
      break;

    case INITIAL_POSITIONS:
      if (value == null) {
        unsetInitial_positions();
      } else {
        setInitial_positions((java.util.Map<java.lang.String,java.lang.Long>)value);
      }
      break;

    case PROPERTIES:
      if (value == null) {
        unsetProperties();
      } else {
        setProperties((java.util.Map<java.lang.String,java.lang.String>)value);
      }
      break;

    }
  }

  @org.apache.thrift.annotation.Nullable
  @Override
  public java.lang.Object getFieldValue(_Fields field) {
    switch (field) {
    case SERVICE_URL:
      return getService_url();

    case TOPIC:
      return getTopic();

    case SUBSCRIPTION:
      return getSubscription();

    case PARTITIONS:
      return getPartitions();

    case INITIAL_POSITIONS:
      return getInitial_positions();

    case PROPERTIES:
      return getProperties();

    }
    throw new java.lang.IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  @Override
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new java.lang.IllegalArgumentException();
    }

    switch (field) {
    case SERVICE_URL:
      return isSetService_url();
    case TOPIC:
      return isSetTopic();
    case SUBSCRIPTION:
      return isSetSubscription();
    case PARTITIONS:
      return isSetPartitions();
    case INITIAL_POSITIONS:
      return isSetInitial_positions();
    case PROPERTIES:
      return isSetProperties();
    }
    throw new java.lang.IllegalStateException();
  }

  @Override
  public boolean equals(java.lang.Object that) {
    if (that instanceof TPulsarLoadInfo)
      return this.equals((TPulsarLoadInfo)that);
    return false;
  }

  public boolean equals(TPulsarLoadInfo that) {
    if (that == null)
      return false;
    if (this == that)
      return true;

    boolean this_present_service_url = true && this.isSetService_url();
    boolean that_present_service_url = true && that.isSetService_url();
    if (this_present_service_url || that_present_service_url) {
      if (!(this_present_service_url && that_present_service_url))
        return false;
      if (!this.service_url.equals(that.service_url))
        return false;
    }

    boolean this_present_topic = true && this.isSetTopic();
    boolean that_present_topic = true && that.isSetTopic();
    if (this_present_topic || that_present_topic) {
      if (!(this_present_topic && that_present_topic))
        return false;
      if (!this.topic.equals(that.topic))
        return false;
    }

    boolean this_present_subscription = true && this.isSetSubscription();
    boolean that_present_subscription = true && that.isSetSubscription();
    if (this_present_subscription || that_present_subscription) {
      if (!(this_present_subscription && that_present_subscription))
        return false;
      if (!this.subscription.equals(that.subscription))
        return false;
    }

    boolean this_present_partitions = true && this.isSetPartitions();
    boolean that_present_partitions = true && that.isSetPartitions();
    if (this_present_partitions || that_present_partitions) {
      if (!(this_present_partitions && that_present_partitions))
        return false;
      if (!this.partitions.equals(that.partitions))
        return false;
    }

    boolean this_present_initial_positions = true && this.isSetInitial_positions();
    boolean that_present_initial_positions = true && that.isSetInitial_positions();
    if (this_present_initial_positions || that_present_initial_positions) {
      if (!(this_present_initial_positions && that_present_initial_positions))
        return false;
      if (!this.initial_positions.equals(that.initial_positions))
        return false;
    }

    boolean this_present_properties = true && this.isSetProperties();
    boolean that_present_properties = true && that.isSetProperties();
    if (this_present_properties || that_present_properties) {
      if (!(this_present_properties && that_present_properties))
        return false;
      if (!this.properties.equals(that.properties))
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    int hashCode = 1;

    hashCode = hashCode * 8191 + ((isSetService_url()) ? 131071 : 524287);
    if (isSetService_url())
      hashCode = hashCode * 8191 + service_url.hashCode();

    hashCode = hashCode * 8191 + ((isSetTopic()) ? 131071 : 524287);
    if (isSetTopic())
      hashCode = hashCode * 8191 + topic.hashCode();

    hashCode = hashCode * 8191 + ((isSetSubscription()) ? 131071 : 524287);
    if (isSetSubscription())
      hashCode = hashCode * 8191 + subscription.hashCode();

    hashCode = hashCode * 8191 + ((isSetPartitions()) ? 131071 : 524287);
    if (isSetPartitions())
      hashCode = hashCode * 8191 + partitions.hashCode();

    hashCode = hashCode * 8191 + ((isSetInitial_positions()) ? 131071 : 524287);
    if (isSetInitial_positions())
      hashCode = hashCode * 8191 + initial_positions.hashCode();

    hashCode = hashCode * 8191 + ((isSetProperties()) ? 131071 : 524287);
    if (isSetProperties())
      hashCode = hashCode * 8191 + properties.hashCode();

    return hashCode;
  }

  @Override
  public int compareTo(TPulsarLoadInfo other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = java.lang.Boolean.compare(isSetService_url(), other.isSetService_url());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetService_url()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.service_url, other.service_url);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetTopic(), other.isSetTopic());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetTopic()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.topic, other.topic);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetSubscription(), other.isSetSubscription());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetSubscription()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.subscription, other.subscription);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetPartitions(), other.isSetPartitions());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPartitions()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.partitions, other.partitions);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetInitial_positions(), other.isSetInitial_positions());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetInitial_positions()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.initial_positions, other.initial_positions);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetProperties(), other.isSetProperties());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetProperties()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.properties, other.properties);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  @org.apache.thrift.annotation.Nullable
  @Override
  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  @Override
  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    scheme(iprot).read(iprot, this);
  }

  @Override
  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    scheme(oprot).write(oprot, this);
  }

  @Override
  public java.lang.String toString() {
    java.lang.StringBuilder sb = new java.lang.StringBuilder("TPulsarLoadInfo(");
    boolean first = true;

    sb.append("service_url:");
    if (this.service_url == null) {
      sb.append("null");
    } else {
      sb.append(this.service_url);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("topic:");
    if (this.topic == null) {
      sb.append("null");
    } else {
      sb.append(this.topic);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("subscription:");
    if (this.subscription == null) {
      sb.append("null");
    } else {
      sb.append(this.subscription);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("partitions:");
    if (this.partitions == null) {
      sb.append("null");
    } else {
      sb.append(this.partitions);
    }
    first = false;
    if (isSetInitial_positions()) {
      if (!first) sb.append(", ");
      sb.append("initial_positions:");
      if (this.initial_positions == null) {
        sb.append("null");
      } else {
        sb.append(this.initial_positions);
      }
      first = false;
    }
    if (isSetProperties()) {
      if (!first) sb.append(", ");
      sb.append("properties:");
      if (this.properties == null) {
        sb.append("null");
      } else {
        sb.append(this.properties);
      }
      first = false;
    }
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    if (service_url == null) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field 'service_url' was not present! Struct: " + toString());
    }
    if (topic == null) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field 'topic' was not present! Struct: " + toString());
    }
    if (subscription == null) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field 'subscription' was not present! Struct: " + toString());
    }
    if (partitions == null) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field 'partitions' was not present! Struct: " + toString());
    }
    // check for sub-struct validity
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
    try {
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class TPulsarLoadInfoStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    @Override
    public TPulsarLoadInfoStandardScheme getScheme() {
      return new TPulsarLoadInfoStandardScheme();
    }
  }

  private static class TPulsarLoadInfoStandardScheme extends org.apache.thrift.scheme.StandardScheme<TPulsarLoadInfo> {

    @Override
    public void read(org.apache.thrift.protocol.TProtocol iprot, TPulsarLoadInfo struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // SERVICE_URL
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.service_url = iprot.readString();
              struct.setService_urlIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // TOPIC
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.topic = iprot.readString();
              struct.setTopicIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // SUBSCRIPTION
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.subscription = iprot.readString();
              struct.setSubscriptionIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // PARTITIONS
            if (schemeField.type == org.apache.thrift.protocol.TType.LIST) {
              {
                org.apache.thrift.protocol.TList _list30 = iprot.readListBegin();
                struct.partitions = new java.util.ArrayList<java.lang.String>(_list30.size);
                @org.apache.thrift.annotation.Nullable java.lang.String _elem31;
                for (int _i32 = 0; _i32 < _list30.size; ++_i32)
                {
                  _elem31 = iprot.readString();
                  struct.partitions.add(_elem31);
                }
                iprot.readListEnd();
              }
              struct.setPartitionsIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // INITIAL_POSITIONS
            if (schemeField.type == org.apache.thrift.protocol.TType.MAP) {
              {
                org.apache.thrift.protocol.TMap _map33 = iprot.readMapBegin();
                struct.initial_positions = new java.util.HashMap<java.lang.String,java.lang.Long>(2*_map33.size);
                @org.apache.thrift.annotation.Nullable java.lang.String _key34;
                long _val35;
                for (int _i36 = 0; _i36 < _map33.size; ++_i36)
                {
                  _key34 = iprot.readString();
                  _val35 = iprot.readI64();
                  struct.initial_positions.put(_key34, _val35);
                }
                iprot.readMapEnd();
              }
              struct.setInitial_positionsIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 6: // PROPERTIES
            if (schemeField.type == org.apache.thrift.protocol.TType.MAP) {
              {
                org.apache.thrift.protocol.TMap _map37 = iprot.readMapBegin();
                struct.properties = new java.util.HashMap<java.lang.String,java.lang.String>(2*_map37.size);
                @org.apache.thrift.annotation.Nullable java.lang.String _key38;
                @org.apache.thrift.annotation.Nullable java.lang.String _val39;
                for (int _i40 = 0; _i40 < _map37.size; ++_i40)
                {
                  _key38 = iprot.readString();
                  _val39 = iprot.readString();
                  struct.properties.put(_key38, _val39);
                }
                iprot.readMapEnd();
              }
              struct.setPropertiesIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    @Override
    public void write(org.apache.thrift.protocol.TProtocol oprot, TPulsarLoadInfo struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      if (struct.service_url != null) {
        oprot.writeFieldBegin(SERVICE_URL_FIELD_DESC);
        oprot.writeString(struct.service_url);
        oprot.writeFieldEnd();
      }
      if (struct.topic != null) {
        oprot.writeFieldBegin(TOPIC_FIELD_DESC);
        oprot.writeString(struct.topic);
        oprot.writeFieldEnd();
      }
      if (struct.subscription != null) {
        oprot.writeFieldBegin(SUBSCRIPTION_FIELD_DESC);
        oprot.writeString(struct.subscription);
        oprot.writeFieldEnd();
      }
      if (struct.partitions != null) {
        oprot.writeFieldBegin(PARTITIONS_FIELD_DESC);
        {
          oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRING, struct.partitions.size()));
          for (java.lang.String _iter41 : struct.partitions)
          {
            oprot.writeString(_iter41);
          }
          oprot.writeListEnd();
        }
        oprot.writeFieldEnd();
      }
      if (struct.initial_positions != null) {
        if (struct.isSetInitial_positions()) {
          oprot.writeFieldBegin(INITIAL_POSITIONS_FIELD_DESC);
          {
            oprot.writeMapBegin(new org.apache.thrift.protocol.TMap(org.apache.thrift.protocol.TType.STRING, org.apache.thrift.protocol.TType.I64, struct.initial_positions.size()));
            for (java.util.Map.Entry<java.lang.String, java.lang.Long> _iter42 : struct.initial_positions.entrySet())
            {
              oprot.writeString(_iter42.getKey());
              oprot.writeI64(_iter42.getValue());
            }
            oprot.writeMapEnd();
          }
          oprot.writeFieldEnd();
        }
      }
      if (struct.properties != null) {
        if (struct.isSetProperties()) {
          oprot.writeFieldBegin(PROPERTIES_FIELD_DESC);
          {
            oprot.writeMapBegin(new org.apache.thrift.protocol.TMap(org.apache.thrift.protocol.TType.STRING, org.apache.thrift.protocol.TType.STRING, struct.properties.size()));
            for (java.util.Map.Entry<java.lang.String, java.lang.String> _iter43 : struct.properties.entrySet())
            {
              oprot.writeString(_iter43.getKey());
              oprot.writeString(_iter43.getValue());
            }
            oprot.writeMapEnd();
          }
          oprot.writeFieldEnd();
        }
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class TPulsarLoadInfoTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    @Override
    public TPulsarLoadInfoTupleScheme getScheme() {
      return new TPulsarLoadInfoTupleScheme();
    }
  }

  private static class TPulsarLoadInfoTupleScheme extends org.apache.thrift.scheme.TupleScheme<TPulsarLoadInfo> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, TPulsarLoadInfo struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      oprot.writeString(struct.service_url);
      oprot.writeString(struct.topic);
      oprot.writeString(struct.subscription);
      {
        oprot.writeI32(struct.partitions.size());
        for (java.lang.String _iter44 : struct.partitions)
        {
          oprot.writeString(_iter44);
        }
      }
      java.util.BitSet optionals = new java.util.BitSet();
      if (struct.isSetInitial_positions()) {
        optionals.set(0);
      }
      if (struct.isSetProperties()) {
        optionals.set(1);
      }
      oprot.writeBitSet(optionals, 2);
      if (struct.isSetInitial_positions()) {
        {
          oprot.writeI32(struct.initial_positions.size());
          for (java.util.Map.Entry<java.lang.String, java.lang.Long> _iter45 : struct.initial_positions.entrySet())
          {
            oprot.writeString(_iter45.getKey());
            oprot.writeI64(_iter45.getValue());
          }
        }
      }
      if (struct.isSetProperties()) {
        {
          oprot.writeI32(struct.properties.size());
          for (java.util.Map.Entry<java.lang.String, java.lang.String> _iter46 : struct.properties.entrySet())
          {
            oprot.writeString(_iter46.getKey());
            oprot.writeString(_iter46.getValue());
          }
        }
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, TPulsarLoadInfo struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      struct.service_url = iprot.readString();
      struct.setService_urlIsSet(true);
      struct.topic = iprot.readString();
      struct.setTopicIsSet(true);
      struct.subscription = iprot.readString();
      struct.setSubscriptionIsSet(true);
      {
        org.apache.thrift.protocol.TList _list47 = iprot.readListBegin(org.apache.thrift.protocol.TType.STRING);
        struct.partitions = new java.util.ArrayList<java.lang.String>(_list47.size);
        @org.apache.thrift.annotation.Nullable java.lang.String _elem48;
        for (int _i49 = 0; _i49 < _list47.size; ++_i49)
        {
          _elem48 = iprot.readString();
          struct.partitions.add(_elem48);
        }
      }
      struct.setPartitionsIsSet(true);
      java.util.BitSet incoming = iprot.readBitSet(2);
      if (incoming.get(0)) {
        {
          org.apache.thrift.protocol.TMap _map50 = iprot.readMapBegin(org.apache.thrift.protocol.TType.STRING, org.apache.thrift.protocol.TType.I64); 
          struct.initial_positions = new java.util.HashMap<java.lang.String,java.lang.Long>(2*_map50.size);
          @org.apache.thrift.annotation.Nullable java.lang.String _key51;
          long _val52;
          for (int _i53 = 0; _i53 < _map50.size; ++_i53)
          {
            _key51 = iprot.readString();
            _val52 = iprot.readI64();
            struct.initial_positions.put(_key51, _val52);
          }
        }
        struct.setInitial_positionsIsSet(true);
      }
      if (incoming.get(1)) {
        {
          org.apache.thrift.protocol.TMap _map54 = iprot.readMapBegin(org.apache.thrift.protocol.TType.STRING, org.apache.thrift.protocol.TType.STRING); 
          struct.properties = new java.util.HashMap<java.lang.String,java.lang.String>(2*_map54.size);
          @org.apache.thrift.annotation.Nullable java.lang.String _key55;
          @org.apache.thrift.annotation.Nullable java.lang.String _val56;
          for (int _i57 = 0; _i57 < _map54.size; ++_i57)
          {
            _key55 = iprot.readString();
            _val56 = iprot.readString();
            struct.properties.put(_key55, _val56);
          }
        }
        struct.setPropertiesIsSet(true);
      }
    }
  }

  private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
    return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
  }
}

