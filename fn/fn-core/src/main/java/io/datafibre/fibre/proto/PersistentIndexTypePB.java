// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: lake_types.proto

package io.datafibre.fibre.proto;

/**
 * <pre>
 * At present, the lake persistent index reuses the logic of the persistent index,
 * and writes the index to the local disk, which may be upgraded and written to the remote end in the future,
 * the type is is to make it upgradable for compatibility.
 * </pre>
 *
 * Protobuf enum {@code starrocks.lake.PersistentIndexTypePB}
 */
public enum PersistentIndexTypePB
    implements com.google.protobuf.ProtocolMessageEnum {
  /**
   * <code>LOCAL = 0;</code>
   */
  LOCAL(0),
  /**
   * <code>CLOUD_NATIVE = 1;</code>
   */
  CLOUD_NATIVE(1),
  ;

  /**
   * <code>LOCAL = 0;</code>
   */
  public static final int LOCAL_VALUE = 0;
  /**
   * <code>CLOUD_NATIVE = 1;</code>
   */
  public static final int CLOUD_NATIVE_VALUE = 1;


  public final int getNumber() {
    return value;
  }

  /**
   * @param value The numeric wire value of the corresponding enum entry.
   * @return The enum associated with the given numeric wire value.
   * @deprecated Use {@link #forNumber(int)} instead.
   */
  @java.lang.Deprecated
  public static PersistentIndexTypePB valueOf(int value) {
    return forNumber(value);
  }

  /**
   * @param value The numeric wire value of the corresponding enum entry.
   * @return The enum associated with the given numeric wire value.
   */
  public static PersistentIndexTypePB forNumber(int value) {
    switch (value) {
      case 0: return LOCAL;
      case 1: return CLOUD_NATIVE;
      default: return null;
    }
  }

  public static com.google.protobuf.Internal.EnumLiteMap<PersistentIndexTypePB>
      internalGetValueMap() {
    return internalValueMap;
  }
  private static final com.google.protobuf.Internal.EnumLiteMap<
      PersistentIndexTypePB> internalValueMap =
        new com.google.protobuf.Internal.EnumLiteMap<PersistentIndexTypePB>() {
          public PersistentIndexTypePB findValueByNumber(int number) {
            return PersistentIndexTypePB.forNumber(number);
          }
        };

  public final com.google.protobuf.Descriptors.EnumValueDescriptor
      getValueDescriptor() {
    return getDescriptor().getValues().get(ordinal());
  }
  public final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptorForType() {
    return getDescriptor();
  }
  public static final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptor() {
    return io.datafibre.fibre.proto.LakeTypes.getDescriptor().getEnumTypes().get(0);
  }

  private static final PersistentIndexTypePB[] VALUES = values();

  public static PersistentIndexTypePB valueOf(
      com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
    if (desc.getType() != getDescriptor()) {
      throw new java.lang.IllegalArgumentException(
        "EnumValueDescriptor is not for this type.");
    }
    return VALUES[desc.getIndex()];
  }

  private final int value;

  private PersistentIndexTypePB(int value) {
    this.value = value;
  }

  // @@protoc_insertion_point(enum_scope:starrocks.lake.PersistentIndexTypePB)
}

