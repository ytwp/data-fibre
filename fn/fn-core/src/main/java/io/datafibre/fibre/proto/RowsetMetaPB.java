// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: olap_file.proto

package io.datafibre.fibre.proto;

/**
 * Protobuf type {@code starrocks.RowsetMetaPB}
 */
public final class RowsetMetaPB extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:starrocks.RowsetMetaPB)
    RowsetMetaPBOrBuilder {
private static final long serialVersionUID = 0L;
  // Use RowsetMetaPB.newBuilder() to construct.
  private RowsetMetaPB(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private RowsetMetaPB() {
    rowsetType_ = 1;
    rowsetState_ = 0;
    zoneMaps_ = java.util.Collections.emptyList();
    rowsetId_ = "";
    segmentsOverlapPb_ = 0;
    delfileIdxes_ = emptyIntList();
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new RowsetMetaPB();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return io.datafibre.fibre.proto.OlapFile.internal_static_starrocks_RowsetMetaPB_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return io.datafibre.fibre.proto.OlapFile.internal_static_starrocks_RowsetMetaPB_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            io.datafibre.fibre.proto.RowsetMetaPB.class, io.datafibre.fibre.proto.RowsetMetaPB.Builder.class);
  }

  private int bitField0_;
  public static final int DEPRECATED_ROWSET_ID_FIELD_NUMBER = 1;
  private long deprecatedRowsetId_;
  /**
   * <code>required int64 deprecated_rowset_id = 1;</code>
   * @return Whether the deprecatedRowsetId field is set.
   */
  @java.lang.Override
  public boolean hasDeprecatedRowsetId() {
    return ((bitField0_ & 0x00000001) != 0);
  }
  /**
   * <code>required int64 deprecated_rowset_id = 1;</code>
   * @return The deprecatedRowsetId.
   */
  @java.lang.Override
  public long getDeprecatedRowsetId() {
    return deprecatedRowsetId_;
  }

  public static final int PARTITION_ID_FIELD_NUMBER = 2;
  private long partitionId_;
  /**
   * <code>optional int64 partition_id = 2;</code>
   * @return Whether the partitionId field is set.
   */
  @java.lang.Override
  public boolean hasPartitionId() {
    return ((bitField0_ & 0x00000002) != 0);
  }
  /**
   * <code>optional int64 partition_id = 2;</code>
   * @return The partitionId.
   */
  @java.lang.Override
  public long getPartitionId() {
    return partitionId_;
  }

  public static final int TABLET_ID_FIELD_NUMBER = 3;
  private long tabletId_;
  /**
   * <code>optional int64 tablet_id = 3;</code>
   * @return Whether the tabletId field is set.
   */
  @java.lang.Override
  public boolean hasTabletId() {
    return ((bitField0_ & 0x00000004) != 0);
  }
  /**
   * <code>optional int64 tablet_id = 3;</code>
   * @return The tabletId.
   */
  @java.lang.Override
  public long getTabletId() {
    return tabletId_;
  }

  public static final int TXN_ID_FIELD_NUMBER = 4;
  private long txnId_;
  /**
   * <pre>
   * only for pending rowset
   * </pre>
   *
   * <code>optional int64 txn_id = 4;</code>
   * @return Whether the txnId field is set.
   */
  @java.lang.Override
  public boolean hasTxnId() {
    return ((bitField0_ & 0x00000008) != 0);
  }
  /**
   * <pre>
   * only for pending rowset
   * </pre>
   *
   * <code>optional int64 txn_id = 4;</code>
   * @return The txnId.
   */
  @java.lang.Override
  public long getTxnId() {
    return txnId_;
  }

  public static final int TABLET_SCHEMA_HASH_FIELD_NUMBER = 5;
  private int tabletSchemaHash_;
  /**
   * <pre>
   * tablet id and schema hash could find tablet
   * </pre>
   *
   * <code>optional int32 tablet_schema_hash = 5;</code>
   * @return Whether the tabletSchemaHash field is set.
   */
  @java.lang.Override
  public boolean hasTabletSchemaHash() {
    return ((bitField0_ & 0x00000010) != 0);
  }
  /**
   * <pre>
   * tablet id and schema hash could find tablet
   * </pre>
   *
   * <code>optional int32 tablet_schema_hash = 5;</code>
   * @return The tabletSchemaHash.
   */
  @java.lang.Override
  public int getTabletSchemaHash() {
    return tabletSchemaHash_;
  }

  public static final int ROWSET_TYPE_FIELD_NUMBER = 6;
  private int rowsetType_;
  /**
   * <pre>
   * deprecated
   * </pre>
   *
   * <code>optional .starrocks.RowsetTypePB rowset_type = 6 [default = BETA_ROWSET];</code>
   * @return Whether the rowsetType field is set.
   */
  @java.lang.Override public boolean hasRowsetType() {
    return ((bitField0_ & 0x00000020) != 0);
  }
  /**
   * <pre>
   * deprecated
   * </pre>
   *
   * <code>optional .starrocks.RowsetTypePB rowset_type = 6 [default = BETA_ROWSET];</code>
   * @return The rowsetType.
   */
  @java.lang.Override public io.datafibre.fibre.proto.RowsetTypePB getRowsetType() {
    @SuppressWarnings("deprecation")
    io.datafibre.fibre.proto.RowsetTypePB result = io.datafibre.fibre.proto.RowsetTypePB.valueOf(rowsetType_);
    return result == null ? io.datafibre.fibre.proto.RowsetTypePB.BETA_ROWSET : result;
  }

  public static final int ROWSET_STATE_FIELD_NUMBER = 7;
  private int rowsetState_;
  /**
   * <code>optional .starrocks.RowsetStatePB rowset_state = 7;</code>
   * @return Whether the rowsetState field is set.
   */
  @java.lang.Override public boolean hasRowsetState() {
    return ((bitField0_ & 0x00000040) != 0);
  }
  /**
   * <code>optional .starrocks.RowsetStatePB rowset_state = 7;</code>
   * @return The rowsetState.
   */
  @java.lang.Override public io.datafibre.fibre.proto.RowsetStatePB getRowsetState() {
    @SuppressWarnings("deprecation")
    io.datafibre.fibre.proto.RowsetStatePB result = io.datafibre.fibre.proto.RowsetStatePB.valueOf(rowsetState_);
    return result == null ? io.datafibre.fibre.proto.RowsetStatePB.PREPARED : result;
  }

  public static final int START_VERSION_FIELD_NUMBER = 8;
  private long startVersion_;
  /**
   * <pre>
   * only for visible rowset.
   * </pre>
   *
   * <code>optional int64 start_version = 8;</code>
   * @return Whether the startVersion field is set.
   */
  @java.lang.Override
  public boolean hasStartVersion() {
    return ((bitField0_ & 0x00000080) != 0);
  }
  /**
   * <pre>
   * only for visible rowset.
   * </pre>
   *
   * <code>optional int64 start_version = 8;</code>
   * @return The startVersion.
   */
  @java.lang.Override
  public long getStartVersion() {
    return startVersion_;
  }

  public static final int END_VERSION_FIELD_NUMBER = 9;
  private long endVersion_;
  /**
   * <pre>
   * only for visible rowset.
   * </pre>
   *
   * <code>optional int64 end_version = 9;</code>
   * @return Whether the endVersion field is set.
   */
  @java.lang.Override
  public boolean hasEndVersion() {
    return ((bitField0_ & 0x00000100) != 0);
  }
  /**
   * <pre>
   * only for visible rowset.
   * </pre>
   *
   * <code>optional int64 end_version = 9;</code>
   * @return The endVersion.
   */
  @java.lang.Override
  public long getEndVersion() {
    return endVersion_;
  }

  public static final int VERSION_HASH_FIELD_NUMBER = 10;
  private long versionHash_;
  /**
   * <pre>
   * only for visible rowset.
   * </pre>
   *
   * <code>optional int64 version_hash = 10 [deprecated = true];</code>
   * @deprecated starrocks.RowsetMetaPB.version_hash is deprecated.
   *     See olap_file.proto;l=125
   * @return Whether the versionHash field is set.
   */
  @java.lang.Override
  @java.lang.Deprecated public boolean hasVersionHash() {
    return ((bitField0_ & 0x00000200) != 0);
  }
  /**
   * <pre>
   * only for visible rowset.
   * </pre>
   *
   * <code>optional int64 version_hash = 10 [deprecated = true];</code>
   * @deprecated starrocks.RowsetMetaPB.version_hash is deprecated.
   *     See olap_file.proto;l=125
   * @return The versionHash.
   */
  @java.lang.Override
  @java.lang.Deprecated public long getVersionHash() {
    return versionHash_;
  }

  public static final int NUM_ROWS_FIELD_NUMBER = 11;
  private long numRows_;
  /**
   * <pre>
   * total number of rows.
   * </pre>
   *
   * <code>optional int64 num_rows = 11;</code>
   * @return Whether the numRows field is set.
   */
  @java.lang.Override
  public boolean hasNumRows() {
    return ((bitField0_ & 0x00000400) != 0);
  }
  /**
   * <pre>
   * total number of rows.
   * </pre>
   *
   * <code>optional int64 num_rows = 11;</code>
   * @return The numRows.
   */
  @java.lang.Override
  public long getNumRows() {
    return numRows_;
  }

  public static final int TOTAL_DISK_SIZE_FIELD_NUMBER = 12;
  private long totalDiskSize_;
  /**
   * <pre>
   * calculated by index + data
   * </pre>
   *
   * <code>optional int64 total_disk_size = 12;</code>
   * @return Whether the totalDiskSize field is set.
   */
  @java.lang.Override
  public boolean hasTotalDiskSize() {
    return ((bitField0_ & 0x00000800) != 0);
  }
  /**
   * <pre>
   * calculated by index + data
   * </pre>
   *
   * <code>optional int64 total_disk_size = 12;</code>
   * @return The totalDiskSize.
   */
  @java.lang.Override
  public long getTotalDiskSize() {
    return totalDiskSize_;
  }

  public static final int DATA_DISK_SIZE_FIELD_NUMBER = 13;
  private long dataDiskSize_;
  /**
   * <pre>
   * calculated sum(segmentgroup.data_size)
   * </pre>
   *
   * <code>optional int64 data_disk_size = 13;</code>
   * @return Whether the dataDiskSize field is set.
   */
  @java.lang.Override
  public boolean hasDataDiskSize() {
    return ((bitField0_ & 0x00001000) != 0);
  }
  /**
   * <pre>
   * calculated sum(segmentgroup.data_size)
   * </pre>
   *
   * <code>optional int64 data_disk_size = 13;</code>
   * @return The dataDiskSize.
   */
  @java.lang.Override
  public long getDataDiskSize() {
    return dataDiskSize_;
  }

  public static final int INDEX_DISK_SIZE_FIELD_NUMBER = 14;
  private long indexDiskSize_;
  /**
   * <pre>
   * calculated sum(segmentgroup.index_size)
   * </pre>
   *
   * <code>optional int64 index_disk_size = 14;</code>
   * @return Whether the indexDiskSize field is set.
   */
  @java.lang.Override
  public boolean hasIndexDiskSize() {
    return ((bitField0_ & 0x00002000) != 0);
  }
  /**
   * <pre>
   * calculated sum(segmentgroup.index_size)
   * </pre>
   *
   * <code>optional int64 index_disk_size = 14;</code>
   * @return The indexDiskSize.
   */
  @java.lang.Override
  public long getIndexDiskSize() {
    return indexDiskSize_;
  }

  public static final int ZONE_MAPS_FIELD_NUMBER = 15;
  private java.util.List<io.datafibre.fibre.proto.ZoneMapOfRowset> zoneMaps_;
  /**
   * <pre>
   * rowset level column min/max/null statistics, not not used currently
   * </pre>
   *
   * <code>repeated .starrocks.ZoneMapOfRowset zone_maps = 15 [deprecated = true];</code>
   */
  @java.lang.Override
  @java.lang.Deprecated public java.util.List<io.datafibre.fibre.proto.ZoneMapOfRowset> getZoneMapsList() {
    return zoneMaps_;
  }
  /**
   * <pre>
   * rowset level column min/max/null statistics, not not used currently
   * </pre>
   *
   * <code>repeated .starrocks.ZoneMapOfRowset zone_maps = 15 [deprecated = true];</code>
   */
  @java.lang.Override
  @java.lang.Deprecated public java.util.List<? extends io.datafibre.fibre.proto.ZoneMapOfRowsetOrBuilder>
      getZoneMapsOrBuilderList() {
    return zoneMaps_;
  }
  /**
   * <pre>
   * rowset level column min/max/null statistics, not not used currently
   * </pre>
   *
   * <code>repeated .starrocks.ZoneMapOfRowset zone_maps = 15 [deprecated = true];</code>
   */
  @java.lang.Override
  @java.lang.Deprecated public int getZoneMapsCount() {
    return zoneMaps_.size();
  }
  /**
   * <pre>
   * rowset level column min/max/null statistics, not not used currently
   * </pre>
   *
   * <code>repeated .starrocks.ZoneMapOfRowset zone_maps = 15 [deprecated = true];</code>
   */
  @java.lang.Override
  @java.lang.Deprecated public io.datafibre.fibre.proto.ZoneMapOfRowset getZoneMaps(int index) {
    return zoneMaps_.get(index);
  }
  /**
   * <pre>
   * rowset level column min/max/null statistics, not not used currently
   * </pre>
   *
   * <code>repeated .starrocks.ZoneMapOfRowset zone_maps = 15 [deprecated = true];</code>
   */
  @java.lang.Override
  @java.lang.Deprecated public io.datafibre.fibre.proto.ZoneMapOfRowsetOrBuilder getZoneMapsOrBuilder(
      int index) {
    return zoneMaps_.get(index);
  }

  public static final int DELETE_PREDICATE_FIELD_NUMBER = 16;
  private io.datafibre.fibre.proto.DeletePredicatePB deletePredicate_;
  /**
   * <code>optional .starrocks.DeletePredicatePB delete_predicate = 16;</code>
   * @return Whether the deletePredicate field is set.
   */
  @java.lang.Override
  public boolean hasDeletePredicate() {
    return ((bitField0_ & 0x00004000) != 0);
  }
  /**
   * <code>optional .starrocks.DeletePredicatePB delete_predicate = 16;</code>
   * @return The deletePredicate.
   */
  @java.lang.Override
  public io.datafibre.fibre.proto.DeletePredicatePB getDeletePredicate() {
    return deletePredicate_ == null ? io.datafibre.fibre.proto.DeletePredicatePB.getDefaultInstance() : deletePredicate_;
  }
  /**
   * <code>optional .starrocks.DeletePredicatePB delete_predicate = 16;</code>
   */
  @java.lang.Override
  public io.datafibre.fibre.proto.DeletePredicatePBOrBuilder getDeletePredicateOrBuilder() {
    return deletePredicate_ == null ? io.datafibre.fibre.proto.DeletePredicatePB.getDefaultInstance() : deletePredicate_;
  }

  public static final int EMPTY_FIELD_NUMBER = 17;
  private boolean empty_;
  /**
   * <pre>
   * calculated from segment group
   * </pre>
   *
   * <code>optional bool empty = 17;</code>
   * @return Whether the empty field is set.
   */
  @java.lang.Override
  public boolean hasEmpty() {
    return ((bitField0_ & 0x00008000) != 0);
  }
  /**
   * <pre>
   * calculated from segment group
   * </pre>
   *
   * <code>optional bool empty = 17;</code>
   * @return The empty.
   */
  @java.lang.Override
  public boolean getEmpty() {
    return empty_;
  }

  public static final int LOAD_ID_FIELD_NUMBER = 18;
  private io.datafibre.fibre.proto.PUniqueId loadId_;
  /**
   * <pre>
   * only for pending rowset
   * </pre>
   *
   * <code>optional .starrocks.PUniqueId load_id = 18;</code>
   * @return Whether the loadId field is set.
   */
  @java.lang.Override
  public boolean hasLoadId() {
    return ((bitField0_ & 0x00010000) != 0);
  }
  /**
   * <pre>
   * only for pending rowset
   * </pre>
   *
   * <code>optional .starrocks.PUniqueId load_id = 18;</code>
   * @return The loadId.
   */
  @java.lang.Override
  public io.datafibre.fibre.proto.PUniqueId getLoadId() {
    return loadId_ == null ? io.datafibre.fibre.proto.PUniqueId.getDefaultInstance() : loadId_;
  }
  /**
   * <pre>
   * only for pending rowset
   * </pre>
   *
   * <code>optional .starrocks.PUniqueId load_id = 18;</code>
   */
  @java.lang.Override
  public io.datafibre.fibre.proto.PUniqueIdOrBuilder getLoadIdOrBuilder() {
    return loadId_ == null ? io.datafibre.fibre.proto.PUniqueId.getDefaultInstance() : loadId_;
  }

  public static final int DELETE_FLAG_FIELD_NUMBER = 19;
  private boolean deleteFlag_;
  /**
   * <pre>
   * not set, get from olap index header msg?
   * </pre>
   *
   * <code>optional bool delete_flag = 19;</code>
   * @return Whether the deleteFlag field is set.
   */
  @java.lang.Override
  public boolean hasDeleteFlag() {
    return ((bitField0_ & 0x00020000) != 0);
  }
  /**
   * <pre>
   * not set, get from olap index header msg?
   * </pre>
   *
   * <code>optional bool delete_flag = 19;</code>
   * @return The deleteFlag.
   */
  @java.lang.Override
  public boolean getDeleteFlag() {
    return deleteFlag_;
  }

  public static final int CREATION_TIME_FIELD_NUMBER = 20;
  private long creationTime_;
  /**
   * <code>optional int64 creation_time = 20;</code>
   * @return Whether the creationTime field is set.
   */
  @java.lang.Override
  public boolean hasCreationTime() {
    return ((bitField0_ & 0x00040000) != 0);
  }
  /**
   * <code>optional int64 creation_time = 20;</code>
   * @return The creationTime.
   */
  @java.lang.Override
  public long getCreationTime() {
    return creationTime_;
  }

  public static final int TABLET_UID_FIELD_NUMBER = 21;
  private io.datafibre.fibre.proto.PUniqueId tabletUid_;
  /**
   * <code>optional .starrocks.PUniqueId tablet_uid = 21;</code>
   * @return Whether the tabletUid field is set.
   */
  @java.lang.Override
  public boolean hasTabletUid() {
    return ((bitField0_ & 0x00080000) != 0);
  }
  /**
   * <code>optional .starrocks.PUniqueId tablet_uid = 21;</code>
   * @return The tabletUid.
   */
  @java.lang.Override
  public io.datafibre.fibre.proto.PUniqueId getTabletUid() {
    return tabletUid_ == null ? io.datafibre.fibre.proto.PUniqueId.getDefaultInstance() : tabletUid_;
  }
  /**
   * <code>optional .starrocks.PUniqueId tablet_uid = 21;</code>
   */
  @java.lang.Override
  public io.datafibre.fibre.proto.PUniqueIdOrBuilder getTabletUidOrBuilder() {
    return tabletUid_ == null ? io.datafibre.fibre.proto.PUniqueId.getDefaultInstance() : tabletUid_;
  }

  public static final int NUM_SEGMENTS_FIELD_NUMBER = 22;
  private long numSegments_;
  /**
   * <pre>
   * total number of segments
   * </pre>
   *
   * <code>optional int64 num_segments = 22;</code>
   * @return Whether the numSegments field is set.
   */
  @java.lang.Override
  public boolean hasNumSegments() {
    return ((bitField0_ & 0x00100000) != 0);
  }
  /**
   * <pre>
   * total number of segments
   * </pre>
   *
   * <code>optional int64 num_segments = 22;</code>
   * @return The numSegments.
   */
  @java.lang.Override
  public long getNumSegments() {
    return numSegments_;
  }

  public static final int ROWSET_ID_FIELD_NUMBER = 23;
  private volatile java.lang.Object rowsetId_;
  /**
   * <pre>
   * rowset id definition, it will replace required rowset id
   * </pre>
   *
   * <code>optional string rowset_id = 23;</code>
   * @return Whether the rowsetId field is set.
   */
  @java.lang.Override
  public boolean hasRowsetId() {
    return ((bitField0_ & 0x00200000) != 0);
  }
  /**
   * <pre>
   * rowset id definition, it will replace required rowset id
   * </pre>
   *
   * <code>optional string rowset_id = 23;</code>
   * @return The rowsetId.
   */
  @java.lang.Override
  public java.lang.String getRowsetId() {
    java.lang.Object ref = rowsetId_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      if (bs.isValidUtf8()) {
        rowsetId_ = s;
      }
      return s;
    }
  }
  /**
   * <pre>
   * rowset id definition, it will replace required rowset id
   * </pre>
   *
   * <code>optional string rowset_id = 23;</code>
   * @return The bytes for rowsetId.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getRowsetIdBytes() {
    java.lang.Object ref = rowsetId_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      rowsetId_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int SEGMENTS_OVERLAP_PB_FIELD_NUMBER = 51;
  private int segmentsOverlapPb_;
  /**
   * <pre>
   * to indicate whether the data between the segments overlap
   * </pre>
   *
   * <code>optional .starrocks.SegmentsOverlapPB segments_overlap_pb = 51 [default = OVERLAP_UNKNOWN];</code>
   * @return Whether the segmentsOverlapPb field is set.
   */
  @java.lang.Override public boolean hasSegmentsOverlapPb() {
    return ((bitField0_ & 0x00400000) != 0);
  }
  /**
   * <pre>
   * to indicate whether the data between the segments overlap
   * </pre>
   *
   * <code>optional .starrocks.SegmentsOverlapPB segments_overlap_pb = 51 [default = OVERLAP_UNKNOWN];</code>
   * @return The segmentsOverlapPb.
   */
  @java.lang.Override public io.datafibre.fibre.proto.SegmentsOverlapPB getSegmentsOverlapPb() {
    @SuppressWarnings("deprecation")
    io.datafibre.fibre.proto.SegmentsOverlapPB result = io.datafibre.fibre.proto.SegmentsOverlapPB.valueOf(segmentsOverlapPb_);
    return result == null ? io.datafibre.fibre.proto.SegmentsOverlapPB.OVERLAP_UNKNOWN : result;
  }

  public static final int ROWSET_SEG_ID_FIELD_NUMBER = 52;
  private int rowsetSegId_;
  /**
   * <pre>
   * every segment in a rowset has an unique uint32 id
   * it is incrementally allocated when the rowset is committed
   * if a rowset have 4 segments, 4 ids will be allocated.
   * if rowset_seg_id=n then segment ids will be: n, n+1, n+2, n+3
   * </pre>
   *
   * <code>optional uint32 rowset_seg_id = 52;</code>
   * @return Whether the rowsetSegId field is set.
   */
  @java.lang.Override
  public boolean hasRowsetSegId() {
    return ((bitField0_ & 0x00800000) != 0);
  }
  /**
   * <pre>
   * every segment in a rowset has an unique uint32 id
   * it is incrementally allocated when the rowset is committed
   * if a rowset have 4 segments, 4 ids will be allocated.
   * if rowset_seg_id=n then segment ids will be: n, n+1, n+2, n+3
   * </pre>
   *
   * <code>optional uint32 rowset_seg_id = 52;</code>
   * @return The rowsetSegId.
   */
  @java.lang.Override
  public int getRowsetSegId() {
    return rowsetSegId_;
  }

  public static final int NUM_DELETE_FILES_FIELD_NUMBER = 53;
  private int numDeleteFiles_;
  /**
   * <pre>
   * number of delete files, delete file store delete operations'
   * primary keys
   * </pre>
   *
   * <code>optional uint32 num_delete_files = 53;</code>
   * @return Whether the numDeleteFiles field is set.
   */
  @java.lang.Override
  public boolean hasNumDeleteFiles() {
    return ((bitField0_ & 0x01000000) != 0);
  }
  /**
   * <pre>
   * number of delete files, delete file store delete operations'
   * primary keys
   * </pre>
   *
   * <code>optional uint32 num_delete_files = 53;</code>
   * @return The numDeleteFiles.
   */
  @java.lang.Override
  public int getNumDeleteFiles() {
    return numDeleteFiles_;
  }

  public static final int TOTAL_ROW_SIZE_FIELD_NUMBER = 54;
  private long totalRowSize_;
  /**
   * <pre>
   * total row size in approximately
   * </pre>
   *
   * <code>optional int64 total_row_size = 54;</code>
   * @return Whether the totalRowSize field is set.
   */
  @java.lang.Override
  public boolean hasTotalRowSize() {
    return ((bitField0_ & 0x02000000) != 0);
  }
  /**
   * <pre>
   * total row size in approximately
   * </pre>
   *
   * <code>optional int64 total_row_size = 54;</code>
   * @return The totalRowSize.
   */
  @java.lang.Override
  public long getTotalRowSize() {
    return totalRowSize_;
  }

  public static final int TXN_META_FIELD_NUMBER = 55;
  private io.datafibre.fibre.proto.RowsetTxnMetaPB txnMeta_;
  /**
   * <pre>
   * some txn semantic information bind to this rowset
   * </pre>
   *
   * <code>optional .starrocks.RowsetTxnMetaPB txn_meta = 55;</code>
   * @return Whether the txnMeta field is set.
   */
  @java.lang.Override
  public boolean hasTxnMeta() {
    return ((bitField0_ & 0x04000000) != 0);
  }
  /**
   * <pre>
   * some txn semantic information bind to this rowset
   * </pre>
   *
   * <code>optional .starrocks.RowsetTxnMetaPB txn_meta = 55;</code>
   * @return The txnMeta.
   */
  @java.lang.Override
  public io.datafibre.fibre.proto.RowsetTxnMetaPB getTxnMeta() {
    return txnMeta_ == null ? io.datafibre.fibre.proto.RowsetTxnMetaPB.getDefaultInstance() : txnMeta_;
  }
  /**
   * <pre>
   * some txn semantic information bind to this rowset
   * </pre>
   *
   * <code>optional .starrocks.RowsetTxnMetaPB txn_meta = 55;</code>
   */
  @java.lang.Override
  public io.datafibre.fibre.proto.RowsetTxnMetaPBOrBuilder getTxnMetaOrBuilder() {
    return txnMeta_ == null ? io.datafibre.fibre.proto.RowsetTxnMetaPB.getDefaultInstance() : txnMeta_;
  }

  public static final int DELFILE_IDXES_FIELD_NUMBER = 56;
  private com.google.protobuf.Internal.IntList delfileIdxes_;
  /**
   * <pre>
   * delete file index
   * </pre>
   *
   * <code>repeated uint32 delfile_idxes = 56;</code>
   * @return A list containing the delfileIdxes.
   */
  @java.lang.Override
  public java.util.List<java.lang.Integer>
      getDelfileIdxesList() {
    return delfileIdxes_;
  }
  /**
   * <pre>
   * delete file index
   * </pre>
   *
   * <code>repeated uint32 delfile_idxes = 56;</code>
   * @return The count of delfileIdxes.
   */
  public int getDelfileIdxesCount() {
    return delfileIdxes_.size();
  }
  /**
   * <pre>
   * delete file index
   * </pre>
   *
   * <code>repeated uint32 delfile_idxes = 56;</code>
   * @param index The index of the element to return.
   * @return The delfileIdxes at the given index.
   */
  public int getDelfileIdxes(int index) {
    return delfileIdxes_.getInt(index);
  }

  public static final int NUM_UPDATE_FILES_FIELD_NUMBER = 57;
  private int numUpdateFiles_;
  /**
   * <pre>
   * number of update files
   * </pre>
   *
   * <code>optional uint32 num_update_files = 57;</code>
   * @return Whether the numUpdateFiles field is set.
   */
  @java.lang.Override
  public boolean hasNumUpdateFiles() {
    return ((bitField0_ & 0x08000000) != 0);
  }
  /**
   * <pre>
   * number of update files
   * </pre>
   *
   * <code>optional uint32 num_update_files = 57;</code>
   * @return The numUpdateFiles.
   */
  @java.lang.Override
  public int getNumUpdateFiles() {
    return numUpdateFiles_;
  }

  public static final int TOTAL_UPDATE_ROW_SIZE_FIELD_NUMBER = 58;
  private long totalUpdateRowSize_;
  /**
   * <pre>
   * total partial update row size
   * </pre>
   *
   * <code>optional int64 total_update_row_size = 58;</code>
   * @return Whether the totalUpdateRowSize field is set.
   */
  @java.lang.Override
  public boolean hasTotalUpdateRowSize() {
    return ((bitField0_ & 0x10000000) != 0);
  }
  /**
   * <pre>
   * total partial update row size
   * </pre>
   *
   * <code>optional int64 total_update_row_size = 58;</code>
   * @return The totalUpdateRowSize.
   */
  @java.lang.Override
  public long getTotalUpdateRowSize() {
    return totalUpdateRowSize_;
  }

  public static final int PARTIAL_SCHEMA_CHANGE_FIELD_NUMBER = 59;
  private boolean partialSchemaChange_;
  /**
   * <pre>
   * true if it is generated by partial_schema_change
   * </pre>
   *
   * <code>optional bool partial_schema_change = 59;</code>
   * @return Whether the partialSchemaChange field is set.
   */
  @java.lang.Override
  public boolean hasPartialSchemaChange() {
    return ((bitField0_ & 0x20000000) != 0);
  }
  /**
   * <pre>
   * true if it is generated by partial_schema_change
   * </pre>
   *
   * <code>optional bool partial_schema_change = 59;</code>
   * @return The partialSchemaChange.
   */
  @java.lang.Override
  public boolean getPartialSchemaChange() {
    return partialSchemaChange_;
  }

  public static final int TABLET_SCHEMA_FIELD_NUMBER = 60;
  private io.datafibre.fibre.proto.TabletSchemaPB tabletSchema_;
  /**
   * <pre>
   * tablet meta pb, for compaction
   * </pre>
   *
   * <code>optional .starrocks.TabletSchemaPB tablet_schema = 60;</code>
   * @return Whether the tabletSchema field is set.
   */
  @java.lang.Override
  public boolean hasTabletSchema() {
    return ((bitField0_ & 0x40000000) != 0);
  }
  /**
   * <pre>
   * tablet meta pb, for compaction
   * </pre>
   *
   * <code>optional .starrocks.TabletSchemaPB tablet_schema = 60;</code>
   * @return The tabletSchema.
   */
  @java.lang.Override
  public io.datafibre.fibre.proto.TabletSchemaPB getTabletSchema() {
    return tabletSchema_ == null ? io.datafibre.fibre.proto.TabletSchemaPB.getDefaultInstance() : tabletSchema_;
  }
  /**
   * <pre>
   * tablet meta pb, for compaction
   * </pre>
   *
   * <code>optional .starrocks.TabletSchemaPB tablet_schema = 60;</code>
   */
  @java.lang.Override
  public io.datafibre.fibre.proto.TabletSchemaPBOrBuilder getTabletSchemaOrBuilder() {
    return tabletSchema_ == null ? io.datafibre.fibre.proto.TabletSchemaPB.getDefaultInstance() : tabletSchema_;
  }

  public static final int MAX_COMPACT_INPUT_ROWSET_ID_FIELD_NUMBER = 61;
  private int maxCompactInputRowsetId_;
  /**
   * <pre>
   * May not be empty if this rowset was generated by a compaction task in PK table.
   * We use max_compact_input_rowset_id to decide the rowset order when doing pk recover.
   * </pre>
   *
   * <code>optional uint32 max_compact_input_rowset_id = 61;</code>
   * @return Whether the maxCompactInputRowsetId field is set.
   */
  @java.lang.Override
  public boolean hasMaxCompactInputRowsetId() {
    return ((bitField0_ & 0x80000000) != 0);
  }
  /**
   * <pre>
   * May not be empty if this rowset was generated by a compaction task in PK table.
   * We use max_compact_input_rowset_id to decide the rowset order when doing pk recover.
   * </pre>
   *
   * <code>optional uint32 max_compact_input_rowset_id = 61;</code>
   * @return The maxCompactInputRowsetId.
   */
  @java.lang.Override
  public int getMaxCompactInputRowsetId() {
    return maxCompactInputRowsetId_;
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    if (!hasDeprecatedRowsetId()) {
      memoizedIsInitialized = 0;
      return false;
    }
    for (int i = 0; i < getZoneMapsCount(); i++) {
      if (!getZoneMaps(i).isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
    }
    if (hasDeletePredicate()) {
      if (!getDeletePredicate().isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
    }
    if (hasLoadId()) {
      if (!getLoadId().isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
    }
    if (hasTabletUid()) {
      if (!getTabletUid().isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
    }
    if (hasTabletSchema()) {
      if (!getTabletSchema().isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
    }
    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (((bitField0_ & 0x00000001) != 0)) {
      output.writeInt64(1, deprecatedRowsetId_);
    }
    if (((bitField0_ & 0x00000002) != 0)) {
      output.writeInt64(2, partitionId_);
    }
    if (((bitField0_ & 0x00000004) != 0)) {
      output.writeInt64(3, tabletId_);
    }
    if (((bitField0_ & 0x00000008) != 0)) {
      output.writeInt64(4, txnId_);
    }
    if (((bitField0_ & 0x00000010) != 0)) {
      output.writeInt32(5, tabletSchemaHash_);
    }
    if (((bitField0_ & 0x00000020) != 0)) {
      output.writeEnum(6, rowsetType_);
    }
    if (((bitField0_ & 0x00000040) != 0)) {
      output.writeEnum(7, rowsetState_);
    }
    if (((bitField0_ & 0x00000080) != 0)) {
      output.writeInt64(8, startVersion_);
    }
    if (((bitField0_ & 0x00000100) != 0)) {
      output.writeInt64(9, endVersion_);
    }
    if (((bitField0_ & 0x00000200) != 0)) {
      output.writeInt64(10, versionHash_);
    }
    if (((bitField0_ & 0x00000400) != 0)) {
      output.writeInt64(11, numRows_);
    }
    if (((bitField0_ & 0x00000800) != 0)) {
      output.writeInt64(12, totalDiskSize_);
    }
    if (((bitField0_ & 0x00001000) != 0)) {
      output.writeInt64(13, dataDiskSize_);
    }
    if (((bitField0_ & 0x00002000) != 0)) {
      output.writeInt64(14, indexDiskSize_);
    }
    for (int i = 0; i < zoneMaps_.size(); i++) {
      output.writeMessage(15, zoneMaps_.get(i));
    }
    if (((bitField0_ & 0x00004000) != 0)) {
      output.writeMessage(16, getDeletePredicate());
    }
    if (((bitField0_ & 0x00008000) != 0)) {
      output.writeBool(17, empty_);
    }
    if (((bitField0_ & 0x00010000) != 0)) {
      output.writeMessage(18, getLoadId());
    }
    if (((bitField0_ & 0x00020000) != 0)) {
      output.writeBool(19, deleteFlag_);
    }
    if (((bitField0_ & 0x00040000) != 0)) {
      output.writeInt64(20, creationTime_);
    }
    if (((bitField0_ & 0x00080000) != 0)) {
      output.writeMessage(21, getTabletUid());
    }
    if (((bitField0_ & 0x00100000) != 0)) {
      output.writeInt64(22, numSegments_);
    }
    if (((bitField0_ & 0x00200000) != 0)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 23, rowsetId_);
    }
    if (((bitField0_ & 0x00400000) != 0)) {
      output.writeEnum(51, segmentsOverlapPb_);
    }
    if (((bitField0_ & 0x00800000) != 0)) {
      output.writeUInt32(52, rowsetSegId_);
    }
    if (((bitField0_ & 0x01000000) != 0)) {
      output.writeUInt32(53, numDeleteFiles_);
    }
    if (((bitField0_ & 0x02000000) != 0)) {
      output.writeInt64(54, totalRowSize_);
    }
    if (((bitField0_ & 0x04000000) != 0)) {
      output.writeMessage(55, getTxnMeta());
    }
    for (int i = 0; i < delfileIdxes_.size(); i++) {
      output.writeUInt32(56, delfileIdxes_.getInt(i));
    }
    if (((bitField0_ & 0x08000000) != 0)) {
      output.writeUInt32(57, numUpdateFiles_);
    }
    if (((bitField0_ & 0x10000000) != 0)) {
      output.writeInt64(58, totalUpdateRowSize_);
    }
    if (((bitField0_ & 0x20000000) != 0)) {
      output.writeBool(59, partialSchemaChange_);
    }
    if (((bitField0_ & 0x40000000) != 0)) {
      output.writeMessage(60, getTabletSchema());
    }
    if (((bitField0_ & 0x80000000) != 0)) {
      output.writeUInt32(61, maxCompactInputRowsetId_);
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (((bitField0_ & 0x00000001) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt64Size(1, deprecatedRowsetId_);
    }
    if (((bitField0_ & 0x00000002) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt64Size(2, partitionId_);
    }
    if (((bitField0_ & 0x00000004) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt64Size(3, tabletId_);
    }
    if (((bitField0_ & 0x00000008) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt64Size(4, txnId_);
    }
    if (((bitField0_ & 0x00000010) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(5, tabletSchemaHash_);
    }
    if (((bitField0_ & 0x00000020) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeEnumSize(6, rowsetType_);
    }
    if (((bitField0_ & 0x00000040) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeEnumSize(7, rowsetState_);
    }
    if (((bitField0_ & 0x00000080) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt64Size(8, startVersion_);
    }
    if (((bitField0_ & 0x00000100) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt64Size(9, endVersion_);
    }
    if (((bitField0_ & 0x00000200) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt64Size(10, versionHash_);
    }
    if (((bitField0_ & 0x00000400) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt64Size(11, numRows_);
    }
    if (((bitField0_ & 0x00000800) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt64Size(12, totalDiskSize_);
    }
    if (((bitField0_ & 0x00001000) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt64Size(13, dataDiskSize_);
    }
    if (((bitField0_ & 0x00002000) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt64Size(14, indexDiskSize_);
    }
    for (int i = 0; i < zoneMaps_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(15, zoneMaps_.get(i));
    }
    if (((bitField0_ & 0x00004000) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(16, getDeletePredicate());
    }
    if (((bitField0_ & 0x00008000) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(17, empty_);
    }
    if (((bitField0_ & 0x00010000) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(18, getLoadId());
    }
    if (((bitField0_ & 0x00020000) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(19, deleteFlag_);
    }
    if (((bitField0_ & 0x00040000) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt64Size(20, creationTime_);
    }
    if (((bitField0_ & 0x00080000) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(21, getTabletUid());
    }
    if (((bitField0_ & 0x00100000) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt64Size(22, numSegments_);
    }
    if (((bitField0_ & 0x00200000) != 0)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(23, rowsetId_);
    }
    if (((bitField0_ & 0x00400000) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeEnumSize(51, segmentsOverlapPb_);
    }
    if (((bitField0_ & 0x00800000) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt32Size(52, rowsetSegId_);
    }
    if (((bitField0_ & 0x01000000) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt32Size(53, numDeleteFiles_);
    }
    if (((bitField0_ & 0x02000000) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt64Size(54, totalRowSize_);
    }
    if (((bitField0_ & 0x04000000) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(55, getTxnMeta());
    }
    {
      int dataSize = 0;
      for (int i = 0; i < delfileIdxes_.size(); i++) {
        dataSize += com.google.protobuf.CodedOutputStream
          .computeUInt32SizeNoTag(delfileIdxes_.getInt(i));
      }
      size += dataSize;
      size += 2 * getDelfileIdxesList().size();
    }
    if (((bitField0_ & 0x08000000) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt32Size(57, numUpdateFiles_);
    }
    if (((bitField0_ & 0x10000000) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt64Size(58, totalUpdateRowSize_);
    }
    if (((bitField0_ & 0x20000000) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(59, partialSchemaChange_);
    }
    if (((bitField0_ & 0x40000000) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(60, getTabletSchema());
    }
    if (((bitField0_ & 0x80000000) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt32Size(61, maxCompactInputRowsetId_);
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof io.datafibre.fibre.proto.RowsetMetaPB)) {
      return super.equals(obj);
    }
    io.datafibre.fibre.proto.RowsetMetaPB other = (io.datafibre.fibre.proto.RowsetMetaPB) obj;

    if (hasDeprecatedRowsetId() != other.hasDeprecatedRowsetId()) return false;
    if (hasDeprecatedRowsetId()) {
      if (getDeprecatedRowsetId()
          != other.getDeprecatedRowsetId()) return false;
    }
    if (hasPartitionId() != other.hasPartitionId()) return false;
    if (hasPartitionId()) {
      if (getPartitionId()
          != other.getPartitionId()) return false;
    }
    if (hasTabletId() != other.hasTabletId()) return false;
    if (hasTabletId()) {
      if (getTabletId()
          != other.getTabletId()) return false;
    }
    if (hasTxnId() != other.hasTxnId()) return false;
    if (hasTxnId()) {
      if (getTxnId()
          != other.getTxnId()) return false;
    }
    if (hasTabletSchemaHash() != other.hasTabletSchemaHash()) return false;
    if (hasTabletSchemaHash()) {
      if (getTabletSchemaHash()
          != other.getTabletSchemaHash()) return false;
    }
    if (hasRowsetType() != other.hasRowsetType()) return false;
    if (hasRowsetType()) {
      if (rowsetType_ != other.rowsetType_) return false;
    }
    if (hasRowsetState() != other.hasRowsetState()) return false;
    if (hasRowsetState()) {
      if (rowsetState_ != other.rowsetState_) return false;
    }
    if (hasStartVersion() != other.hasStartVersion()) return false;
    if (hasStartVersion()) {
      if (getStartVersion()
          != other.getStartVersion()) return false;
    }
    if (hasEndVersion() != other.hasEndVersion()) return false;
    if (hasEndVersion()) {
      if (getEndVersion()
          != other.getEndVersion()) return false;
    }
    if (hasVersionHash() != other.hasVersionHash()) return false;
    if (hasVersionHash()) {
      if (getVersionHash()
          != other.getVersionHash()) return false;
    }
    if (hasNumRows() != other.hasNumRows()) return false;
    if (hasNumRows()) {
      if (getNumRows()
          != other.getNumRows()) return false;
    }
    if (hasTotalDiskSize() != other.hasTotalDiskSize()) return false;
    if (hasTotalDiskSize()) {
      if (getTotalDiskSize()
          != other.getTotalDiskSize()) return false;
    }
    if (hasDataDiskSize() != other.hasDataDiskSize()) return false;
    if (hasDataDiskSize()) {
      if (getDataDiskSize()
          != other.getDataDiskSize()) return false;
    }
    if (hasIndexDiskSize() != other.hasIndexDiskSize()) return false;
    if (hasIndexDiskSize()) {
      if (getIndexDiskSize()
          != other.getIndexDiskSize()) return false;
    }
    if (!getZoneMapsList()
        .equals(other.getZoneMapsList())) return false;
    if (hasDeletePredicate() != other.hasDeletePredicate()) return false;
    if (hasDeletePredicate()) {
      if (!getDeletePredicate()
          .equals(other.getDeletePredicate())) return false;
    }
    if (hasEmpty() != other.hasEmpty()) return false;
    if (hasEmpty()) {
      if (getEmpty()
          != other.getEmpty()) return false;
    }
    if (hasLoadId() != other.hasLoadId()) return false;
    if (hasLoadId()) {
      if (!getLoadId()
          .equals(other.getLoadId())) return false;
    }
    if (hasDeleteFlag() != other.hasDeleteFlag()) return false;
    if (hasDeleteFlag()) {
      if (getDeleteFlag()
          != other.getDeleteFlag()) return false;
    }
    if (hasCreationTime() != other.hasCreationTime()) return false;
    if (hasCreationTime()) {
      if (getCreationTime()
          != other.getCreationTime()) return false;
    }
    if (hasTabletUid() != other.hasTabletUid()) return false;
    if (hasTabletUid()) {
      if (!getTabletUid()
          .equals(other.getTabletUid())) return false;
    }
    if (hasNumSegments() != other.hasNumSegments()) return false;
    if (hasNumSegments()) {
      if (getNumSegments()
          != other.getNumSegments()) return false;
    }
    if (hasRowsetId() != other.hasRowsetId()) return false;
    if (hasRowsetId()) {
      if (!getRowsetId()
          .equals(other.getRowsetId())) return false;
    }
    if (hasSegmentsOverlapPb() != other.hasSegmentsOverlapPb()) return false;
    if (hasSegmentsOverlapPb()) {
      if (segmentsOverlapPb_ != other.segmentsOverlapPb_) return false;
    }
    if (hasRowsetSegId() != other.hasRowsetSegId()) return false;
    if (hasRowsetSegId()) {
      if (getRowsetSegId()
          != other.getRowsetSegId()) return false;
    }
    if (hasNumDeleteFiles() != other.hasNumDeleteFiles()) return false;
    if (hasNumDeleteFiles()) {
      if (getNumDeleteFiles()
          != other.getNumDeleteFiles()) return false;
    }
    if (hasTotalRowSize() != other.hasTotalRowSize()) return false;
    if (hasTotalRowSize()) {
      if (getTotalRowSize()
          != other.getTotalRowSize()) return false;
    }
    if (hasTxnMeta() != other.hasTxnMeta()) return false;
    if (hasTxnMeta()) {
      if (!getTxnMeta()
          .equals(other.getTxnMeta())) return false;
    }
    if (!getDelfileIdxesList()
        .equals(other.getDelfileIdxesList())) return false;
    if (hasNumUpdateFiles() != other.hasNumUpdateFiles()) return false;
    if (hasNumUpdateFiles()) {
      if (getNumUpdateFiles()
          != other.getNumUpdateFiles()) return false;
    }
    if (hasTotalUpdateRowSize() != other.hasTotalUpdateRowSize()) return false;
    if (hasTotalUpdateRowSize()) {
      if (getTotalUpdateRowSize()
          != other.getTotalUpdateRowSize()) return false;
    }
    if (hasPartialSchemaChange() != other.hasPartialSchemaChange()) return false;
    if (hasPartialSchemaChange()) {
      if (getPartialSchemaChange()
          != other.getPartialSchemaChange()) return false;
    }
    if (hasTabletSchema() != other.hasTabletSchema()) return false;
    if (hasTabletSchema()) {
      if (!getTabletSchema()
          .equals(other.getTabletSchema())) return false;
    }
    if (hasMaxCompactInputRowsetId() != other.hasMaxCompactInputRowsetId()) return false;
    if (hasMaxCompactInputRowsetId()) {
      if (getMaxCompactInputRowsetId()
          != other.getMaxCompactInputRowsetId()) return false;
    }
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (hasDeprecatedRowsetId()) {
      hash = (37 * hash) + DEPRECATED_ROWSET_ID_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getDeprecatedRowsetId());
    }
    if (hasPartitionId()) {
      hash = (37 * hash) + PARTITION_ID_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getPartitionId());
    }
    if (hasTabletId()) {
      hash = (37 * hash) + TABLET_ID_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getTabletId());
    }
    if (hasTxnId()) {
      hash = (37 * hash) + TXN_ID_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getTxnId());
    }
    if (hasTabletSchemaHash()) {
      hash = (37 * hash) + TABLET_SCHEMA_HASH_FIELD_NUMBER;
      hash = (53 * hash) + getTabletSchemaHash();
    }
    if (hasRowsetType()) {
      hash = (37 * hash) + ROWSET_TYPE_FIELD_NUMBER;
      hash = (53 * hash) + rowsetType_;
    }
    if (hasRowsetState()) {
      hash = (37 * hash) + ROWSET_STATE_FIELD_NUMBER;
      hash = (53 * hash) + rowsetState_;
    }
    if (hasStartVersion()) {
      hash = (37 * hash) + START_VERSION_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getStartVersion());
    }
    if (hasEndVersion()) {
      hash = (37 * hash) + END_VERSION_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getEndVersion());
    }
    if (hasVersionHash()) {
      hash = (37 * hash) + VERSION_HASH_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getVersionHash());
    }
    if (hasNumRows()) {
      hash = (37 * hash) + NUM_ROWS_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getNumRows());
    }
    if (hasTotalDiskSize()) {
      hash = (37 * hash) + TOTAL_DISK_SIZE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getTotalDiskSize());
    }
    if (hasDataDiskSize()) {
      hash = (37 * hash) + DATA_DISK_SIZE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getDataDiskSize());
    }
    if (hasIndexDiskSize()) {
      hash = (37 * hash) + INDEX_DISK_SIZE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getIndexDiskSize());
    }
    if (getZoneMapsCount() > 0) {
      hash = (37 * hash) + ZONE_MAPS_FIELD_NUMBER;
      hash = (53 * hash) + getZoneMapsList().hashCode();
    }
    if (hasDeletePredicate()) {
      hash = (37 * hash) + DELETE_PREDICATE_FIELD_NUMBER;
      hash = (53 * hash) + getDeletePredicate().hashCode();
    }
    if (hasEmpty()) {
      hash = (37 * hash) + EMPTY_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getEmpty());
    }
    if (hasLoadId()) {
      hash = (37 * hash) + LOAD_ID_FIELD_NUMBER;
      hash = (53 * hash) + getLoadId().hashCode();
    }
    if (hasDeleteFlag()) {
      hash = (37 * hash) + DELETE_FLAG_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getDeleteFlag());
    }
    if (hasCreationTime()) {
      hash = (37 * hash) + CREATION_TIME_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getCreationTime());
    }
    if (hasTabletUid()) {
      hash = (37 * hash) + TABLET_UID_FIELD_NUMBER;
      hash = (53 * hash) + getTabletUid().hashCode();
    }
    if (hasNumSegments()) {
      hash = (37 * hash) + NUM_SEGMENTS_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getNumSegments());
    }
    if (hasRowsetId()) {
      hash = (37 * hash) + ROWSET_ID_FIELD_NUMBER;
      hash = (53 * hash) + getRowsetId().hashCode();
    }
    if (hasSegmentsOverlapPb()) {
      hash = (37 * hash) + SEGMENTS_OVERLAP_PB_FIELD_NUMBER;
      hash = (53 * hash) + segmentsOverlapPb_;
    }
    if (hasRowsetSegId()) {
      hash = (37 * hash) + ROWSET_SEG_ID_FIELD_NUMBER;
      hash = (53 * hash) + getRowsetSegId();
    }
    if (hasNumDeleteFiles()) {
      hash = (37 * hash) + NUM_DELETE_FILES_FIELD_NUMBER;
      hash = (53 * hash) + getNumDeleteFiles();
    }
    if (hasTotalRowSize()) {
      hash = (37 * hash) + TOTAL_ROW_SIZE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getTotalRowSize());
    }
    if (hasTxnMeta()) {
      hash = (37 * hash) + TXN_META_FIELD_NUMBER;
      hash = (53 * hash) + getTxnMeta().hashCode();
    }
    if (getDelfileIdxesCount() > 0) {
      hash = (37 * hash) + DELFILE_IDXES_FIELD_NUMBER;
      hash = (53 * hash) + getDelfileIdxesList().hashCode();
    }
    if (hasNumUpdateFiles()) {
      hash = (37 * hash) + NUM_UPDATE_FILES_FIELD_NUMBER;
      hash = (53 * hash) + getNumUpdateFiles();
    }
    if (hasTotalUpdateRowSize()) {
      hash = (37 * hash) + TOTAL_UPDATE_ROW_SIZE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getTotalUpdateRowSize());
    }
    if (hasPartialSchemaChange()) {
      hash = (37 * hash) + PARTIAL_SCHEMA_CHANGE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getPartialSchemaChange());
    }
    if (hasTabletSchema()) {
      hash = (37 * hash) + TABLET_SCHEMA_FIELD_NUMBER;
      hash = (53 * hash) + getTabletSchema().hashCode();
    }
    if (hasMaxCompactInputRowsetId()) {
      hash = (37 * hash) + MAX_COMPACT_INPUT_ROWSET_ID_FIELD_NUMBER;
      hash = (53 * hash) + getMaxCompactInputRowsetId();
    }
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static io.datafibre.fibre.proto.RowsetMetaPB parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.datafibre.fibre.proto.RowsetMetaPB parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.datafibre.fibre.proto.RowsetMetaPB parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.datafibre.fibre.proto.RowsetMetaPB parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.datafibre.fibre.proto.RowsetMetaPB parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.datafibre.fibre.proto.RowsetMetaPB parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.datafibre.fibre.proto.RowsetMetaPB parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static io.datafibre.fibre.proto.RowsetMetaPB parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static io.datafibre.fibre.proto.RowsetMetaPB parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static io.datafibre.fibre.proto.RowsetMetaPB parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static io.datafibre.fibre.proto.RowsetMetaPB parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static io.datafibre.fibre.proto.RowsetMetaPB parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(io.datafibre.fibre.proto.RowsetMetaPB prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code starrocks.RowsetMetaPB}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:starrocks.RowsetMetaPB)
      io.datafibre.fibre.proto.RowsetMetaPBOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.datafibre.fibre.proto.OlapFile.internal_static_starrocks_RowsetMetaPB_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.datafibre.fibre.proto.OlapFile.internal_static_starrocks_RowsetMetaPB_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.datafibre.fibre.proto.RowsetMetaPB.class, io.datafibre.fibre.proto.RowsetMetaPB.Builder.class);
    }

    // Construct using io.datafibre.fibre.proto.RowsetMetaPB.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
        getZoneMapsFieldBuilder();
        getDeletePredicateFieldBuilder();
        getLoadIdFieldBuilder();
        getTabletUidFieldBuilder();
        getTxnMetaFieldBuilder();
        getTabletSchemaFieldBuilder();
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      deprecatedRowsetId_ = 0L;
      bitField0_ = (bitField0_ & ~0x00000001);
      partitionId_ = 0L;
      bitField0_ = (bitField0_ & ~0x00000002);
      tabletId_ = 0L;
      bitField0_ = (bitField0_ & ~0x00000004);
      txnId_ = 0L;
      bitField0_ = (bitField0_ & ~0x00000008);
      tabletSchemaHash_ = 0;
      bitField0_ = (bitField0_ & ~0x00000010);
      rowsetType_ = 1;
      bitField0_ = (bitField0_ & ~0x00000020);
      rowsetState_ = 0;
      bitField0_ = (bitField0_ & ~0x00000040);
      startVersion_ = 0L;
      bitField0_ = (bitField0_ & ~0x00000080);
      endVersion_ = 0L;
      bitField0_ = (bitField0_ & ~0x00000100);
      versionHash_ = 0L;
      bitField0_ = (bitField0_ & ~0x00000200);
      numRows_ = 0L;
      bitField0_ = (bitField0_ & ~0x00000400);
      totalDiskSize_ = 0L;
      bitField0_ = (bitField0_ & ~0x00000800);
      dataDiskSize_ = 0L;
      bitField0_ = (bitField0_ & ~0x00001000);
      indexDiskSize_ = 0L;
      bitField0_ = (bitField0_ & ~0x00002000);
      if (zoneMapsBuilder_ == null) {
        zoneMaps_ = java.util.Collections.emptyList();
      } else {
        zoneMaps_ = null;
        zoneMapsBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00004000);
      if (deletePredicateBuilder_ == null) {
        deletePredicate_ = null;
      } else {
        deletePredicateBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00008000);
      empty_ = false;
      bitField0_ = (bitField0_ & ~0x00010000);
      if (loadIdBuilder_ == null) {
        loadId_ = null;
      } else {
        loadIdBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00020000);
      deleteFlag_ = false;
      bitField0_ = (bitField0_ & ~0x00040000);
      creationTime_ = 0L;
      bitField0_ = (bitField0_ & ~0x00080000);
      if (tabletUidBuilder_ == null) {
        tabletUid_ = null;
      } else {
        tabletUidBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00100000);
      numSegments_ = 0L;
      bitField0_ = (bitField0_ & ~0x00200000);
      rowsetId_ = "";
      bitField0_ = (bitField0_ & ~0x00400000);
      segmentsOverlapPb_ = 0;
      bitField0_ = (bitField0_ & ~0x00800000);
      rowsetSegId_ = 0;
      bitField0_ = (bitField0_ & ~0x01000000);
      numDeleteFiles_ = 0;
      bitField0_ = (bitField0_ & ~0x02000000);
      totalRowSize_ = 0L;
      bitField0_ = (bitField0_ & ~0x04000000);
      if (txnMetaBuilder_ == null) {
        txnMeta_ = null;
      } else {
        txnMetaBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x08000000);
      delfileIdxes_ = emptyIntList();
      bitField0_ = (bitField0_ & ~0x10000000);
      numUpdateFiles_ = 0;
      bitField0_ = (bitField0_ & ~0x20000000);
      totalUpdateRowSize_ = 0L;
      bitField0_ = (bitField0_ & ~0x40000000);
      partialSchemaChange_ = false;
      bitField0_ = (bitField0_ & ~0x80000000);
      if (tabletSchemaBuilder_ == null) {
        tabletSchema_ = null;
      } else {
        tabletSchemaBuilder_.clear();
      }
      bitField1_ = (bitField1_ & ~0x00000001);
      maxCompactInputRowsetId_ = 0;
      bitField1_ = (bitField1_ & ~0x00000002);
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return io.datafibre.fibre.proto.OlapFile.internal_static_starrocks_RowsetMetaPB_descriptor;
    }

    @java.lang.Override
    public io.datafibre.fibre.proto.RowsetMetaPB getDefaultInstanceForType() {
      return io.datafibre.fibre.proto.RowsetMetaPB.getDefaultInstance();
    }

    @java.lang.Override
    public io.datafibre.fibre.proto.RowsetMetaPB build() {
      io.datafibre.fibre.proto.RowsetMetaPB result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public io.datafibre.fibre.proto.RowsetMetaPB buildPartial() {
      io.datafibre.fibre.proto.RowsetMetaPB result = new io.datafibre.fibre.proto.RowsetMetaPB(this);
      int from_bitField0_ = bitField0_;
      int from_bitField1_ = bitField1_;
      int to_bitField0_ = 0;
      if (((from_bitField0_ & 0x00000001) != 0)) {
        result.deprecatedRowsetId_ = deprecatedRowsetId_;
        to_bitField0_ |= 0x00000001;
      }
      if (((from_bitField0_ & 0x00000002) != 0)) {
        result.partitionId_ = partitionId_;
        to_bitField0_ |= 0x00000002;
      }
      if (((from_bitField0_ & 0x00000004) != 0)) {
        result.tabletId_ = tabletId_;
        to_bitField0_ |= 0x00000004;
      }
      if (((from_bitField0_ & 0x00000008) != 0)) {
        result.txnId_ = txnId_;
        to_bitField0_ |= 0x00000008;
      }
      if (((from_bitField0_ & 0x00000010) != 0)) {
        result.tabletSchemaHash_ = tabletSchemaHash_;
        to_bitField0_ |= 0x00000010;
      }
      if (((from_bitField0_ & 0x00000020) != 0)) {
        to_bitField0_ |= 0x00000020;
      }
      result.rowsetType_ = rowsetType_;
      if (((from_bitField0_ & 0x00000040) != 0)) {
        to_bitField0_ |= 0x00000040;
      }
      result.rowsetState_ = rowsetState_;
      if (((from_bitField0_ & 0x00000080) != 0)) {
        result.startVersion_ = startVersion_;
        to_bitField0_ |= 0x00000080;
      }
      if (((from_bitField0_ & 0x00000100) != 0)) {
        result.endVersion_ = endVersion_;
        to_bitField0_ |= 0x00000100;
      }
      if (((from_bitField0_ & 0x00000200) != 0)) {
        result.versionHash_ = versionHash_;
        to_bitField0_ |= 0x00000200;
      }
      if (((from_bitField0_ & 0x00000400) != 0)) {
        result.numRows_ = numRows_;
        to_bitField0_ |= 0x00000400;
      }
      if (((from_bitField0_ & 0x00000800) != 0)) {
        result.totalDiskSize_ = totalDiskSize_;
        to_bitField0_ |= 0x00000800;
      }
      if (((from_bitField0_ & 0x00001000) != 0)) {
        result.dataDiskSize_ = dataDiskSize_;
        to_bitField0_ |= 0x00001000;
      }
      if (((from_bitField0_ & 0x00002000) != 0)) {
        result.indexDiskSize_ = indexDiskSize_;
        to_bitField0_ |= 0x00002000;
      }
      if (zoneMapsBuilder_ == null) {
        if (((bitField0_ & 0x00004000) != 0)) {
          zoneMaps_ = java.util.Collections.unmodifiableList(zoneMaps_);
          bitField0_ = (bitField0_ & ~0x00004000);
        }
        result.zoneMaps_ = zoneMaps_;
      } else {
        result.zoneMaps_ = zoneMapsBuilder_.build();
      }
      if (((from_bitField0_ & 0x00008000) != 0)) {
        if (deletePredicateBuilder_ == null) {
          result.deletePredicate_ = deletePredicate_;
        } else {
          result.deletePredicate_ = deletePredicateBuilder_.build();
        }
        to_bitField0_ |= 0x00004000;
      }
      if (((from_bitField0_ & 0x00010000) != 0)) {
        result.empty_ = empty_;
        to_bitField0_ |= 0x00008000;
      }
      if (((from_bitField0_ & 0x00020000) != 0)) {
        if (loadIdBuilder_ == null) {
          result.loadId_ = loadId_;
        } else {
          result.loadId_ = loadIdBuilder_.build();
        }
        to_bitField0_ |= 0x00010000;
      }
      if (((from_bitField0_ & 0x00040000) != 0)) {
        result.deleteFlag_ = deleteFlag_;
        to_bitField0_ |= 0x00020000;
      }
      if (((from_bitField0_ & 0x00080000) != 0)) {
        result.creationTime_ = creationTime_;
        to_bitField0_ |= 0x00040000;
      }
      if (((from_bitField0_ & 0x00100000) != 0)) {
        if (tabletUidBuilder_ == null) {
          result.tabletUid_ = tabletUid_;
        } else {
          result.tabletUid_ = tabletUidBuilder_.build();
        }
        to_bitField0_ |= 0x00080000;
      }
      if (((from_bitField0_ & 0x00200000) != 0)) {
        result.numSegments_ = numSegments_;
        to_bitField0_ |= 0x00100000;
      }
      if (((from_bitField0_ & 0x00400000) != 0)) {
        to_bitField0_ |= 0x00200000;
      }
      result.rowsetId_ = rowsetId_;
      if (((from_bitField0_ & 0x00800000) != 0)) {
        to_bitField0_ |= 0x00400000;
      }
      result.segmentsOverlapPb_ = segmentsOverlapPb_;
      if (((from_bitField0_ & 0x01000000) != 0)) {
        result.rowsetSegId_ = rowsetSegId_;
        to_bitField0_ |= 0x00800000;
      }
      if (((from_bitField0_ & 0x02000000) != 0)) {
        result.numDeleteFiles_ = numDeleteFiles_;
        to_bitField0_ |= 0x01000000;
      }
      if (((from_bitField0_ & 0x04000000) != 0)) {
        result.totalRowSize_ = totalRowSize_;
        to_bitField0_ |= 0x02000000;
      }
      if (((from_bitField0_ & 0x08000000) != 0)) {
        if (txnMetaBuilder_ == null) {
          result.txnMeta_ = txnMeta_;
        } else {
          result.txnMeta_ = txnMetaBuilder_.build();
        }
        to_bitField0_ |= 0x04000000;
      }
      if (((bitField0_ & 0x10000000) != 0)) {
        delfileIdxes_.makeImmutable();
        bitField0_ = (bitField0_ & ~0x10000000);
      }
      result.delfileIdxes_ = delfileIdxes_;
      if (((from_bitField0_ & 0x20000000) != 0)) {
        result.numUpdateFiles_ = numUpdateFiles_;
        to_bitField0_ |= 0x08000000;
      }
      if (((from_bitField0_ & 0x40000000) != 0)) {
        result.totalUpdateRowSize_ = totalUpdateRowSize_;
        to_bitField0_ |= 0x10000000;
      }
      if (((from_bitField0_ & 0x80000000) != 0)) {
        result.partialSchemaChange_ = partialSchemaChange_;
        to_bitField0_ |= 0x20000000;
      }
      if (((from_bitField1_ & 0x00000001) != 0)) {
        if (tabletSchemaBuilder_ == null) {
          result.tabletSchema_ = tabletSchema_;
        } else {
          result.tabletSchema_ = tabletSchemaBuilder_.build();
        }
        to_bitField0_ |= 0x40000000;
      }
      if (((from_bitField1_ & 0x00000002) != 0)) {
        result.maxCompactInputRowsetId_ = maxCompactInputRowsetId_;
        to_bitField0_ |= 0x80000000;
      }
      result.bitField0_ = to_bitField0_;
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof io.datafibre.fibre.proto.RowsetMetaPB) {
        return mergeFrom((io.datafibre.fibre.proto.RowsetMetaPB)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(io.datafibre.fibre.proto.RowsetMetaPB other) {
      if (other == io.datafibre.fibre.proto.RowsetMetaPB.getDefaultInstance()) return this;
      if (other.hasDeprecatedRowsetId()) {
        setDeprecatedRowsetId(other.getDeprecatedRowsetId());
      }
      if (other.hasPartitionId()) {
        setPartitionId(other.getPartitionId());
      }
      if (other.hasTabletId()) {
        setTabletId(other.getTabletId());
      }
      if (other.hasTxnId()) {
        setTxnId(other.getTxnId());
      }
      if (other.hasTabletSchemaHash()) {
        setTabletSchemaHash(other.getTabletSchemaHash());
      }
      if (other.hasRowsetType()) {
        setRowsetType(other.getRowsetType());
      }
      if (other.hasRowsetState()) {
        setRowsetState(other.getRowsetState());
      }
      if (other.hasStartVersion()) {
        setStartVersion(other.getStartVersion());
      }
      if (other.hasEndVersion()) {
        setEndVersion(other.getEndVersion());
      }
      if (other.hasVersionHash()) {
        setVersionHash(other.getVersionHash());
      }
      if (other.hasNumRows()) {
        setNumRows(other.getNumRows());
      }
      if (other.hasTotalDiskSize()) {
        setTotalDiskSize(other.getTotalDiskSize());
      }
      if (other.hasDataDiskSize()) {
        setDataDiskSize(other.getDataDiskSize());
      }
      if (other.hasIndexDiskSize()) {
        setIndexDiskSize(other.getIndexDiskSize());
      }
      if (zoneMapsBuilder_ == null) {
        if (!other.zoneMaps_.isEmpty()) {
          if (zoneMaps_.isEmpty()) {
            zoneMaps_ = other.zoneMaps_;
            bitField0_ = (bitField0_ & ~0x00004000);
          } else {
            ensureZoneMapsIsMutable();
            zoneMaps_.addAll(other.zoneMaps_);
          }
          onChanged();
        }
      } else {
        if (!other.zoneMaps_.isEmpty()) {
          if (zoneMapsBuilder_.isEmpty()) {
            zoneMapsBuilder_.dispose();
            zoneMapsBuilder_ = null;
            zoneMaps_ = other.zoneMaps_;
            bitField0_ = (bitField0_ & ~0x00004000);
            zoneMapsBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getZoneMapsFieldBuilder() : null;
          } else {
            zoneMapsBuilder_.addAllMessages(other.zoneMaps_);
          }
        }
      }
      if (other.hasDeletePredicate()) {
        mergeDeletePredicate(other.getDeletePredicate());
      }
      if (other.hasEmpty()) {
        setEmpty(other.getEmpty());
      }
      if (other.hasLoadId()) {
        mergeLoadId(other.getLoadId());
      }
      if (other.hasDeleteFlag()) {
        setDeleteFlag(other.getDeleteFlag());
      }
      if (other.hasCreationTime()) {
        setCreationTime(other.getCreationTime());
      }
      if (other.hasTabletUid()) {
        mergeTabletUid(other.getTabletUid());
      }
      if (other.hasNumSegments()) {
        setNumSegments(other.getNumSegments());
      }
      if (other.hasRowsetId()) {
        bitField0_ |= 0x00400000;
        rowsetId_ = other.rowsetId_;
        onChanged();
      }
      if (other.hasSegmentsOverlapPb()) {
        setSegmentsOverlapPb(other.getSegmentsOverlapPb());
      }
      if (other.hasRowsetSegId()) {
        setRowsetSegId(other.getRowsetSegId());
      }
      if (other.hasNumDeleteFiles()) {
        setNumDeleteFiles(other.getNumDeleteFiles());
      }
      if (other.hasTotalRowSize()) {
        setTotalRowSize(other.getTotalRowSize());
      }
      if (other.hasTxnMeta()) {
        mergeTxnMeta(other.getTxnMeta());
      }
      if (!other.delfileIdxes_.isEmpty()) {
        if (delfileIdxes_.isEmpty()) {
          delfileIdxes_ = other.delfileIdxes_;
          bitField0_ = (bitField0_ & ~0x10000000);
        } else {
          ensureDelfileIdxesIsMutable();
          delfileIdxes_.addAll(other.delfileIdxes_);
        }
        onChanged();
      }
      if (other.hasNumUpdateFiles()) {
        setNumUpdateFiles(other.getNumUpdateFiles());
      }
      if (other.hasTotalUpdateRowSize()) {
        setTotalUpdateRowSize(other.getTotalUpdateRowSize());
      }
      if (other.hasPartialSchemaChange()) {
        setPartialSchemaChange(other.getPartialSchemaChange());
      }
      if (other.hasTabletSchema()) {
        mergeTabletSchema(other.getTabletSchema());
      }
      if (other.hasMaxCompactInputRowsetId()) {
        setMaxCompactInputRowsetId(other.getMaxCompactInputRowsetId());
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      if (!hasDeprecatedRowsetId()) {
        return false;
      }
      for (int i = 0; i < getZoneMapsCount(); i++) {
        if (!getZoneMaps(i).isInitialized()) {
          return false;
        }
      }
      if (hasDeletePredicate()) {
        if (!getDeletePredicate().isInitialized()) {
          return false;
        }
      }
      if (hasLoadId()) {
        if (!getLoadId().isInitialized()) {
          return false;
        }
      }
      if (hasTabletUid()) {
        if (!getTabletUid().isInitialized()) {
          return false;
        }
      }
      if (hasTabletSchema()) {
        if (!getTabletSchema().isInitialized()) {
          return false;
        }
      }
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {
              deprecatedRowsetId_ = input.readInt64();
              bitField0_ |= 0x00000001;
              break;
            } // case 8
            case 16: {
              partitionId_ = input.readInt64();
              bitField0_ |= 0x00000002;
              break;
            } // case 16
            case 24: {
              tabletId_ = input.readInt64();
              bitField0_ |= 0x00000004;
              break;
            } // case 24
            case 32: {
              txnId_ = input.readInt64();
              bitField0_ |= 0x00000008;
              break;
            } // case 32
            case 40: {
              tabletSchemaHash_ = input.readInt32();
              bitField0_ |= 0x00000010;
              break;
            } // case 40
            case 48: {
              int tmpRaw = input.readEnum();
              io.datafibre.fibre.proto.RowsetTypePB tmpValue =
                  io.datafibre.fibre.proto.RowsetTypePB.forNumber(tmpRaw);
              if (tmpValue == null) {
                mergeUnknownVarintField(6, tmpRaw);
              } else {
                rowsetType_ = tmpRaw;
                bitField0_ |= 0x00000020;
              }
              break;
            } // case 48
            case 56: {
              int tmpRaw = input.readEnum();
              io.datafibre.fibre.proto.RowsetStatePB tmpValue =
                  io.datafibre.fibre.proto.RowsetStatePB.forNumber(tmpRaw);
              if (tmpValue == null) {
                mergeUnknownVarintField(7, tmpRaw);
              } else {
                rowsetState_ = tmpRaw;
                bitField0_ |= 0x00000040;
              }
              break;
            } // case 56
            case 64: {
              startVersion_ = input.readInt64();
              bitField0_ |= 0x00000080;
              break;
            } // case 64
            case 72: {
              endVersion_ = input.readInt64();
              bitField0_ |= 0x00000100;
              break;
            } // case 72
            case 80: {
              versionHash_ = input.readInt64();
              bitField0_ |= 0x00000200;
              break;
            } // case 80
            case 88: {
              numRows_ = input.readInt64();
              bitField0_ |= 0x00000400;
              break;
            } // case 88
            case 96: {
              totalDiskSize_ = input.readInt64();
              bitField0_ |= 0x00000800;
              break;
            } // case 96
            case 104: {
              dataDiskSize_ = input.readInt64();
              bitField0_ |= 0x00001000;
              break;
            } // case 104
            case 112: {
              indexDiskSize_ = input.readInt64();
              bitField0_ |= 0x00002000;
              break;
            } // case 112
            case 122: {
              io.datafibre.fibre.proto.ZoneMapOfRowset m =
                  input.readMessage(
                      io.datafibre.fibre.proto.ZoneMapOfRowset.PARSER,
                      extensionRegistry);
              if (zoneMapsBuilder_ == null) {
                ensureZoneMapsIsMutable();
                zoneMaps_.add(m);
              } else {
                zoneMapsBuilder_.addMessage(m);
              }
              break;
            } // case 122
            case 130: {
              input.readMessage(
                  getDeletePredicateFieldBuilder().getBuilder(),
                  extensionRegistry);
              bitField0_ |= 0x00008000;
              break;
            } // case 130
            case 136: {
              empty_ = input.readBool();
              bitField0_ |= 0x00010000;
              break;
            } // case 136
            case 146: {
              input.readMessage(
                  getLoadIdFieldBuilder().getBuilder(),
                  extensionRegistry);
              bitField0_ |= 0x00020000;
              break;
            } // case 146
            case 152: {
              deleteFlag_ = input.readBool();
              bitField0_ |= 0x00040000;
              break;
            } // case 152
            case 160: {
              creationTime_ = input.readInt64();
              bitField0_ |= 0x00080000;
              break;
            } // case 160
            case 170: {
              input.readMessage(
                  getTabletUidFieldBuilder().getBuilder(),
                  extensionRegistry);
              bitField0_ |= 0x00100000;
              break;
            } // case 170
            case 176: {
              numSegments_ = input.readInt64();
              bitField0_ |= 0x00200000;
              break;
            } // case 176
            case 186: {
              rowsetId_ = input.readBytes();
              bitField0_ |= 0x00400000;
              break;
            } // case 186
            case 408: {
              int tmpRaw = input.readEnum();
              io.datafibre.fibre.proto.SegmentsOverlapPB tmpValue =
                  io.datafibre.fibre.proto.SegmentsOverlapPB.forNumber(tmpRaw);
              if (tmpValue == null) {
                mergeUnknownVarintField(51, tmpRaw);
              } else {
                segmentsOverlapPb_ = tmpRaw;
                bitField0_ |= 0x00800000;
              }
              break;
            } // case 408
            case 416: {
              rowsetSegId_ = input.readUInt32();
              bitField0_ |= 0x01000000;
              break;
            } // case 416
            case 424: {
              numDeleteFiles_ = input.readUInt32();
              bitField0_ |= 0x02000000;
              break;
            } // case 424
            case 432: {
              totalRowSize_ = input.readInt64();
              bitField0_ |= 0x04000000;
              break;
            } // case 432
            case 442: {
              input.readMessage(
                  getTxnMetaFieldBuilder().getBuilder(),
                  extensionRegistry);
              bitField0_ |= 0x08000000;
              break;
            } // case 442
            case 448: {
              int v = input.readUInt32();
              ensureDelfileIdxesIsMutable();
              delfileIdxes_.addInt(v);
              break;
            } // case 448
            case 450: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              ensureDelfileIdxesIsMutable();
              while (input.getBytesUntilLimit() > 0) {
                delfileIdxes_.addInt(input.readUInt32());
              }
              input.popLimit(limit);
              break;
            } // case 450
            case 456: {
              numUpdateFiles_ = input.readUInt32();
              bitField0_ |= 0x20000000;
              break;
            } // case 456
            case 464: {
              totalUpdateRowSize_ = input.readInt64();
              bitField0_ |= 0x40000000;
              break;
            } // case 464
            case 472: {
              partialSchemaChange_ = input.readBool();
              bitField0_ |= 0x80000000;
              break;
            } // case 472
            case 482: {
              input.readMessage(
                  getTabletSchemaFieldBuilder().getBuilder(),
                  extensionRegistry);
              bitField1_ |= 0x00000001;
              break;
            } // case 482
            case 488: {
              maxCompactInputRowsetId_ = input.readUInt32();
              bitField1_ |= 0x00000002;
              break;
            } // case 488
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int bitField0_;
    private int bitField1_;

    private long deprecatedRowsetId_ ;
    /**
     * <code>required int64 deprecated_rowset_id = 1;</code>
     * @return Whether the deprecatedRowsetId field is set.
     */
    @java.lang.Override
    public boolean hasDeprecatedRowsetId() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <code>required int64 deprecated_rowset_id = 1;</code>
     * @return The deprecatedRowsetId.
     */
    @java.lang.Override
    public long getDeprecatedRowsetId() {
      return deprecatedRowsetId_;
    }
    /**
     * <code>required int64 deprecated_rowset_id = 1;</code>
     * @param value The deprecatedRowsetId to set.
     * @return This builder for chaining.
     */
    public Builder setDeprecatedRowsetId(long value) {
      bitField0_ |= 0x00000001;
      deprecatedRowsetId_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>required int64 deprecated_rowset_id = 1;</code>
     * @return This builder for chaining.
     */
    public Builder clearDeprecatedRowsetId() {
      bitField0_ = (bitField0_ & ~0x00000001);
      deprecatedRowsetId_ = 0L;
      onChanged();
      return this;
    }

    private long partitionId_ ;
    /**
     * <code>optional int64 partition_id = 2;</code>
     * @return Whether the partitionId field is set.
     */
    @java.lang.Override
    public boolean hasPartitionId() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <code>optional int64 partition_id = 2;</code>
     * @return The partitionId.
     */
    @java.lang.Override
    public long getPartitionId() {
      return partitionId_;
    }
    /**
     * <code>optional int64 partition_id = 2;</code>
     * @param value The partitionId to set.
     * @return This builder for chaining.
     */
    public Builder setPartitionId(long value) {
      bitField0_ |= 0x00000002;
      partitionId_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>optional int64 partition_id = 2;</code>
     * @return This builder for chaining.
     */
    public Builder clearPartitionId() {
      bitField0_ = (bitField0_ & ~0x00000002);
      partitionId_ = 0L;
      onChanged();
      return this;
    }

    private long tabletId_ ;
    /**
     * <code>optional int64 tablet_id = 3;</code>
     * @return Whether the tabletId field is set.
     */
    @java.lang.Override
    public boolean hasTabletId() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <code>optional int64 tablet_id = 3;</code>
     * @return The tabletId.
     */
    @java.lang.Override
    public long getTabletId() {
      return tabletId_;
    }
    /**
     * <code>optional int64 tablet_id = 3;</code>
     * @param value The tabletId to set.
     * @return This builder for chaining.
     */
    public Builder setTabletId(long value) {
      bitField0_ |= 0x00000004;
      tabletId_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>optional int64 tablet_id = 3;</code>
     * @return This builder for chaining.
     */
    public Builder clearTabletId() {
      bitField0_ = (bitField0_ & ~0x00000004);
      tabletId_ = 0L;
      onChanged();
      return this;
    }

    private long txnId_ ;
    /**
     * <pre>
     * only for pending rowset
     * </pre>
     *
     * <code>optional int64 txn_id = 4;</code>
     * @return Whether the txnId field is set.
     */
    @java.lang.Override
    public boolean hasTxnId() {
      return ((bitField0_ & 0x00000008) != 0);
    }
    /**
     * <pre>
     * only for pending rowset
     * </pre>
     *
     * <code>optional int64 txn_id = 4;</code>
     * @return The txnId.
     */
    @java.lang.Override
    public long getTxnId() {
      return txnId_;
    }
    /**
     * <pre>
     * only for pending rowset
     * </pre>
     *
     * <code>optional int64 txn_id = 4;</code>
     * @param value The txnId to set.
     * @return This builder for chaining.
     */
    public Builder setTxnId(long value) {
      bitField0_ |= 0x00000008;
      txnId_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * only for pending rowset
     * </pre>
     *
     * <code>optional int64 txn_id = 4;</code>
     * @return This builder for chaining.
     */
    public Builder clearTxnId() {
      bitField0_ = (bitField0_ & ~0x00000008);
      txnId_ = 0L;
      onChanged();
      return this;
    }

    private int tabletSchemaHash_ ;
    /**
     * <pre>
     * tablet id and schema hash could find tablet
     * </pre>
     *
     * <code>optional int32 tablet_schema_hash = 5;</code>
     * @return Whether the tabletSchemaHash field is set.
     */
    @java.lang.Override
    public boolean hasTabletSchemaHash() {
      return ((bitField0_ & 0x00000010) != 0);
    }
    /**
     * <pre>
     * tablet id and schema hash could find tablet
     * </pre>
     *
     * <code>optional int32 tablet_schema_hash = 5;</code>
     * @return The tabletSchemaHash.
     */
    @java.lang.Override
    public int getTabletSchemaHash() {
      return tabletSchemaHash_;
    }
    /**
     * <pre>
     * tablet id and schema hash could find tablet
     * </pre>
     *
     * <code>optional int32 tablet_schema_hash = 5;</code>
     * @param value The tabletSchemaHash to set.
     * @return This builder for chaining.
     */
    public Builder setTabletSchemaHash(int value) {
      bitField0_ |= 0x00000010;
      tabletSchemaHash_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * tablet id and schema hash could find tablet
     * </pre>
     *
     * <code>optional int32 tablet_schema_hash = 5;</code>
     * @return This builder for chaining.
     */
    public Builder clearTabletSchemaHash() {
      bitField0_ = (bitField0_ & ~0x00000010);
      tabletSchemaHash_ = 0;
      onChanged();
      return this;
    }

    private int rowsetType_ = 1;
    /**
     * <pre>
     * deprecated
     * </pre>
     *
     * <code>optional .starrocks.RowsetTypePB rowset_type = 6 [default = BETA_ROWSET];</code>
     * @return Whether the rowsetType field is set.
     */
    @java.lang.Override public boolean hasRowsetType() {
      return ((bitField0_ & 0x00000020) != 0);
    }
    /**
     * <pre>
     * deprecated
     * </pre>
     *
     * <code>optional .starrocks.RowsetTypePB rowset_type = 6 [default = BETA_ROWSET];</code>
     * @return The rowsetType.
     */
    @java.lang.Override
    public io.datafibre.fibre.proto.RowsetTypePB getRowsetType() {
      @SuppressWarnings("deprecation")
      io.datafibre.fibre.proto.RowsetTypePB result = io.datafibre.fibre.proto.RowsetTypePB.valueOf(rowsetType_);
      return result == null ? io.datafibre.fibre.proto.RowsetTypePB.BETA_ROWSET : result;
    }
    /**
     * <pre>
     * deprecated
     * </pre>
     *
     * <code>optional .starrocks.RowsetTypePB rowset_type = 6 [default = BETA_ROWSET];</code>
     * @param value The rowsetType to set.
     * @return This builder for chaining.
     */
    public Builder setRowsetType(io.datafibre.fibre.proto.RowsetTypePB value) {
      if (value == null) {
        throw new NullPointerException();
      }
      bitField0_ |= 0x00000020;
      rowsetType_ = value.getNumber();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * deprecated
     * </pre>
     *
     * <code>optional .starrocks.RowsetTypePB rowset_type = 6 [default = BETA_ROWSET];</code>
     * @return This builder for chaining.
     */
    public Builder clearRowsetType() {
      bitField0_ = (bitField0_ & ~0x00000020);
      rowsetType_ = 1;
      onChanged();
      return this;
    }

    private int rowsetState_ = 0;
    /**
     * <code>optional .starrocks.RowsetStatePB rowset_state = 7;</code>
     * @return Whether the rowsetState field is set.
     */
    @java.lang.Override public boolean hasRowsetState() {
      return ((bitField0_ & 0x00000040) != 0);
    }
    /**
     * <code>optional .starrocks.RowsetStatePB rowset_state = 7;</code>
     * @return The rowsetState.
     */
    @java.lang.Override
    public io.datafibre.fibre.proto.RowsetStatePB getRowsetState() {
      @SuppressWarnings("deprecation")
      io.datafibre.fibre.proto.RowsetStatePB result = io.datafibre.fibre.proto.RowsetStatePB.valueOf(rowsetState_);
      return result == null ? io.datafibre.fibre.proto.RowsetStatePB.PREPARED : result;
    }
    /**
     * <code>optional .starrocks.RowsetStatePB rowset_state = 7;</code>
     * @param value The rowsetState to set.
     * @return This builder for chaining.
     */
    public Builder setRowsetState(io.datafibre.fibre.proto.RowsetStatePB value) {
      if (value == null) {
        throw new NullPointerException();
      }
      bitField0_ |= 0x00000040;
      rowsetState_ = value.getNumber();
      onChanged();
      return this;
    }
    /**
     * <code>optional .starrocks.RowsetStatePB rowset_state = 7;</code>
     * @return This builder for chaining.
     */
    public Builder clearRowsetState() {
      bitField0_ = (bitField0_ & ~0x00000040);
      rowsetState_ = 0;
      onChanged();
      return this;
    }

    private long startVersion_ ;
    /**
     * <pre>
     * only for visible rowset.
     * </pre>
     *
     * <code>optional int64 start_version = 8;</code>
     * @return Whether the startVersion field is set.
     */
    @java.lang.Override
    public boolean hasStartVersion() {
      return ((bitField0_ & 0x00000080) != 0);
    }
    /**
     * <pre>
     * only for visible rowset.
     * </pre>
     *
     * <code>optional int64 start_version = 8;</code>
     * @return The startVersion.
     */
    @java.lang.Override
    public long getStartVersion() {
      return startVersion_;
    }
    /**
     * <pre>
     * only for visible rowset.
     * </pre>
     *
     * <code>optional int64 start_version = 8;</code>
     * @param value The startVersion to set.
     * @return This builder for chaining.
     */
    public Builder setStartVersion(long value) {
      bitField0_ |= 0x00000080;
      startVersion_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * only for visible rowset.
     * </pre>
     *
     * <code>optional int64 start_version = 8;</code>
     * @return This builder for chaining.
     */
    public Builder clearStartVersion() {
      bitField0_ = (bitField0_ & ~0x00000080);
      startVersion_ = 0L;
      onChanged();
      return this;
    }

    private long endVersion_ ;
    /**
     * <pre>
     * only for visible rowset.
     * </pre>
     *
     * <code>optional int64 end_version = 9;</code>
     * @return Whether the endVersion field is set.
     */
    @java.lang.Override
    public boolean hasEndVersion() {
      return ((bitField0_ & 0x00000100) != 0);
    }
    /**
     * <pre>
     * only for visible rowset.
     * </pre>
     *
     * <code>optional int64 end_version = 9;</code>
     * @return The endVersion.
     */
    @java.lang.Override
    public long getEndVersion() {
      return endVersion_;
    }
    /**
     * <pre>
     * only for visible rowset.
     * </pre>
     *
     * <code>optional int64 end_version = 9;</code>
     * @param value The endVersion to set.
     * @return This builder for chaining.
     */
    public Builder setEndVersion(long value) {
      bitField0_ |= 0x00000100;
      endVersion_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * only for visible rowset.
     * </pre>
     *
     * <code>optional int64 end_version = 9;</code>
     * @return This builder for chaining.
     */
    public Builder clearEndVersion() {
      bitField0_ = (bitField0_ & ~0x00000100);
      endVersion_ = 0L;
      onChanged();
      return this;
    }

    private long versionHash_ ;
    /**
     * <pre>
     * only for visible rowset.
     * </pre>
     *
     * <code>optional int64 version_hash = 10 [deprecated = true];</code>
     * @deprecated starrocks.RowsetMetaPB.version_hash is deprecated.
     *     See olap_file.proto;l=125
     * @return Whether the versionHash field is set.
     */
    @java.lang.Override
    @java.lang.Deprecated public boolean hasVersionHash() {
      return ((bitField0_ & 0x00000200) != 0);
    }
    /**
     * <pre>
     * only for visible rowset.
     * </pre>
     *
     * <code>optional int64 version_hash = 10 [deprecated = true];</code>
     * @deprecated starrocks.RowsetMetaPB.version_hash is deprecated.
     *     See olap_file.proto;l=125
     * @return The versionHash.
     */
    @java.lang.Override
    @java.lang.Deprecated public long getVersionHash() {
      return versionHash_;
    }
    /**
     * <pre>
     * only for visible rowset.
     * </pre>
     *
     * <code>optional int64 version_hash = 10 [deprecated = true];</code>
     * @deprecated starrocks.RowsetMetaPB.version_hash is deprecated.
     *     See olap_file.proto;l=125
     * @param value The versionHash to set.
     * @return This builder for chaining.
     */
    @java.lang.Deprecated public Builder setVersionHash(long value) {
      bitField0_ |= 0x00000200;
      versionHash_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * only for visible rowset.
     * </pre>
     *
     * <code>optional int64 version_hash = 10 [deprecated = true];</code>
     * @deprecated starrocks.RowsetMetaPB.version_hash is deprecated.
     *     See olap_file.proto;l=125
     * @return This builder for chaining.
     */
    @java.lang.Deprecated public Builder clearVersionHash() {
      bitField0_ = (bitField0_ & ~0x00000200);
      versionHash_ = 0L;
      onChanged();
      return this;
    }

    private long numRows_ ;
    /**
     * <pre>
     * total number of rows.
     * </pre>
     *
     * <code>optional int64 num_rows = 11;</code>
     * @return Whether the numRows field is set.
     */
    @java.lang.Override
    public boolean hasNumRows() {
      return ((bitField0_ & 0x00000400) != 0);
    }
    /**
     * <pre>
     * total number of rows.
     * </pre>
     *
     * <code>optional int64 num_rows = 11;</code>
     * @return The numRows.
     */
    @java.lang.Override
    public long getNumRows() {
      return numRows_;
    }
    /**
     * <pre>
     * total number of rows.
     * </pre>
     *
     * <code>optional int64 num_rows = 11;</code>
     * @param value The numRows to set.
     * @return This builder for chaining.
     */
    public Builder setNumRows(long value) {
      bitField0_ |= 0x00000400;
      numRows_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * total number of rows.
     * </pre>
     *
     * <code>optional int64 num_rows = 11;</code>
     * @return This builder for chaining.
     */
    public Builder clearNumRows() {
      bitField0_ = (bitField0_ & ~0x00000400);
      numRows_ = 0L;
      onChanged();
      return this;
    }

    private long totalDiskSize_ ;
    /**
     * <pre>
     * calculated by index + data
     * </pre>
     *
     * <code>optional int64 total_disk_size = 12;</code>
     * @return Whether the totalDiskSize field is set.
     */
    @java.lang.Override
    public boolean hasTotalDiskSize() {
      return ((bitField0_ & 0x00000800) != 0);
    }
    /**
     * <pre>
     * calculated by index + data
     * </pre>
     *
     * <code>optional int64 total_disk_size = 12;</code>
     * @return The totalDiskSize.
     */
    @java.lang.Override
    public long getTotalDiskSize() {
      return totalDiskSize_;
    }
    /**
     * <pre>
     * calculated by index + data
     * </pre>
     *
     * <code>optional int64 total_disk_size = 12;</code>
     * @param value The totalDiskSize to set.
     * @return This builder for chaining.
     */
    public Builder setTotalDiskSize(long value) {
      bitField0_ |= 0x00000800;
      totalDiskSize_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * calculated by index + data
     * </pre>
     *
     * <code>optional int64 total_disk_size = 12;</code>
     * @return This builder for chaining.
     */
    public Builder clearTotalDiskSize() {
      bitField0_ = (bitField0_ & ~0x00000800);
      totalDiskSize_ = 0L;
      onChanged();
      return this;
    }

    private long dataDiskSize_ ;
    /**
     * <pre>
     * calculated sum(segmentgroup.data_size)
     * </pre>
     *
     * <code>optional int64 data_disk_size = 13;</code>
     * @return Whether the dataDiskSize field is set.
     */
    @java.lang.Override
    public boolean hasDataDiskSize() {
      return ((bitField0_ & 0x00001000) != 0);
    }
    /**
     * <pre>
     * calculated sum(segmentgroup.data_size)
     * </pre>
     *
     * <code>optional int64 data_disk_size = 13;</code>
     * @return The dataDiskSize.
     */
    @java.lang.Override
    public long getDataDiskSize() {
      return dataDiskSize_;
    }
    /**
     * <pre>
     * calculated sum(segmentgroup.data_size)
     * </pre>
     *
     * <code>optional int64 data_disk_size = 13;</code>
     * @param value The dataDiskSize to set.
     * @return This builder for chaining.
     */
    public Builder setDataDiskSize(long value) {
      bitField0_ |= 0x00001000;
      dataDiskSize_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * calculated sum(segmentgroup.data_size)
     * </pre>
     *
     * <code>optional int64 data_disk_size = 13;</code>
     * @return This builder for chaining.
     */
    public Builder clearDataDiskSize() {
      bitField0_ = (bitField0_ & ~0x00001000);
      dataDiskSize_ = 0L;
      onChanged();
      return this;
    }

    private long indexDiskSize_ ;
    /**
     * <pre>
     * calculated sum(segmentgroup.index_size)
     * </pre>
     *
     * <code>optional int64 index_disk_size = 14;</code>
     * @return Whether the indexDiskSize field is set.
     */
    @java.lang.Override
    public boolean hasIndexDiskSize() {
      return ((bitField0_ & 0x00002000) != 0);
    }
    /**
     * <pre>
     * calculated sum(segmentgroup.index_size)
     * </pre>
     *
     * <code>optional int64 index_disk_size = 14;</code>
     * @return The indexDiskSize.
     */
    @java.lang.Override
    public long getIndexDiskSize() {
      return indexDiskSize_;
    }
    /**
     * <pre>
     * calculated sum(segmentgroup.index_size)
     * </pre>
     *
     * <code>optional int64 index_disk_size = 14;</code>
     * @param value The indexDiskSize to set.
     * @return This builder for chaining.
     */
    public Builder setIndexDiskSize(long value) {
      bitField0_ |= 0x00002000;
      indexDiskSize_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * calculated sum(segmentgroup.index_size)
     * </pre>
     *
     * <code>optional int64 index_disk_size = 14;</code>
     * @return This builder for chaining.
     */
    public Builder clearIndexDiskSize() {
      bitField0_ = (bitField0_ & ~0x00002000);
      indexDiskSize_ = 0L;
      onChanged();
      return this;
    }

    private java.util.List<io.datafibre.fibre.proto.ZoneMapOfRowset> zoneMaps_ =
      java.util.Collections.emptyList();
    private void ensureZoneMapsIsMutable() {
      if (!((bitField0_ & 0x00004000) != 0)) {
        zoneMaps_ = new java.util.ArrayList<io.datafibre.fibre.proto.ZoneMapOfRowset>(zoneMaps_);
        bitField0_ |= 0x00004000;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        io.datafibre.fibre.proto.ZoneMapOfRowset, io.datafibre.fibre.proto.ZoneMapOfRowset.Builder, io.datafibre.fibre.proto.ZoneMapOfRowsetOrBuilder> zoneMapsBuilder_;

    /**
     * <pre>
     * rowset level column min/max/null statistics, not not used currently
     * </pre>
     *
     * <code>repeated .starrocks.ZoneMapOfRowset zone_maps = 15 [deprecated = true];</code>
     */
    @java.lang.Deprecated public java.util.List<io.datafibre.fibre.proto.ZoneMapOfRowset> getZoneMapsList() {
      if (zoneMapsBuilder_ == null) {
        return java.util.Collections.unmodifiableList(zoneMaps_);
      } else {
        return zoneMapsBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     * rowset level column min/max/null statistics, not not used currently
     * </pre>
     *
     * <code>repeated .starrocks.ZoneMapOfRowset zone_maps = 15 [deprecated = true];</code>
     */
    @java.lang.Deprecated public int getZoneMapsCount() {
      if (zoneMapsBuilder_ == null) {
        return zoneMaps_.size();
      } else {
        return zoneMapsBuilder_.getCount();
      }
    }
    /**
     * <pre>
     * rowset level column min/max/null statistics, not not used currently
     * </pre>
     *
     * <code>repeated .starrocks.ZoneMapOfRowset zone_maps = 15 [deprecated = true];</code>
     */
    @java.lang.Deprecated public io.datafibre.fibre.proto.ZoneMapOfRowset getZoneMaps(int index) {
      if (zoneMapsBuilder_ == null) {
        return zoneMaps_.get(index);
      } else {
        return zoneMapsBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     * rowset level column min/max/null statistics, not not used currently
     * </pre>
     *
     * <code>repeated .starrocks.ZoneMapOfRowset zone_maps = 15 [deprecated = true];</code>
     */
    @java.lang.Deprecated public Builder setZoneMaps(
        int index, io.datafibre.fibre.proto.ZoneMapOfRowset value) {
      if (zoneMapsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureZoneMapsIsMutable();
        zoneMaps_.set(index, value);
        onChanged();
      } else {
        zoneMapsBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * rowset level column min/max/null statistics, not not used currently
     * </pre>
     *
     * <code>repeated .starrocks.ZoneMapOfRowset zone_maps = 15 [deprecated = true];</code>
     */
    @java.lang.Deprecated public Builder setZoneMaps(
        int index, io.datafibre.fibre.proto.ZoneMapOfRowset.Builder builderForValue) {
      if (zoneMapsBuilder_ == null) {
        ensureZoneMapsIsMutable();
        zoneMaps_.set(index, builderForValue.build());
        onChanged();
      } else {
        zoneMapsBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * rowset level column min/max/null statistics, not not used currently
     * </pre>
     *
     * <code>repeated .starrocks.ZoneMapOfRowset zone_maps = 15 [deprecated = true];</code>
     */
    @java.lang.Deprecated public Builder addZoneMaps(io.datafibre.fibre.proto.ZoneMapOfRowset value) {
      if (zoneMapsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureZoneMapsIsMutable();
        zoneMaps_.add(value);
        onChanged();
      } else {
        zoneMapsBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     * rowset level column min/max/null statistics, not not used currently
     * </pre>
     *
     * <code>repeated .starrocks.ZoneMapOfRowset zone_maps = 15 [deprecated = true];</code>
     */
    @java.lang.Deprecated public Builder addZoneMaps(
        int index, io.datafibre.fibre.proto.ZoneMapOfRowset value) {
      if (zoneMapsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureZoneMapsIsMutable();
        zoneMaps_.add(index, value);
        onChanged();
      } else {
        zoneMapsBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * rowset level column min/max/null statistics, not not used currently
     * </pre>
     *
     * <code>repeated .starrocks.ZoneMapOfRowset zone_maps = 15 [deprecated = true];</code>
     */
    @java.lang.Deprecated public Builder addZoneMaps(
        io.datafibre.fibre.proto.ZoneMapOfRowset.Builder builderForValue) {
      if (zoneMapsBuilder_ == null) {
        ensureZoneMapsIsMutable();
        zoneMaps_.add(builderForValue.build());
        onChanged();
      } else {
        zoneMapsBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * rowset level column min/max/null statistics, not not used currently
     * </pre>
     *
     * <code>repeated .starrocks.ZoneMapOfRowset zone_maps = 15 [deprecated = true];</code>
     */
    @java.lang.Deprecated public Builder addZoneMaps(
        int index, io.datafibre.fibre.proto.ZoneMapOfRowset.Builder builderForValue) {
      if (zoneMapsBuilder_ == null) {
        ensureZoneMapsIsMutable();
        zoneMaps_.add(index, builderForValue.build());
        onChanged();
      } else {
        zoneMapsBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * rowset level column min/max/null statistics, not not used currently
     * </pre>
     *
     * <code>repeated .starrocks.ZoneMapOfRowset zone_maps = 15 [deprecated = true];</code>
     */
    @java.lang.Deprecated public Builder addAllZoneMaps(
        java.lang.Iterable<? extends io.datafibre.fibre.proto.ZoneMapOfRowset> values) {
      if (zoneMapsBuilder_ == null) {
        ensureZoneMapsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, zoneMaps_);
        onChanged();
      } else {
        zoneMapsBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     * rowset level column min/max/null statistics, not not used currently
     * </pre>
     *
     * <code>repeated .starrocks.ZoneMapOfRowset zone_maps = 15 [deprecated = true];</code>
     */
    @java.lang.Deprecated public Builder clearZoneMaps() {
      if (zoneMapsBuilder_ == null) {
        zoneMaps_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00004000);
        onChanged();
      } else {
        zoneMapsBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * rowset level column min/max/null statistics, not not used currently
     * </pre>
     *
     * <code>repeated .starrocks.ZoneMapOfRowset zone_maps = 15 [deprecated = true];</code>
     */
    @java.lang.Deprecated public Builder removeZoneMaps(int index) {
      if (zoneMapsBuilder_ == null) {
        ensureZoneMapsIsMutable();
        zoneMaps_.remove(index);
        onChanged();
      } else {
        zoneMapsBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     * rowset level column min/max/null statistics, not not used currently
     * </pre>
     *
     * <code>repeated .starrocks.ZoneMapOfRowset zone_maps = 15 [deprecated = true];</code>
     */
    @java.lang.Deprecated public io.datafibre.fibre.proto.ZoneMapOfRowset.Builder getZoneMapsBuilder(
        int index) {
      return getZoneMapsFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     * rowset level column min/max/null statistics, not not used currently
     * </pre>
     *
     * <code>repeated .starrocks.ZoneMapOfRowset zone_maps = 15 [deprecated = true];</code>
     */
    @java.lang.Deprecated public io.datafibre.fibre.proto.ZoneMapOfRowsetOrBuilder getZoneMapsOrBuilder(
        int index) {
      if (zoneMapsBuilder_ == null) {
        return zoneMaps_.get(index);  } else {
        return zoneMapsBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     * rowset level column min/max/null statistics, not not used currently
     * </pre>
     *
     * <code>repeated .starrocks.ZoneMapOfRowset zone_maps = 15 [deprecated = true];</code>
     */
    @java.lang.Deprecated public java.util.List<? extends io.datafibre.fibre.proto.ZoneMapOfRowsetOrBuilder>
         getZoneMapsOrBuilderList() {
      if (zoneMapsBuilder_ != null) {
        return zoneMapsBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(zoneMaps_);
      }
    }
    /**
     * <pre>
     * rowset level column min/max/null statistics, not not used currently
     * </pre>
     *
     * <code>repeated .starrocks.ZoneMapOfRowset zone_maps = 15 [deprecated = true];</code>
     */
    @java.lang.Deprecated public io.datafibre.fibre.proto.ZoneMapOfRowset.Builder addZoneMapsBuilder() {
      return getZoneMapsFieldBuilder().addBuilder(
          io.datafibre.fibre.proto.ZoneMapOfRowset.getDefaultInstance());
    }
    /**
     * <pre>
     * rowset level column min/max/null statistics, not not used currently
     * </pre>
     *
     * <code>repeated .starrocks.ZoneMapOfRowset zone_maps = 15 [deprecated = true];</code>
     */
    @java.lang.Deprecated public io.datafibre.fibre.proto.ZoneMapOfRowset.Builder addZoneMapsBuilder(
        int index) {
      return getZoneMapsFieldBuilder().addBuilder(
          index, io.datafibre.fibre.proto.ZoneMapOfRowset.getDefaultInstance());
    }
    /**
     * <pre>
     * rowset level column min/max/null statistics, not not used currently
     * </pre>
     *
     * <code>repeated .starrocks.ZoneMapOfRowset zone_maps = 15 [deprecated = true];</code>
     */
    @java.lang.Deprecated public java.util.List<io.datafibre.fibre.proto.ZoneMapOfRowset.Builder>
         getZoneMapsBuilderList() {
      return getZoneMapsFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        io.datafibre.fibre.proto.ZoneMapOfRowset, io.datafibre.fibre.proto.ZoneMapOfRowset.Builder, io.datafibre.fibre.proto.ZoneMapOfRowsetOrBuilder>
        getZoneMapsFieldBuilder() {
      if (zoneMapsBuilder_ == null) {
        zoneMapsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            io.datafibre.fibre.proto.ZoneMapOfRowset, io.datafibre.fibre.proto.ZoneMapOfRowset.Builder, io.datafibre.fibre.proto.ZoneMapOfRowsetOrBuilder>(
                zoneMaps_,
                ((bitField0_ & 0x00004000) != 0),
                getParentForChildren(),
                isClean());
        zoneMaps_ = null;
      }
      return zoneMapsBuilder_;
    }

    private io.datafibre.fibre.proto.DeletePredicatePB deletePredicate_;
    private com.google.protobuf.SingleFieldBuilderV3<
        io.datafibre.fibre.proto.DeletePredicatePB, io.datafibre.fibre.proto.DeletePredicatePB.Builder, io.datafibre.fibre.proto.DeletePredicatePBOrBuilder> deletePredicateBuilder_;
    /**
     * <code>optional .starrocks.DeletePredicatePB delete_predicate = 16;</code>
     * @return Whether the deletePredicate field is set.
     */
    public boolean hasDeletePredicate() {
      return ((bitField0_ & 0x00008000) != 0);
    }
    /**
     * <code>optional .starrocks.DeletePredicatePB delete_predicate = 16;</code>
     * @return The deletePredicate.
     */
    public io.datafibre.fibre.proto.DeletePredicatePB getDeletePredicate() {
      if (deletePredicateBuilder_ == null) {
        return deletePredicate_ == null ? io.datafibre.fibre.proto.DeletePredicatePB.getDefaultInstance() : deletePredicate_;
      } else {
        return deletePredicateBuilder_.getMessage();
      }
    }
    /**
     * <code>optional .starrocks.DeletePredicatePB delete_predicate = 16;</code>
     */
    public Builder setDeletePredicate(io.datafibre.fibre.proto.DeletePredicatePB value) {
      if (deletePredicateBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        deletePredicate_ = value;
        onChanged();
      } else {
        deletePredicateBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00008000;
      return this;
    }
    /**
     * <code>optional .starrocks.DeletePredicatePB delete_predicate = 16;</code>
     */
    public Builder setDeletePredicate(
        io.datafibre.fibre.proto.DeletePredicatePB.Builder builderForValue) {
      if (deletePredicateBuilder_ == null) {
        deletePredicate_ = builderForValue.build();
        onChanged();
      } else {
        deletePredicateBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00008000;
      return this;
    }
    /**
     * <code>optional .starrocks.DeletePredicatePB delete_predicate = 16;</code>
     */
    public Builder mergeDeletePredicate(io.datafibre.fibre.proto.DeletePredicatePB value) {
      if (deletePredicateBuilder_ == null) {
        if (((bitField0_ & 0x00008000) != 0) &&
            deletePredicate_ != null &&
            deletePredicate_ != io.datafibre.fibre.proto.DeletePredicatePB.getDefaultInstance()) {
          deletePredicate_ =
            io.datafibre.fibre.proto.DeletePredicatePB.newBuilder(deletePredicate_).mergeFrom(value).buildPartial();
        } else {
          deletePredicate_ = value;
        }
        onChanged();
      } else {
        deletePredicateBuilder_.mergeFrom(value);
      }
      bitField0_ |= 0x00008000;
      return this;
    }
    /**
     * <code>optional .starrocks.DeletePredicatePB delete_predicate = 16;</code>
     */
    public Builder clearDeletePredicate() {
      if (deletePredicateBuilder_ == null) {
        deletePredicate_ = null;
        onChanged();
      } else {
        deletePredicateBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00008000);
      return this;
    }
    /**
     * <code>optional .starrocks.DeletePredicatePB delete_predicate = 16;</code>
     */
    public io.datafibre.fibre.proto.DeletePredicatePB.Builder getDeletePredicateBuilder() {
      bitField0_ |= 0x00008000;
      onChanged();
      return getDeletePredicateFieldBuilder().getBuilder();
    }
    /**
     * <code>optional .starrocks.DeletePredicatePB delete_predicate = 16;</code>
     */
    public io.datafibre.fibre.proto.DeletePredicatePBOrBuilder getDeletePredicateOrBuilder() {
      if (deletePredicateBuilder_ != null) {
        return deletePredicateBuilder_.getMessageOrBuilder();
      } else {
        return deletePredicate_ == null ?
            io.datafibre.fibre.proto.DeletePredicatePB.getDefaultInstance() : deletePredicate_;
      }
    }
    /**
     * <code>optional .starrocks.DeletePredicatePB delete_predicate = 16;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        io.datafibre.fibre.proto.DeletePredicatePB, io.datafibre.fibre.proto.DeletePredicatePB.Builder, io.datafibre.fibre.proto.DeletePredicatePBOrBuilder>
        getDeletePredicateFieldBuilder() {
      if (deletePredicateBuilder_ == null) {
        deletePredicateBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            io.datafibre.fibre.proto.DeletePredicatePB, io.datafibre.fibre.proto.DeletePredicatePB.Builder, io.datafibre.fibre.proto.DeletePredicatePBOrBuilder>(
                getDeletePredicate(),
                getParentForChildren(),
                isClean());
        deletePredicate_ = null;
      }
      return deletePredicateBuilder_;
    }

    private boolean empty_ ;
    /**
     * <pre>
     * calculated from segment group
     * </pre>
     *
     * <code>optional bool empty = 17;</code>
     * @return Whether the empty field is set.
     */
    @java.lang.Override
    public boolean hasEmpty() {
      return ((bitField0_ & 0x00010000) != 0);
    }
    /**
     * <pre>
     * calculated from segment group
     * </pre>
     *
     * <code>optional bool empty = 17;</code>
     * @return The empty.
     */
    @java.lang.Override
    public boolean getEmpty() {
      return empty_;
    }
    /**
     * <pre>
     * calculated from segment group
     * </pre>
     *
     * <code>optional bool empty = 17;</code>
     * @param value The empty to set.
     * @return This builder for chaining.
     */
    public Builder setEmpty(boolean value) {
      bitField0_ |= 0x00010000;
      empty_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * calculated from segment group
     * </pre>
     *
     * <code>optional bool empty = 17;</code>
     * @return This builder for chaining.
     */
    public Builder clearEmpty() {
      bitField0_ = (bitField0_ & ~0x00010000);
      empty_ = false;
      onChanged();
      return this;
    }

    private io.datafibre.fibre.proto.PUniqueId loadId_;
    private com.google.protobuf.SingleFieldBuilderV3<
        io.datafibre.fibre.proto.PUniqueId, io.datafibre.fibre.proto.PUniqueId.Builder, io.datafibre.fibre.proto.PUniqueIdOrBuilder> loadIdBuilder_;
    /**
     * <pre>
     * only for pending rowset
     * </pre>
     *
     * <code>optional .starrocks.PUniqueId load_id = 18;</code>
     * @return Whether the loadId field is set.
     */
    public boolean hasLoadId() {
      return ((bitField0_ & 0x00020000) != 0);
    }
    /**
     * <pre>
     * only for pending rowset
     * </pre>
     *
     * <code>optional .starrocks.PUniqueId load_id = 18;</code>
     * @return The loadId.
     */
    public io.datafibre.fibre.proto.PUniqueId getLoadId() {
      if (loadIdBuilder_ == null) {
        return loadId_ == null ? io.datafibre.fibre.proto.PUniqueId.getDefaultInstance() : loadId_;
      } else {
        return loadIdBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * only for pending rowset
     * </pre>
     *
     * <code>optional .starrocks.PUniqueId load_id = 18;</code>
     */
    public Builder setLoadId(io.datafibre.fibre.proto.PUniqueId value) {
      if (loadIdBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        loadId_ = value;
        onChanged();
      } else {
        loadIdBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00020000;
      return this;
    }
    /**
     * <pre>
     * only for pending rowset
     * </pre>
     *
     * <code>optional .starrocks.PUniqueId load_id = 18;</code>
     */
    public Builder setLoadId(
        io.datafibre.fibre.proto.PUniqueId.Builder builderForValue) {
      if (loadIdBuilder_ == null) {
        loadId_ = builderForValue.build();
        onChanged();
      } else {
        loadIdBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00020000;
      return this;
    }
    /**
     * <pre>
     * only for pending rowset
     * </pre>
     *
     * <code>optional .starrocks.PUniqueId load_id = 18;</code>
     */
    public Builder mergeLoadId(io.datafibre.fibre.proto.PUniqueId value) {
      if (loadIdBuilder_ == null) {
        if (((bitField0_ & 0x00020000) != 0) &&
            loadId_ != null &&
            loadId_ != io.datafibre.fibre.proto.PUniqueId.getDefaultInstance()) {
          loadId_ =
            io.datafibre.fibre.proto.PUniqueId.newBuilder(loadId_).mergeFrom(value).buildPartial();
        } else {
          loadId_ = value;
        }
        onChanged();
      } else {
        loadIdBuilder_.mergeFrom(value);
      }
      bitField0_ |= 0x00020000;
      return this;
    }
    /**
     * <pre>
     * only for pending rowset
     * </pre>
     *
     * <code>optional .starrocks.PUniqueId load_id = 18;</code>
     */
    public Builder clearLoadId() {
      if (loadIdBuilder_ == null) {
        loadId_ = null;
        onChanged();
      } else {
        loadIdBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00020000);
      return this;
    }
    /**
     * <pre>
     * only for pending rowset
     * </pre>
     *
     * <code>optional .starrocks.PUniqueId load_id = 18;</code>
     */
    public io.datafibre.fibre.proto.PUniqueId.Builder getLoadIdBuilder() {
      bitField0_ |= 0x00020000;
      onChanged();
      return getLoadIdFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * only for pending rowset
     * </pre>
     *
     * <code>optional .starrocks.PUniqueId load_id = 18;</code>
     */
    public io.datafibre.fibre.proto.PUniqueIdOrBuilder getLoadIdOrBuilder() {
      if (loadIdBuilder_ != null) {
        return loadIdBuilder_.getMessageOrBuilder();
      } else {
        return loadId_ == null ?
            io.datafibre.fibre.proto.PUniqueId.getDefaultInstance() : loadId_;
      }
    }
    /**
     * <pre>
     * only for pending rowset
     * </pre>
     *
     * <code>optional .starrocks.PUniqueId load_id = 18;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        io.datafibre.fibre.proto.PUniqueId, io.datafibre.fibre.proto.PUniqueId.Builder, io.datafibre.fibre.proto.PUniqueIdOrBuilder>
        getLoadIdFieldBuilder() {
      if (loadIdBuilder_ == null) {
        loadIdBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            io.datafibre.fibre.proto.PUniqueId, io.datafibre.fibre.proto.PUniqueId.Builder, io.datafibre.fibre.proto.PUniqueIdOrBuilder>(
                getLoadId(),
                getParentForChildren(),
                isClean());
        loadId_ = null;
      }
      return loadIdBuilder_;
    }

    private boolean deleteFlag_ ;
    /**
     * <pre>
     * not set, get from olap index header msg?
     * </pre>
     *
     * <code>optional bool delete_flag = 19;</code>
     * @return Whether the deleteFlag field is set.
     */
    @java.lang.Override
    public boolean hasDeleteFlag() {
      return ((bitField0_ & 0x00040000) != 0);
    }
    /**
     * <pre>
     * not set, get from olap index header msg?
     * </pre>
     *
     * <code>optional bool delete_flag = 19;</code>
     * @return The deleteFlag.
     */
    @java.lang.Override
    public boolean getDeleteFlag() {
      return deleteFlag_;
    }
    /**
     * <pre>
     * not set, get from olap index header msg?
     * </pre>
     *
     * <code>optional bool delete_flag = 19;</code>
     * @param value The deleteFlag to set.
     * @return This builder for chaining.
     */
    public Builder setDeleteFlag(boolean value) {
      bitField0_ |= 0x00040000;
      deleteFlag_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * not set, get from olap index header msg?
     * </pre>
     *
     * <code>optional bool delete_flag = 19;</code>
     * @return This builder for chaining.
     */
    public Builder clearDeleteFlag() {
      bitField0_ = (bitField0_ & ~0x00040000);
      deleteFlag_ = false;
      onChanged();
      return this;
    }

    private long creationTime_ ;
    /**
     * <code>optional int64 creation_time = 20;</code>
     * @return Whether the creationTime field is set.
     */
    @java.lang.Override
    public boolean hasCreationTime() {
      return ((bitField0_ & 0x00080000) != 0);
    }
    /**
     * <code>optional int64 creation_time = 20;</code>
     * @return The creationTime.
     */
    @java.lang.Override
    public long getCreationTime() {
      return creationTime_;
    }
    /**
     * <code>optional int64 creation_time = 20;</code>
     * @param value The creationTime to set.
     * @return This builder for chaining.
     */
    public Builder setCreationTime(long value) {
      bitField0_ |= 0x00080000;
      creationTime_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>optional int64 creation_time = 20;</code>
     * @return This builder for chaining.
     */
    public Builder clearCreationTime() {
      bitField0_ = (bitField0_ & ~0x00080000);
      creationTime_ = 0L;
      onChanged();
      return this;
    }

    private io.datafibre.fibre.proto.PUniqueId tabletUid_;
    private com.google.protobuf.SingleFieldBuilderV3<
        io.datafibre.fibre.proto.PUniqueId, io.datafibre.fibre.proto.PUniqueId.Builder, io.datafibre.fibre.proto.PUniqueIdOrBuilder> tabletUidBuilder_;
    /**
     * <code>optional .starrocks.PUniqueId tablet_uid = 21;</code>
     * @return Whether the tabletUid field is set.
     */
    public boolean hasTabletUid() {
      return ((bitField0_ & 0x00100000) != 0);
    }
    /**
     * <code>optional .starrocks.PUniqueId tablet_uid = 21;</code>
     * @return The tabletUid.
     */
    public io.datafibre.fibre.proto.PUniqueId getTabletUid() {
      if (tabletUidBuilder_ == null) {
        return tabletUid_ == null ? io.datafibre.fibre.proto.PUniqueId.getDefaultInstance() : tabletUid_;
      } else {
        return tabletUidBuilder_.getMessage();
      }
    }
    /**
     * <code>optional .starrocks.PUniqueId tablet_uid = 21;</code>
     */
    public Builder setTabletUid(io.datafibre.fibre.proto.PUniqueId value) {
      if (tabletUidBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        tabletUid_ = value;
        onChanged();
      } else {
        tabletUidBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00100000;
      return this;
    }
    /**
     * <code>optional .starrocks.PUniqueId tablet_uid = 21;</code>
     */
    public Builder setTabletUid(
        io.datafibre.fibre.proto.PUniqueId.Builder builderForValue) {
      if (tabletUidBuilder_ == null) {
        tabletUid_ = builderForValue.build();
        onChanged();
      } else {
        tabletUidBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00100000;
      return this;
    }
    /**
     * <code>optional .starrocks.PUniqueId tablet_uid = 21;</code>
     */
    public Builder mergeTabletUid(io.datafibre.fibre.proto.PUniqueId value) {
      if (tabletUidBuilder_ == null) {
        if (((bitField0_ & 0x00100000) != 0) &&
            tabletUid_ != null &&
            tabletUid_ != io.datafibre.fibre.proto.PUniqueId.getDefaultInstance()) {
          tabletUid_ =
            io.datafibre.fibre.proto.PUniqueId.newBuilder(tabletUid_).mergeFrom(value).buildPartial();
        } else {
          tabletUid_ = value;
        }
        onChanged();
      } else {
        tabletUidBuilder_.mergeFrom(value);
      }
      bitField0_ |= 0x00100000;
      return this;
    }
    /**
     * <code>optional .starrocks.PUniqueId tablet_uid = 21;</code>
     */
    public Builder clearTabletUid() {
      if (tabletUidBuilder_ == null) {
        tabletUid_ = null;
        onChanged();
      } else {
        tabletUidBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00100000);
      return this;
    }
    /**
     * <code>optional .starrocks.PUniqueId tablet_uid = 21;</code>
     */
    public io.datafibre.fibre.proto.PUniqueId.Builder getTabletUidBuilder() {
      bitField0_ |= 0x00100000;
      onChanged();
      return getTabletUidFieldBuilder().getBuilder();
    }
    /**
     * <code>optional .starrocks.PUniqueId tablet_uid = 21;</code>
     */
    public io.datafibre.fibre.proto.PUniqueIdOrBuilder getTabletUidOrBuilder() {
      if (tabletUidBuilder_ != null) {
        return tabletUidBuilder_.getMessageOrBuilder();
      } else {
        return tabletUid_ == null ?
            io.datafibre.fibre.proto.PUniqueId.getDefaultInstance() : tabletUid_;
      }
    }
    /**
     * <code>optional .starrocks.PUniqueId tablet_uid = 21;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        io.datafibre.fibre.proto.PUniqueId, io.datafibre.fibre.proto.PUniqueId.Builder, io.datafibre.fibre.proto.PUniqueIdOrBuilder>
        getTabletUidFieldBuilder() {
      if (tabletUidBuilder_ == null) {
        tabletUidBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            io.datafibre.fibre.proto.PUniqueId, io.datafibre.fibre.proto.PUniqueId.Builder, io.datafibre.fibre.proto.PUniqueIdOrBuilder>(
                getTabletUid(),
                getParentForChildren(),
                isClean());
        tabletUid_ = null;
      }
      return tabletUidBuilder_;
    }

    private long numSegments_ ;
    /**
     * <pre>
     * total number of segments
     * </pre>
     *
     * <code>optional int64 num_segments = 22;</code>
     * @return Whether the numSegments field is set.
     */
    @java.lang.Override
    public boolean hasNumSegments() {
      return ((bitField0_ & 0x00200000) != 0);
    }
    /**
     * <pre>
     * total number of segments
     * </pre>
     *
     * <code>optional int64 num_segments = 22;</code>
     * @return The numSegments.
     */
    @java.lang.Override
    public long getNumSegments() {
      return numSegments_;
    }
    /**
     * <pre>
     * total number of segments
     * </pre>
     *
     * <code>optional int64 num_segments = 22;</code>
     * @param value The numSegments to set.
     * @return This builder for chaining.
     */
    public Builder setNumSegments(long value) {
      bitField0_ |= 0x00200000;
      numSegments_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * total number of segments
     * </pre>
     *
     * <code>optional int64 num_segments = 22;</code>
     * @return This builder for chaining.
     */
    public Builder clearNumSegments() {
      bitField0_ = (bitField0_ & ~0x00200000);
      numSegments_ = 0L;
      onChanged();
      return this;
    }

    private java.lang.Object rowsetId_ = "";
    /**
     * <pre>
     * rowset id definition, it will replace required rowset id
     * </pre>
     *
     * <code>optional string rowset_id = 23;</code>
     * @return Whether the rowsetId field is set.
     */
    public boolean hasRowsetId() {
      return ((bitField0_ & 0x00400000) != 0);
    }
    /**
     * <pre>
     * rowset id definition, it will replace required rowset id
     * </pre>
     *
     * <code>optional string rowset_id = 23;</code>
     * @return The rowsetId.
     */
    public java.lang.String getRowsetId() {
      java.lang.Object ref = rowsetId_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          rowsetId_ = s;
        }
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * rowset id definition, it will replace required rowset id
     * </pre>
     *
     * <code>optional string rowset_id = 23;</code>
     * @return The bytes for rowsetId.
     */
    public com.google.protobuf.ByteString
        getRowsetIdBytes() {
      java.lang.Object ref = rowsetId_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        rowsetId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * rowset id definition, it will replace required rowset id
     * </pre>
     *
     * <code>optional string rowset_id = 23;</code>
     * @param value The rowsetId to set.
     * @return This builder for chaining.
     */
    public Builder setRowsetId(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00400000;
      rowsetId_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * rowset id definition, it will replace required rowset id
     * </pre>
     *
     * <code>optional string rowset_id = 23;</code>
     * @return This builder for chaining.
     */
    public Builder clearRowsetId() {
      bitField0_ = (bitField0_ & ~0x00400000);
      rowsetId_ = getDefaultInstance().getRowsetId();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * rowset id definition, it will replace required rowset id
     * </pre>
     *
     * <code>optional string rowset_id = 23;</code>
     * @param value The bytes for rowsetId to set.
     * @return This builder for chaining.
     */
    public Builder setRowsetIdBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00400000;
      rowsetId_ = value;
      onChanged();
      return this;
    }

    private int segmentsOverlapPb_ = 0;
    /**
     * <pre>
     * to indicate whether the data between the segments overlap
     * </pre>
     *
     * <code>optional .starrocks.SegmentsOverlapPB segments_overlap_pb = 51 [default = OVERLAP_UNKNOWN];</code>
     * @return Whether the segmentsOverlapPb field is set.
     */
    @java.lang.Override public boolean hasSegmentsOverlapPb() {
      return ((bitField0_ & 0x00800000) != 0);
    }
    /**
     * <pre>
     * to indicate whether the data between the segments overlap
     * </pre>
     *
     * <code>optional .starrocks.SegmentsOverlapPB segments_overlap_pb = 51 [default = OVERLAP_UNKNOWN];</code>
     * @return The segmentsOverlapPb.
     */
    @java.lang.Override
    public io.datafibre.fibre.proto.SegmentsOverlapPB getSegmentsOverlapPb() {
      @SuppressWarnings("deprecation")
      io.datafibre.fibre.proto.SegmentsOverlapPB result = io.datafibre.fibre.proto.SegmentsOverlapPB.valueOf(segmentsOverlapPb_);
      return result == null ? io.datafibre.fibre.proto.SegmentsOverlapPB.OVERLAP_UNKNOWN : result;
    }
    /**
     * <pre>
     * to indicate whether the data between the segments overlap
     * </pre>
     *
     * <code>optional .starrocks.SegmentsOverlapPB segments_overlap_pb = 51 [default = OVERLAP_UNKNOWN];</code>
     * @param value The segmentsOverlapPb to set.
     * @return This builder for chaining.
     */
    public Builder setSegmentsOverlapPb(io.datafibre.fibre.proto.SegmentsOverlapPB value) {
      if (value == null) {
        throw new NullPointerException();
      }
      bitField0_ |= 0x00800000;
      segmentsOverlapPb_ = value.getNumber();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * to indicate whether the data between the segments overlap
     * </pre>
     *
     * <code>optional .starrocks.SegmentsOverlapPB segments_overlap_pb = 51 [default = OVERLAP_UNKNOWN];</code>
     * @return This builder for chaining.
     */
    public Builder clearSegmentsOverlapPb() {
      bitField0_ = (bitField0_ & ~0x00800000);
      segmentsOverlapPb_ = 0;
      onChanged();
      return this;
    }

    private int rowsetSegId_ ;
    /**
     * <pre>
     * every segment in a rowset has an unique uint32 id
     * it is incrementally allocated when the rowset is committed
     * if a rowset have 4 segments, 4 ids will be allocated.
     * if rowset_seg_id=n then segment ids will be: n, n+1, n+2, n+3
     * </pre>
     *
     * <code>optional uint32 rowset_seg_id = 52;</code>
     * @return Whether the rowsetSegId field is set.
     */
    @java.lang.Override
    public boolean hasRowsetSegId() {
      return ((bitField0_ & 0x01000000) != 0);
    }
    /**
     * <pre>
     * every segment in a rowset has an unique uint32 id
     * it is incrementally allocated when the rowset is committed
     * if a rowset have 4 segments, 4 ids will be allocated.
     * if rowset_seg_id=n then segment ids will be: n, n+1, n+2, n+3
     * </pre>
     *
     * <code>optional uint32 rowset_seg_id = 52;</code>
     * @return The rowsetSegId.
     */
    @java.lang.Override
    public int getRowsetSegId() {
      return rowsetSegId_;
    }
    /**
     * <pre>
     * every segment in a rowset has an unique uint32 id
     * it is incrementally allocated when the rowset is committed
     * if a rowset have 4 segments, 4 ids will be allocated.
     * if rowset_seg_id=n then segment ids will be: n, n+1, n+2, n+3
     * </pre>
     *
     * <code>optional uint32 rowset_seg_id = 52;</code>
     * @param value The rowsetSegId to set.
     * @return This builder for chaining.
     */
    public Builder setRowsetSegId(int value) {
      bitField0_ |= 0x01000000;
      rowsetSegId_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * every segment in a rowset has an unique uint32 id
     * it is incrementally allocated when the rowset is committed
     * if a rowset have 4 segments, 4 ids will be allocated.
     * if rowset_seg_id=n then segment ids will be: n, n+1, n+2, n+3
     * </pre>
     *
     * <code>optional uint32 rowset_seg_id = 52;</code>
     * @return This builder for chaining.
     */
    public Builder clearRowsetSegId() {
      bitField0_ = (bitField0_ & ~0x01000000);
      rowsetSegId_ = 0;
      onChanged();
      return this;
    }

    private int numDeleteFiles_ ;
    /**
     * <pre>
     * number of delete files, delete file store delete operations'
     * primary keys
     * </pre>
     *
     * <code>optional uint32 num_delete_files = 53;</code>
     * @return Whether the numDeleteFiles field is set.
     */
    @java.lang.Override
    public boolean hasNumDeleteFiles() {
      return ((bitField0_ & 0x02000000) != 0);
    }
    /**
     * <pre>
     * number of delete files, delete file store delete operations'
     * primary keys
     * </pre>
     *
     * <code>optional uint32 num_delete_files = 53;</code>
     * @return The numDeleteFiles.
     */
    @java.lang.Override
    public int getNumDeleteFiles() {
      return numDeleteFiles_;
    }
    /**
     * <pre>
     * number of delete files, delete file store delete operations'
     * primary keys
     * </pre>
     *
     * <code>optional uint32 num_delete_files = 53;</code>
     * @param value The numDeleteFiles to set.
     * @return This builder for chaining.
     */
    public Builder setNumDeleteFiles(int value) {
      bitField0_ |= 0x02000000;
      numDeleteFiles_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * number of delete files, delete file store delete operations'
     * primary keys
     * </pre>
     *
     * <code>optional uint32 num_delete_files = 53;</code>
     * @return This builder for chaining.
     */
    public Builder clearNumDeleteFiles() {
      bitField0_ = (bitField0_ & ~0x02000000);
      numDeleteFiles_ = 0;
      onChanged();
      return this;
    }

    private long totalRowSize_ ;
    /**
     * <pre>
     * total row size in approximately
     * </pre>
     *
     * <code>optional int64 total_row_size = 54;</code>
     * @return Whether the totalRowSize field is set.
     */
    @java.lang.Override
    public boolean hasTotalRowSize() {
      return ((bitField0_ & 0x04000000) != 0);
    }
    /**
     * <pre>
     * total row size in approximately
     * </pre>
     *
     * <code>optional int64 total_row_size = 54;</code>
     * @return The totalRowSize.
     */
    @java.lang.Override
    public long getTotalRowSize() {
      return totalRowSize_;
    }
    /**
     * <pre>
     * total row size in approximately
     * </pre>
     *
     * <code>optional int64 total_row_size = 54;</code>
     * @param value The totalRowSize to set.
     * @return This builder for chaining.
     */
    public Builder setTotalRowSize(long value) {
      bitField0_ |= 0x04000000;
      totalRowSize_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * total row size in approximately
     * </pre>
     *
     * <code>optional int64 total_row_size = 54;</code>
     * @return This builder for chaining.
     */
    public Builder clearTotalRowSize() {
      bitField0_ = (bitField0_ & ~0x04000000);
      totalRowSize_ = 0L;
      onChanged();
      return this;
    }

    private io.datafibre.fibre.proto.RowsetTxnMetaPB txnMeta_;
    private com.google.protobuf.SingleFieldBuilderV3<
        io.datafibre.fibre.proto.RowsetTxnMetaPB, io.datafibre.fibre.proto.RowsetTxnMetaPB.Builder, io.datafibre.fibre.proto.RowsetTxnMetaPBOrBuilder> txnMetaBuilder_;
    /**
     * <pre>
     * some txn semantic information bind to this rowset
     * </pre>
     *
     * <code>optional .starrocks.RowsetTxnMetaPB txn_meta = 55;</code>
     * @return Whether the txnMeta field is set.
     */
    public boolean hasTxnMeta() {
      return ((bitField0_ & 0x08000000) != 0);
    }
    /**
     * <pre>
     * some txn semantic information bind to this rowset
     * </pre>
     *
     * <code>optional .starrocks.RowsetTxnMetaPB txn_meta = 55;</code>
     * @return The txnMeta.
     */
    public io.datafibre.fibre.proto.RowsetTxnMetaPB getTxnMeta() {
      if (txnMetaBuilder_ == null) {
        return txnMeta_ == null ? io.datafibre.fibre.proto.RowsetTxnMetaPB.getDefaultInstance() : txnMeta_;
      } else {
        return txnMetaBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * some txn semantic information bind to this rowset
     * </pre>
     *
     * <code>optional .starrocks.RowsetTxnMetaPB txn_meta = 55;</code>
     */
    public Builder setTxnMeta(io.datafibre.fibre.proto.RowsetTxnMetaPB value) {
      if (txnMetaBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        txnMeta_ = value;
        onChanged();
      } else {
        txnMetaBuilder_.setMessage(value);
      }
      bitField0_ |= 0x08000000;
      return this;
    }
    /**
     * <pre>
     * some txn semantic information bind to this rowset
     * </pre>
     *
     * <code>optional .starrocks.RowsetTxnMetaPB txn_meta = 55;</code>
     */
    public Builder setTxnMeta(
        io.datafibre.fibre.proto.RowsetTxnMetaPB.Builder builderForValue) {
      if (txnMetaBuilder_ == null) {
        txnMeta_ = builderForValue.build();
        onChanged();
      } else {
        txnMetaBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x08000000;
      return this;
    }
    /**
     * <pre>
     * some txn semantic information bind to this rowset
     * </pre>
     *
     * <code>optional .starrocks.RowsetTxnMetaPB txn_meta = 55;</code>
     */
    public Builder mergeTxnMeta(io.datafibre.fibre.proto.RowsetTxnMetaPB value) {
      if (txnMetaBuilder_ == null) {
        if (((bitField0_ & 0x08000000) != 0) &&
            txnMeta_ != null &&
            txnMeta_ != io.datafibre.fibre.proto.RowsetTxnMetaPB.getDefaultInstance()) {
          txnMeta_ =
            io.datafibre.fibre.proto.RowsetTxnMetaPB.newBuilder(txnMeta_).mergeFrom(value).buildPartial();
        } else {
          txnMeta_ = value;
        }
        onChanged();
      } else {
        txnMetaBuilder_.mergeFrom(value);
      }
      bitField0_ |= 0x08000000;
      return this;
    }
    /**
     * <pre>
     * some txn semantic information bind to this rowset
     * </pre>
     *
     * <code>optional .starrocks.RowsetTxnMetaPB txn_meta = 55;</code>
     */
    public Builder clearTxnMeta() {
      if (txnMetaBuilder_ == null) {
        txnMeta_ = null;
        onChanged();
      } else {
        txnMetaBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x08000000);
      return this;
    }
    /**
     * <pre>
     * some txn semantic information bind to this rowset
     * </pre>
     *
     * <code>optional .starrocks.RowsetTxnMetaPB txn_meta = 55;</code>
     */
    public io.datafibre.fibre.proto.RowsetTxnMetaPB.Builder getTxnMetaBuilder() {
      bitField0_ |= 0x08000000;
      onChanged();
      return getTxnMetaFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * some txn semantic information bind to this rowset
     * </pre>
     *
     * <code>optional .starrocks.RowsetTxnMetaPB txn_meta = 55;</code>
     */
    public io.datafibre.fibre.proto.RowsetTxnMetaPBOrBuilder getTxnMetaOrBuilder() {
      if (txnMetaBuilder_ != null) {
        return txnMetaBuilder_.getMessageOrBuilder();
      } else {
        return txnMeta_ == null ?
            io.datafibre.fibre.proto.RowsetTxnMetaPB.getDefaultInstance() : txnMeta_;
      }
    }
    /**
     * <pre>
     * some txn semantic information bind to this rowset
     * </pre>
     *
     * <code>optional .starrocks.RowsetTxnMetaPB txn_meta = 55;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        io.datafibre.fibre.proto.RowsetTxnMetaPB, io.datafibre.fibre.proto.RowsetTxnMetaPB.Builder, io.datafibre.fibre.proto.RowsetTxnMetaPBOrBuilder>
        getTxnMetaFieldBuilder() {
      if (txnMetaBuilder_ == null) {
        txnMetaBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            io.datafibre.fibre.proto.RowsetTxnMetaPB, io.datafibre.fibre.proto.RowsetTxnMetaPB.Builder, io.datafibre.fibre.proto.RowsetTxnMetaPBOrBuilder>(
                getTxnMeta(),
                getParentForChildren(),
                isClean());
        txnMeta_ = null;
      }
      return txnMetaBuilder_;
    }

    private com.google.protobuf.Internal.IntList delfileIdxes_ = emptyIntList();
    private void ensureDelfileIdxesIsMutable() {
      if (!((bitField0_ & 0x10000000) != 0)) {
        delfileIdxes_ = mutableCopy(delfileIdxes_);
        bitField0_ |= 0x10000000;
       }
    }
    /**
     * <pre>
     * delete file index
     * </pre>
     *
     * <code>repeated uint32 delfile_idxes = 56;</code>
     * @return A list containing the delfileIdxes.
     */
    public java.util.List<java.lang.Integer>
        getDelfileIdxesList() {
      return ((bitField0_ & 0x10000000) != 0) ?
               java.util.Collections.unmodifiableList(delfileIdxes_) : delfileIdxes_;
    }
    /**
     * <pre>
     * delete file index
     * </pre>
     *
     * <code>repeated uint32 delfile_idxes = 56;</code>
     * @return The count of delfileIdxes.
     */
    public int getDelfileIdxesCount() {
      return delfileIdxes_.size();
    }
    /**
     * <pre>
     * delete file index
     * </pre>
     *
     * <code>repeated uint32 delfile_idxes = 56;</code>
     * @param index The index of the element to return.
     * @return The delfileIdxes at the given index.
     */
    public int getDelfileIdxes(int index) {
      return delfileIdxes_.getInt(index);
    }
    /**
     * <pre>
     * delete file index
     * </pre>
     *
     * <code>repeated uint32 delfile_idxes = 56;</code>
     * @param index The index to set the value at.
     * @param value The delfileIdxes to set.
     * @return This builder for chaining.
     */
    public Builder setDelfileIdxes(
        int index, int value) {
      ensureDelfileIdxesIsMutable();
      delfileIdxes_.setInt(index, value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * delete file index
     * </pre>
     *
     * <code>repeated uint32 delfile_idxes = 56;</code>
     * @param value The delfileIdxes to add.
     * @return This builder for chaining.
     */
    public Builder addDelfileIdxes(int value) {
      ensureDelfileIdxesIsMutable();
      delfileIdxes_.addInt(value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * delete file index
     * </pre>
     *
     * <code>repeated uint32 delfile_idxes = 56;</code>
     * @param values The delfileIdxes to add.
     * @return This builder for chaining.
     */
    public Builder addAllDelfileIdxes(
        java.lang.Iterable<? extends java.lang.Integer> values) {
      ensureDelfileIdxesIsMutable();
      com.google.protobuf.AbstractMessageLite.Builder.addAll(
          values, delfileIdxes_);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * delete file index
     * </pre>
     *
     * <code>repeated uint32 delfile_idxes = 56;</code>
     * @return This builder for chaining.
     */
    public Builder clearDelfileIdxes() {
      delfileIdxes_ = emptyIntList();
      bitField0_ = (bitField0_ & ~0x10000000);
      onChanged();
      return this;
    }

    private int numUpdateFiles_ ;
    /**
     * <pre>
     * number of update files
     * </pre>
     *
     * <code>optional uint32 num_update_files = 57;</code>
     * @return Whether the numUpdateFiles field is set.
     */
    @java.lang.Override
    public boolean hasNumUpdateFiles() {
      return ((bitField0_ & 0x20000000) != 0);
    }
    /**
     * <pre>
     * number of update files
     * </pre>
     *
     * <code>optional uint32 num_update_files = 57;</code>
     * @return The numUpdateFiles.
     */
    @java.lang.Override
    public int getNumUpdateFiles() {
      return numUpdateFiles_;
    }
    /**
     * <pre>
     * number of update files
     * </pre>
     *
     * <code>optional uint32 num_update_files = 57;</code>
     * @param value The numUpdateFiles to set.
     * @return This builder for chaining.
     */
    public Builder setNumUpdateFiles(int value) {
      bitField0_ |= 0x20000000;
      numUpdateFiles_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * number of update files
     * </pre>
     *
     * <code>optional uint32 num_update_files = 57;</code>
     * @return This builder for chaining.
     */
    public Builder clearNumUpdateFiles() {
      bitField0_ = (bitField0_ & ~0x20000000);
      numUpdateFiles_ = 0;
      onChanged();
      return this;
    }

    private long totalUpdateRowSize_ ;
    /**
     * <pre>
     * total partial update row size
     * </pre>
     *
     * <code>optional int64 total_update_row_size = 58;</code>
     * @return Whether the totalUpdateRowSize field is set.
     */
    @java.lang.Override
    public boolean hasTotalUpdateRowSize() {
      return ((bitField0_ & 0x40000000) != 0);
    }
    /**
     * <pre>
     * total partial update row size
     * </pre>
     *
     * <code>optional int64 total_update_row_size = 58;</code>
     * @return The totalUpdateRowSize.
     */
    @java.lang.Override
    public long getTotalUpdateRowSize() {
      return totalUpdateRowSize_;
    }
    /**
     * <pre>
     * total partial update row size
     * </pre>
     *
     * <code>optional int64 total_update_row_size = 58;</code>
     * @param value The totalUpdateRowSize to set.
     * @return This builder for chaining.
     */
    public Builder setTotalUpdateRowSize(long value) {
      bitField0_ |= 0x40000000;
      totalUpdateRowSize_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * total partial update row size
     * </pre>
     *
     * <code>optional int64 total_update_row_size = 58;</code>
     * @return This builder for chaining.
     */
    public Builder clearTotalUpdateRowSize() {
      bitField0_ = (bitField0_ & ~0x40000000);
      totalUpdateRowSize_ = 0L;
      onChanged();
      return this;
    }

    private boolean partialSchemaChange_ ;
    /**
     * <pre>
     * true if it is generated by partial_schema_change
     * </pre>
     *
     * <code>optional bool partial_schema_change = 59;</code>
     * @return Whether the partialSchemaChange field is set.
     */
    @java.lang.Override
    public boolean hasPartialSchemaChange() {
      return ((bitField0_ & 0x80000000) != 0);
    }
    /**
     * <pre>
     * true if it is generated by partial_schema_change
     * </pre>
     *
     * <code>optional bool partial_schema_change = 59;</code>
     * @return The partialSchemaChange.
     */
    @java.lang.Override
    public boolean getPartialSchemaChange() {
      return partialSchemaChange_;
    }
    /**
     * <pre>
     * true if it is generated by partial_schema_change
     * </pre>
     *
     * <code>optional bool partial_schema_change = 59;</code>
     * @param value The partialSchemaChange to set.
     * @return This builder for chaining.
     */
    public Builder setPartialSchemaChange(boolean value) {
      bitField0_ |= 0x80000000;
      partialSchemaChange_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * true if it is generated by partial_schema_change
     * </pre>
     *
     * <code>optional bool partial_schema_change = 59;</code>
     * @return This builder for chaining.
     */
    public Builder clearPartialSchemaChange() {
      bitField0_ = (bitField0_ & ~0x80000000);
      partialSchemaChange_ = false;
      onChanged();
      return this;
    }

    private io.datafibre.fibre.proto.TabletSchemaPB tabletSchema_;
    private com.google.protobuf.SingleFieldBuilderV3<
        io.datafibre.fibre.proto.TabletSchemaPB, io.datafibre.fibre.proto.TabletSchemaPB.Builder, io.datafibre.fibre.proto.TabletSchemaPBOrBuilder> tabletSchemaBuilder_;
    /**
     * <pre>
     * tablet meta pb, for compaction
     * </pre>
     *
     * <code>optional .starrocks.TabletSchemaPB tablet_schema = 60;</code>
     * @return Whether the tabletSchema field is set.
     */
    public boolean hasTabletSchema() {
      return ((bitField1_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * tablet meta pb, for compaction
     * </pre>
     *
     * <code>optional .starrocks.TabletSchemaPB tablet_schema = 60;</code>
     * @return The tabletSchema.
     */
    public io.datafibre.fibre.proto.TabletSchemaPB getTabletSchema() {
      if (tabletSchemaBuilder_ == null) {
        return tabletSchema_ == null ? io.datafibre.fibre.proto.TabletSchemaPB.getDefaultInstance() : tabletSchema_;
      } else {
        return tabletSchemaBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * tablet meta pb, for compaction
     * </pre>
     *
     * <code>optional .starrocks.TabletSchemaPB tablet_schema = 60;</code>
     */
    public Builder setTabletSchema(io.datafibre.fibre.proto.TabletSchemaPB value) {
      if (tabletSchemaBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        tabletSchema_ = value;
        onChanged();
      } else {
        tabletSchemaBuilder_.setMessage(value);
      }
      bitField1_ |= 0x00000001;
      return this;
    }
    /**
     * <pre>
     * tablet meta pb, for compaction
     * </pre>
     *
     * <code>optional .starrocks.TabletSchemaPB tablet_schema = 60;</code>
     */
    public Builder setTabletSchema(
        io.datafibre.fibre.proto.TabletSchemaPB.Builder builderForValue) {
      if (tabletSchemaBuilder_ == null) {
        tabletSchema_ = builderForValue.build();
        onChanged();
      } else {
        tabletSchemaBuilder_.setMessage(builderForValue.build());
      }
      bitField1_ |= 0x00000001;
      return this;
    }
    /**
     * <pre>
     * tablet meta pb, for compaction
     * </pre>
     *
     * <code>optional .starrocks.TabletSchemaPB tablet_schema = 60;</code>
     */
    public Builder mergeTabletSchema(io.datafibre.fibre.proto.TabletSchemaPB value) {
      if (tabletSchemaBuilder_ == null) {
        if (((bitField1_ & 0x00000001) != 0) &&
            tabletSchema_ != null &&
            tabletSchema_ != io.datafibre.fibre.proto.TabletSchemaPB.getDefaultInstance()) {
          tabletSchema_ =
            io.datafibre.fibre.proto.TabletSchemaPB.newBuilder(tabletSchema_).mergeFrom(value).buildPartial();
        } else {
          tabletSchema_ = value;
        }
        onChanged();
      } else {
        tabletSchemaBuilder_.mergeFrom(value);
      }
      bitField1_ |= 0x00000001;
      return this;
    }
    /**
     * <pre>
     * tablet meta pb, for compaction
     * </pre>
     *
     * <code>optional .starrocks.TabletSchemaPB tablet_schema = 60;</code>
     */
    public Builder clearTabletSchema() {
      if (tabletSchemaBuilder_ == null) {
        tabletSchema_ = null;
        onChanged();
      } else {
        tabletSchemaBuilder_.clear();
      }
      bitField1_ = (bitField1_ & ~0x00000001);
      return this;
    }
    /**
     * <pre>
     * tablet meta pb, for compaction
     * </pre>
     *
     * <code>optional .starrocks.TabletSchemaPB tablet_schema = 60;</code>
     */
    public io.datafibre.fibre.proto.TabletSchemaPB.Builder getTabletSchemaBuilder() {
      bitField1_ |= 0x00000001;
      onChanged();
      return getTabletSchemaFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * tablet meta pb, for compaction
     * </pre>
     *
     * <code>optional .starrocks.TabletSchemaPB tablet_schema = 60;</code>
     */
    public io.datafibre.fibre.proto.TabletSchemaPBOrBuilder getTabletSchemaOrBuilder() {
      if (tabletSchemaBuilder_ != null) {
        return tabletSchemaBuilder_.getMessageOrBuilder();
      } else {
        return tabletSchema_ == null ?
            io.datafibre.fibre.proto.TabletSchemaPB.getDefaultInstance() : tabletSchema_;
      }
    }
    /**
     * <pre>
     * tablet meta pb, for compaction
     * </pre>
     *
     * <code>optional .starrocks.TabletSchemaPB tablet_schema = 60;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        io.datafibre.fibre.proto.TabletSchemaPB, io.datafibre.fibre.proto.TabletSchemaPB.Builder, io.datafibre.fibre.proto.TabletSchemaPBOrBuilder>
        getTabletSchemaFieldBuilder() {
      if (tabletSchemaBuilder_ == null) {
        tabletSchemaBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            io.datafibre.fibre.proto.TabletSchemaPB, io.datafibre.fibre.proto.TabletSchemaPB.Builder, io.datafibre.fibre.proto.TabletSchemaPBOrBuilder>(
                getTabletSchema(),
                getParentForChildren(),
                isClean());
        tabletSchema_ = null;
      }
      return tabletSchemaBuilder_;
    }

    private int maxCompactInputRowsetId_ ;
    /**
     * <pre>
     * May not be empty if this rowset was generated by a compaction task in PK table.
     * We use max_compact_input_rowset_id to decide the rowset order when doing pk recover.
     * </pre>
     *
     * <code>optional uint32 max_compact_input_rowset_id = 61;</code>
     * @return Whether the maxCompactInputRowsetId field is set.
     */
    @java.lang.Override
    public boolean hasMaxCompactInputRowsetId() {
      return ((bitField1_ & 0x00000002) != 0);
    }
    /**
     * <pre>
     * May not be empty if this rowset was generated by a compaction task in PK table.
     * We use max_compact_input_rowset_id to decide the rowset order when doing pk recover.
     * </pre>
     *
     * <code>optional uint32 max_compact_input_rowset_id = 61;</code>
     * @return The maxCompactInputRowsetId.
     */
    @java.lang.Override
    public int getMaxCompactInputRowsetId() {
      return maxCompactInputRowsetId_;
    }
    /**
     * <pre>
     * May not be empty if this rowset was generated by a compaction task in PK table.
     * We use max_compact_input_rowset_id to decide the rowset order when doing pk recover.
     * </pre>
     *
     * <code>optional uint32 max_compact_input_rowset_id = 61;</code>
     * @param value The maxCompactInputRowsetId to set.
     * @return This builder for chaining.
     */
    public Builder setMaxCompactInputRowsetId(int value) {
      bitField1_ |= 0x00000002;
      maxCompactInputRowsetId_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * May not be empty if this rowset was generated by a compaction task in PK table.
     * We use max_compact_input_rowset_id to decide the rowset order when doing pk recover.
     * </pre>
     *
     * <code>optional uint32 max_compact_input_rowset_id = 61;</code>
     * @return This builder for chaining.
     */
    public Builder clearMaxCompactInputRowsetId() {
      bitField1_ = (bitField1_ & ~0x00000002);
      maxCompactInputRowsetId_ = 0;
      onChanged();
      return this;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:starrocks.RowsetMetaPB)
  }

  // @@protoc_insertion_point(class_scope:starrocks.RowsetMetaPB)
  private static final io.datafibre.fibre.proto.RowsetMetaPB DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new io.datafibre.fibre.proto.RowsetMetaPB();
  }

  public static io.datafibre.fibre.proto.RowsetMetaPB getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  @java.lang.Deprecated public static final com.google.protobuf.Parser<RowsetMetaPB>
      PARSER = new com.google.protobuf.AbstractParser<RowsetMetaPB>() {
    @java.lang.Override
    public RowsetMetaPB parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<RowsetMetaPB> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<RowsetMetaPB> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public io.datafibre.fibre.proto.RowsetMetaPB getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

