// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: internal_service.proto

package com.starrocks.proto;

public interface PProcessDictionaryCacheRequestOrBuilder extends
    // @@protoc_insertion_point(interface_extends:starrocks.PProcessDictionaryCacheRequest)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <code>optional .starrocks.ChunkPB chunk = 1;</code>
   * @return Whether the chunk field is set.
   */
  boolean hasChunk();
  /**
   * <code>optional .starrocks.ChunkPB chunk = 1;</code>
   * @return The chunk.
   */
  com.starrocks.proto.ChunkPB getChunk();
  /**
   * <code>optional .starrocks.ChunkPB chunk = 1;</code>
   */
  com.starrocks.proto.ChunkPBOrBuilder getChunkOrBuilder();

  /**
   * <code>optional int64 dict_id = 2;</code>
   * @return Whether the dictId field is set.
   */
  boolean hasDictId();
  /**
   * <code>optional int64 dict_id = 2;</code>
   * @return The dictId.
   */
  long getDictId();

  /**
   * <code>optional int64 txn_id = 3;</code>
   * @return Whether the txnId field is set.
   */
  boolean hasTxnId();
  /**
   * <code>optional int64 txn_id = 3;</code>
   * @return The txnId.
   */
  long getTxnId();

  /**
   * <code>optional .starrocks.POlapTableSchemaParam schema = 4;</code>
   * @return Whether the schema field is set.
   */
  boolean hasSchema();
  /**
   * <code>optional .starrocks.POlapTableSchemaParam schema = 4;</code>
   * @return The schema.
   */
  com.starrocks.proto.POlapTableSchemaParam getSchema();
  /**
   * <code>optional .starrocks.POlapTableSchemaParam schema = 4;</code>
   */
  com.starrocks.proto.POlapTableSchemaParamOrBuilder getSchemaOrBuilder();

  /**
   * <code>optional int64 memory_limit = 5;</code>
   * @return Whether the memoryLimit field is set.
   */
  boolean hasMemoryLimit();
  /**
   * <code>optional int64 memory_limit = 5;</code>
   * @return The memoryLimit.
   */
  long getMemoryLimit();

  /**
   * <code>optional int32 key_size = 6;</code>
   * @return Whether the keySize field is set.
   */
  boolean hasKeySize();
  /**
   * <code>optional int32 key_size = 6;</code>
   * @return The keySize.
   */
  int getKeySize();

  /**
   * <code>optional bool is_cancel = 7;</code>
   * @return Whether the isCancel field is set.
   */
  boolean hasIsCancel();
  /**
   * <code>optional bool is_cancel = 7;</code>
   * @return The isCancel.
   */
  boolean getIsCancel();

  /**
   * <code>optional .starrocks.PProcessDictionaryCacheRequestType type = 8;</code>
   * @return Whether the type field is set.
   */
  boolean hasType();
  /**
   * <code>optional .starrocks.PProcessDictionaryCacheRequestType type = 8;</code>
   * @return The type.
   */
  com.starrocks.proto.PProcessDictionaryCacheRequestType getType();
}
