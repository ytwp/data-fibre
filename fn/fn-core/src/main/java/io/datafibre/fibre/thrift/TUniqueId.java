/**
 * Autogenerated by Thrift Compiler (0.19.0)
 * <p>
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *
 * @generated
 */
package io.datafibre.fibre.thrift;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked", "unused"})
public class TUniqueId {

    public long hi; // required
    public long lo; // required


    // isset id assignments
    private static final int __HI_ISSET_ID = 0;
    private static final int __LO_ISSET_ID = 1;
    private byte __isset_bitfield = 0;

    public TUniqueId() {
    }

    public TUniqueId(
            long hi,
            long lo) {
        this();
        this.hi = hi;
        this.lo = lo;
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public TUniqueId(TUniqueId other) {
        __isset_bitfield = other.__isset_bitfield;
        this.hi = other.hi;
        this.lo = other.lo;
    }

    public long getHi() {
        return this.hi;
    }

    public TUniqueId setHi(long hi) {
        this.hi = hi;
        return this;
    }

    public long getLo() {
        return this.lo;
    }

    public TUniqueId setLo(long lo) {
        this.lo = lo;
        return this;
    }

    public boolean equals(TUniqueId that) {
        if (that == null)
            return false;
        if (this == that)
            return true;

        boolean this_present_hi = true;
        boolean that_present_hi = true;
        if (this_present_hi || that_present_hi) {
            if (!(this_present_hi && that_present_hi))
                return false;
            if (this.hi != that.hi)
                return false;
        }

        boolean this_present_lo = true;
        boolean that_present_lo = true;
        if (this_present_lo || that_present_lo) {
            if (!(this_present_lo && that_present_lo))
                return false;
            if (this.lo != that.lo)
                return false;
        }

        return true;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("TUniqueId(");
        boolean first = true;

        sb.append("hi:");
        sb.append(this.hi);
        first = false;
        if (!first) sb.append(", ");
        sb.append("lo:");
        sb.append(this.lo);
        first = false;
        sb.append(")");
        return sb.toString();
    }

}

