// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: types.proto

package com.starrocks.proto;

public interface TxnFinishStatePBOrBuilder extends
    // @@protoc_insertion_point(interface_extends:starrocks.TxnFinishStatePB)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * Currently, only involved replica's versions are stored, to save space, replica are stored in 2 lists
   * a list of int64 to store `normal` replicas, in the following form:
   *   replica1Id, replica2Id, ...
   * a list of int64 to store `abnormal` replica's versions, in the following form:
   *   replica1Id, replica1Version, replica2Id, replica2Version, ...
   * For all the replicas involved in a txn, if the replica's version != partition's txn commit version
   * it is considered abnormal, and put into abnormal list.
   * </pre>
   *
   * <code>repeated int64 normal_replicas = 1;</code>
   * @return A list containing the normalReplicas.
   */
  java.util.List<java.lang.Long> getNormalReplicasList();
  /**
   * <pre>
   * Currently, only involved replica's versions are stored, to save space, replica are stored in 2 lists
   * a list of int64 to store `normal` replicas, in the following form:
   *   replica1Id, replica2Id, ...
   * a list of int64 to store `abnormal` replica's versions, in the following form:
   *   replica1Id, replica1Version, replica2Id, replica2Version, ...
   * For all the replicas involved in a txn, if the replica's version != partition's txn commit version
   * it is considered abnormal, and put into abnormal list.
   * </pre>
   *
   * <code>repeated int64 normal_replicas = 1;</code>
   * @return The count of normalReplicas.
   */
  int getNormalReplicasCount();
  /**
   * <pre>
   * Currently, only involved replica's versions are stored, to save space, replica are stored in 2 lists
   * a list of int64 to store `normal` replicas, in the following form:
   *   replica1Id, replica2Id, ...
   * a list of int64 to store `abnormal` replica's versions, in the following form:
   *   replica1Id, replica1Version, replica2Id, replica2Version, ...
   * For all the replicas involved in a txn, if the replica's version != partition's txn commit version
   * it is considered abnormal, and put into abnormal list.
   * </pre>
   *
   * <code>repeated int64 normal_replicas = 1;</code>
   * @param index The index of the element to return.
   * @return The normalReplicas at the given index.
   */
  long getNormalReplicas(int index);

  /**
   * <code>repeated int64 abnormal_replicas_with_version = 2;</code>
   * @return A list containing the abnormalReplicasWithVersion.
   */
  java.util.List<java.lang.Long> getAbnormalReplicasWithVersionList();
  /**
   * <code>repeated int64 abnormal_replicas_with_version = 2;</code>
   * @return The count of abnormalReplicasWithVersion.
   */
  int getAbnormalReplicasWithVersionCount();
  /**
   * <code>repeated int64 abnormal_replicas_with_version = 2;</code>
   * @param index The index of the element to return.
   * @return The abnormalReplicasWithVersion at the given index.
   */
  long getAbnormalReplicasWithVersion(int index);
}
