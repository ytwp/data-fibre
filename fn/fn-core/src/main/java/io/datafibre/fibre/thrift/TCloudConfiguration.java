/**
 * Autogenerated by Thrift Compiler (0.19.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.starrocks.thrift;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked", "unused"})
@javax.annotation.Generated(value = "Autogenerated by Thrift Compiler (0.19.0)", date = "2024-02-22")
public class TCloudConfiguration implements org.apache.thrift.TBase<TCloudConfiguration, TCloudConfiguration._Fields>, java.io.Serializable, Cloneable, Comparable<TCloudConfiguration> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("TCloudConfiguration");

  private static final org.apache.thrift.protocol.TField CLOUD_TYPE_FIELD_DESC = new org.apache.thrift.protocol.TField("cloud_type", org.apache.thrift.protocol.TType.I32, (short)1);
  private static final org.apache.thrift.protocol.TField CLOUD_PROPERTIES_FIELD_DESC = new org.apache.thrift.protocol.TField("cloud_properties", org.apache.thrift.protocol.TType.LIST, (short)2);
  private static final org.apache.thrift.protocol.TField CLOUD_PROPERTIES_V2_FIELD_DESC = new org.apache.thrift.protocol.TField("cloud_properties_v2", org.apache.thrift.protocol.TType.MAP, (short)3);

  private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new TCloudConfigurationStandardSchemeFactory();
  private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new TCloudConfigurationTupleSchemeFactory();

  /**
   * 
   * @see TCloudType
   */
  public @org.apache.thrift.annotation.Nullable TCloudType cloud_type; // optional
  public @org.apache.thrift.annotation.Nullable java.util.List<TCloudProperty> cloud_properties; // optional
  public @org.apache.thrift.annotation.Nullable java.util.Map<java.lang.String,java.lang.String> cloud_properties_v2; // optional

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    /**
     * 
     * @see TCloudType
     */
    CLOUD_TYPE((short)1, "cloud_type"),
    CLOUD_PROPERTIES((short)2, "cloud_properties"),
    CLOUD_PROPERTIES_V2((short)3, "cloud_properties_v2");

    private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

    static {
      for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    @org.apache.thrift.annotation.Nullable
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // CLOUD_TYPE
          return CLOUD_TYPE;
        case 2: // CLOUD_PROPERTIES
          return CLOUD_PROPERTIES;
        case 3: // CLOUD_PROPERTIES_V2
          return CLOUD_PROPERTIES_V2;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    @org.apache.thrift.annotation.Nullable
    public static _Fields findByName(java.lang.String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final java.lang.String _fieldName;

    _Fields(short thriftId, java.lang.String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    @Override
    public short getThriftFieldId() {
      return _thriftId;
    }

    @Override
    public java.lang.String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final _Fields optionals[] = {_Fields.CLOUD_TYPE,_Fields.CLOUD_PROPERTIES,_Fields.CLOUD_PROPERTIES_V2};
  public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.CLOUD_TYPE, new org.apache.thrift.meta_data.FieldMetaData("cloud_type", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.EnumMetaData(org.apache.thrift.protocol.TType.ENUM, TCloudType.class)));
    tmpMap.put(_Fields.CLOUD_PROPERTIES, new org.apache.thrift.meta_data.FieldMetaData("cloud_properties", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.ListMetaData(org.apache.thrift.protocol.TType.LIST, 
            new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, TCloudProperty.class))));
    tmpMap.put(_Fields.CLOUD_PROPERTIES_V2, new org.apache.thrift.meta_data.FieldMetaData("cloud_properties_v2", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.MapMetaData(org.apache.thrift.protocol.TType.MAP, 
            new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING), 
            new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING))));
    metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(TCloudConfiguration.class, metaDataMap);
  }

  public TCloudConfiguration() {
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public TCloudConfiguration(TCloudConfiguration other) {
    if (other.isSetCloud_type()) {
      this.cloud_type = other.cloud_type;
    }
    if (other.isSetCloud_properties()) {
      java.util.List<TCloudProperty> __this__cloud_properties = new java.util.ArrayList<TCloudProperty>(other.cloud_properties.size());
      for (TCloudProperty other_element : other.cloud_properties) {
        __this__cloud_properties.add(new TCloudProperty(other_element));
      }
      this.cloud_properties = __this__cloud_properties;
    }
    if (other.isSetCloud_properties_v2()) {
      java.util.Map<java.lang.String,java.lang.String> __this__cloud_properties_v2 = new java.util.HashMap<java.lang.String,java.lang.String>(other.cloud_properties_v2);
      this.cloud_properties_v2 = __this__cloud_properties_v2;
    }
  }

  @Override
  public TCloudConfiguration deepCopy() {
    return new TCloudConfiguration(this);
  }

  @Override
  public void clear() {
    this.cloud_type = null;
    this.cloud_properties = null;
    this.cloud_properties_v2 = null;
  }

  /**
   * 
   * @see TCloudType
   */
  @org.apache.thrift.annotation.Nullable
  public TCloudType getCloud_type() {
    return this.cloud_type;
  }

  /**
   * 
   * @see TCloudType
   */
  public TCloudConfiguration setCloud_type(@org.apache.thrift.annotation.Nullable TCloudType cloud_type) {
    this.cloud_type = cloud_type;
    return this;
  }

  public void unsetCloud_type() {
    this.cloud_type = null;
  }

  /** Returns true if field cloud_type is set (has been assigned a value) and false otherwise */
  public boolean isSetCloud_type() {
    return this.cloud_type != null;
  }

  public void setCloud_typeIsSet(boolean value) {
    if (!value) {
      this.cloud_type = null;
    }
  }

  public int getCloud_propertiesSize() {
    return (this.cloud_properties == null) ? 0 : this.cloud_properties.size();
  }

  @org.apache.thrift.annotation.Nullable
  public java.util.Iterator<TCloudProperty> getCloud_propertiesIterator() {
    return (this.cloud_properties == null) ? null : this.cloud_properties.iterator();
  }

  public void addToCloud_properties(TCloudProperty elem) {
    if (this.cloud_properties == null) {
      this.cloud_properties = new java.util.ArrayList<TCloudProperty>();
    }
    this.cloud_properties.add(elem);
  }

  @org.apache.thrift.annotation.Nullable
  public java.util.List<TCloudProperty> getCloud_properties() {
    return this.cloud_properties;
  }

  public TCloudConfiguration setCloud_properties(@org.apache.thrift.annotation.Nullable java.util.List<TCloudProperty> cloud_properties) {
    this.cloud_properties = cloud_properties;
    return this;
  }

  public void unsetCloud_properties() {
    this.cloud_properties = null;
  }

  /** Returns true if field cloud_properties is set (has been assigned a value) and false otherwise */
  public boolean isSetCloud_properties() {
    return this.cloud_properties != null;
  }

  public void setCloud_propertiesIsSet(boolean value) {
    if (!value) {
      this.cloud_properties = null;
    }
  }

  public int getCloud_properties_v2Size() {
    return (this.cloud_properties_v2 == null) ? 0 : this.cloud_properties_v2.size();
  }

  public void putToCloud_properties_v2(java.lang.String key, java.lang.String val) {
    if (this.cloud_properties_v2 == null) {
      this.cloud_properties_v2 = new java.util.HashMap<java.lang.String,java.lang.String>();
    }
    this.cloud_properties_v2.put(key, val);
  }

  @org.apache.thrift.annotation.Nullable
  public java.util.Map<java.lang.String,java.lang.String> getCloud_properties_v2() {
    return this.cloud_properties_v2;
  }

  public TCloudConfiguration setCloud_properties_v2(@org.apache.thrift.annotation.Nullable java.util.Map<java.lang.String,java.lang.String> cloud_properties_v2) {
    this.cloud_properties_v2 = cloud_properties_v2;
    return this;
  }

  public void unsetCloud_properties_v2() {
    this.cloud_properties_v2 = null;
  }

  /** Returns true if field cloud_properties_v2 is set (has been assigned a value) and false otherwise */
  public boolean isSetCloud_properties_v2() {
    return this.cloud_properties_v2 != null;
  }

  public void setCloud_properties_v2IsSet(boolean value) {
    if (!value) {
      this.cloud_properties_v2 = null;
    }
  }

  @Override
  public void setFieldValue(_Fields field, @org.apache.thrift.annotation.Nullable java.lang.Object value) {
    switch (field) {
    case CLOUD_TYPE:
      if (value == null) {
        unsetCloud_type();
      } else {
        setCloud_type((TCloudType)value);
      }
      break;

    case CLOUD_PROPERTIES:
      if (value == null) {
        unsetCloud_properties();
      } else {
        setCloud_properties((java.util.List<TCloudProperty>)value);
      }
      break;

    case CLOUD_PROPERTIES_V2:
      if (value == null) {
        unsetCloud_properties_v2();
      } else {
        setCloud_properties_v2((java.util.Map<java.lang.String,java.lang.String>)value);
      }
      break;

    }
  }

  @org.apache.thrift.annotation.Nullable
  @Override
  public java.lang.Object getFieldValue(_Fields field) {
    switch (field) {
    case CLOUD_TYPE:
      return getCloud_type();

    case CLOUD_PROPERTIES:
      return getCloud_properties();

    case CLOUD_PROPERTIES_V2:
      return getCloud_properties_v2();

    }
    throw new java.lang.IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  @Override
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new java.lang.IllegalArgumentException();
    }

    switch (field) {
    case CLOUD_TYPE:
      return isSetCloud_type();
    case CLOUD_PROPERTIES:
      return isSetCloud_properties();
    case CLOUD_PROPERTIES_V2:
      return isSetCloud_properties_v2();
    }
    throw new java.lang.IllegalStateException();
  }

  @Override
  public boolean equals(java.lang.Object that) {
    if (that instanceof TCloudConfiguration)
      return this.equals((TCloudConfiguration)that);
    return false;
  }

  public boolean equals(TCloudConfiguration that) {
    if (that == null)
      return false;
    if (this == that)
      return true;

    boolean this_present_cloud_type = true && this.isSetCloud_type();
    boolean that_present_cloud_type = true && that.isSetCloud_type();
    if (this_present_cloud_type || that_present_cloud_type) {
      if (!(this_present_cloud_type && that_present_cloud_type))
        return false;
      if (!this.cloud_type.equals(that.cloud_type))
        return false;
    }

    boolean this_present_cloud_properties = true && this.isSetCloud_properties();
    boolean that_present_cloud_properties = true && that.isSetCloud_properties();
    if (this_present_cloud_properties || that_present_cloud_properties) {
      if (!(this_present_cloud_properties && that_present_cloud_properties))
        return false;
      if (!this.cloud_properties.equals(that.cloud_properties))
        return false;
    }

    boolean this_present_cloud_properties_v2 = true && this.isSetCloud_properties_v2();
    boolean that_present_cloud_properties_v2 = true && that.isSetCloud_properties_v2();
    if (this_present_cloud_properties_v2 || that_present_cloud_properties_v2) {
      if (!(this_present_cloud_properties_v2 && that_present_cloud_properties_v2))
        return false;
      if (!this.cloud_properties_v2.equals(that.cloud_properties_v2))
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    int hashCode = 1;

    hashCode = hashCode * 8191 + ((isSetCloud_type()) ? 131071 : 524287);
    if (isSetCloud_type())
      hashCode = hashCode * 8191 + cloud_type.getValue();

    hashCode = hashCode * 8191 + ((isSetCloud_properties()) ? 131071 : 524287);
    if (isSetCloud_properties())
      hashCode = hashCode * 8191 + cloud_properties.hashCode();

    hashCode = hashCode * 8191 + ((isSetCloud_properties_v2()) ? 131071 : 524287);
    if (isSetCloud_properties_v2())
      hashCode = hashCode * 8191 + cloud_properties_v2.hashCode();

    return hashCode;
  }

  @Override
  public int compareTo(TCloudConfiguration other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = java.lang.Boolean.compare(isSetCloud_type(), other.isSetCloud_type());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCloud_type()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.cloud_type, other.cloud_type);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetCloud_properties(), other.isSetCloud_properties());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCloud_properties()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.cloud_properties, other.cloud_properties);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetCloud_properties_v2(), other.isSetCloud_properties_v2());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCloud_properties_v2()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.cloud_properties_v2, other.cloud_properties_v2);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  @org.apache.thrift.annotation.Nullable
  @Override
  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  @Override
  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    scheme(iprot).read(iprot, this);
  }

  @Override
  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    scheme(oprot).write(oprot, this);
  }

  @Override
  public java.lang.String toString() {
    java.lang.StringBuilder sb = new java.lang.StringBuilder("TCloudConfiguration(");
    boolean first = true;

    if (isSetCloud_type()) {
      sb.append("cloud_type:");
      if (this.cloud_type == null) {
        sb.append("null");
      } else {
        sb.append(this.cloud_type);
      }
      first = false;
    }
    if (isSetCloud_properties()) {
      if (!first) sb.append(", ");
      sb.append("cloud_properties:");
      if (this.cloud_properties == null) {
        sb.append("null");
      } else {
        sb.append(this.cloud_properties);
      }
      first = false;
    }
    if (isSetCloud_properties_v2()) {
      if (!first) sb.append(", ");
      sb.append("cloud_properties_v2:");
      if (this.cloud_properties_v2 == null) {
        sb.append("null");
      } else {
        sb.append(this.cloud_properties_v2);
      }
      first = false;
    }
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // check for sub-struct validity
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
    try {
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class TCloudConfigurationStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    @Override
    public TCloudConfigurationStandardScheme getScheme() {
      return new TCloudConfigurationStandardScheme();
    }
  }

  private static class TCloudConfigurationStandardScheme extends org.apache.thrift.scheme.StandardScheme<TCloudConfiguration> {

    @Override
    public void read(org.apache.thrift.protocol.TProtocol iprot, TCloudConfiguration struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // CLOUD_TYPE
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.cloud_type = com.starrocks.thrift.TCloudType.findByValue(iprot.readI32());
              struct.setCloud_typeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // CLOUD_PROPERTIES
            if (schemeField.type == org.apache.thrift.protocol.TType.LIST) {
              {
                org.apache.thrift.protocol.TList _list0 = iprot.readListBegin();
                struct.cloud_properties = new java.util.ArrayList<TCloudProperty>(_list0.size);
                @org.apache.thrift.annotation.Nullable TCloudProperty _elem1;
                for (int _i2 = 0; _i2 < _list0.size; ++_i2)
                {
                  _elem1 = new TCloudProperty();
                  _elem1.read(iprot);
                  struct.cloud_properties.add(_elem1);
                }
                iprot.readListEnd();
              }
              struct.setCloud_propertiesIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // CLOUD_PROPERTIES_V2
            if (schemeField.type == org.apache.thrift.protocol.TType.MAP) {
              {
                org.apache.thrift.protocol.TMap _map3 = iprot.readMapBegin();
                struct.cloud_properties_v2 = new java.util.HashMap<java.lang.String,java.lang.String>(2*_map3.size);
                @org.apache.thrift.annotation.Nullable java.lang.String _key4;
                @org.apache.thrift.annotation.Nullable java.lang.String _val5;
                for (int _i6 = 0; _i6 < _map3.size; ++_i6)
                {
                  _key4 = iprot.readString();
                  _val5 = iprot.readString();
                  struct.cloud_properties_v2.put(_key4, _val5);
                }
                iprot.readMapEnd();
              }
              struct.setCloud_properties_v2IsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    @Override
    public void write(org.apache.thrift.protocol.TProtocol oprot, TCloudConfiguration struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      if (struct.cloud_type != null) {
        if (struct.isSetCloud_type()) {
          oprot.writeFieldBegin(CLOUD_TYPE_FIELD_DESC);
          oprot.writeI32(struct.cloud_type.getValue());
          oprot.writeFieldEnd();
        }
      }
      if (struct.cloud_properties != null) {
        if (struct.isSetCloud_properties()) {
          oprot.writeFieldBegin(CLOUD_PROPERTIES_FIELD_DESC);
          {
            oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, struct.cloud_properties.size()));
            for (TCloudProperty _iter7 : struct.cloud_properties)
            {
              _iter7.write(oprot);
            }
            oprot.writeListEnd();
          }
          oprot.writeFieldEnd();
        }
      }
      if (struct.cloud_properties_v2 != null) {
        if (struct.isSetCloud_properties_v2()) {
          oprot.writeFieldBegin(CLOUD_PROPERTIES_V2_FIELD_DESC);
          {
            oprot.writeMapBegin(new org.apache.thrift.protocol.TMap(org.apache.thrift.protocol.TType.STRING, org.apache.thrift.protocol.TType.STRING, struct.cloud_properties_v2.size()));
            for (java.util.Map.Entry<java.lang.String, java.lang.String> _iter8 : struct.cloud_properties_v2.entrySet())
            {
              oprot.writeString(_iter8.getKey());
              oprot.writeString(_iter8.getValue());
            }
            oprot.writeMapEnd();
          }
          oprot.writeFieldEnd();
        }
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class TCloudConfigurationTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    @Override
    public TCloudConfigurationTupleScheme getScheme() {
      return new TCloudConfigurationTupleScheme();
    }
  }

  private static class TCloudConfigurationTupleScheme extends org.apache.thrift.scheme.TupleScheme<TCloudConfiguration> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, TCloudConfiguration struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      java.util.BitSet optionals = new java.util.BitSet();
      if (struct.isSetCloud_type()) {
        optionals.set(0);
      }
      if (struct.isSetCloud_properties()) {
        optionals.set(1);
      }
      if (struct.isSetCloud_properties_v2()) {
        optionals.set(2);
      }
      oprot.writeBitSet(optionals, 3);
      if (struct.isSetCloud_type()) {
        oprot.writeI32(struct.cloud_type.getValue());
      }
      if (struct.isSetCloud_properties()) {
        {
          oprot.writeI32(struct.cloud_properties.size());
          for (TCloudProperty _iter9 : struct.cloud_properties)
          {
            _iter9.write(oprot);
          }
        }
      }
      if (struct.isSetCloud_properties_v2()) {
        {
          oprot.writeI32(struct.cloud_properties_v2.size());
          for (java.util.Map.Entry<java.lang.String, java.lang.String> _iter10 : struct.cloud_properties_v2.entrySet())
          {
            oprot.writeString(_iter10.getKey());
            oprot.writeString(_iter10.getValue());
          }
        }
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, TCloudConfiguration struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      java.util.BitSet incoming = iprot.readBitSet(3);
      if (incoming.get(0)) {
        struct.cloud_type = com.starrocks.thrift.TCloudType.findByValue(iprot.readI32());
        struct.setCloud_typeIsSet(true);
      }
      if (incoming.get(1)) {
        {
          org.apache.thrift.protocol.TList _list11 = iprot.readListBegin(org.apache.thrift.protocol.TType.STRUCT);
          struct.cloud_properties = new java.util.ArrayList<TCloudProperty>(_list11.size);
          @org.apache.thrift.annotation.Nullable TCloudProperty _elem12;
          for (int _i13 = 0; _i13 < _list11.size; ++_i13)
          {
            _elem12 = new TCloudProperty();
            _elem12.read(iprot);
            struct.cloud_properties.add(_elem12);
          }
        }
        struct.setCloud_propertiesIsSet(true);
      }
      if (incoming.get(2)) {
        {
          org.apache.thrift.protocol.TMap _map14 = iprot.readMapBegin(org.apache.thrift.protocol.TType.STRING, org.apache.thrift.protocol.TType.STRING); 
          struct.cloud_properties_v2 = new java.util.HashMap<java.lang.String,java.lang.String>(2*_map14.size);
          @org.apache.thrift.annotation.Nullable java.lang.String _key15;
          @org.apache.thrift.annotation.Nullable java.lang.String _val16;
          for (int _i17 = 0; _i17 < _map14.size; ++_i17)
          {
            _key15 = iprot.readString();
            _val16 = iprot.readString();
            struct.cloud_properties_v2.put(_key15, _val16);
          }
        }
        struct.setCloud_properties_v2IsSet(true);
      }
    }
  }

  private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
    return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
  }
}

