// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: internal_service.proto

package io.datafibre.fibre.proto;

public interface PTabletWriterAddChunksRequestOrBuilder extends
    // @@protoc_insertion_point(interface_extends:starrocks.PTabletWriterAddChunksRequest)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <code>optional .starrocks.PUniqueId id = 1;</code>
   * @return Whether the id field is set.
   */
  boolean hasId();
  /**
   * <code>optional .starrocks.PUniqueId id = 1;</code>
   * @return The id.
   */
  io.datafibre.fibre.proto.PUniqueId getId();
  /**
   * <code>optional .starrocks.PUniqueId id = 1;</code>
   */
  io.datafibre.fibre.proto.PUniqueIdOrBuilder getIdOrBuilder();

  /**
   * <code>repeated .starrocks.PTabletWriterAddChunkRequest requests = 2;</code>
   */
  java.util.List<io.datafibre.fibre.proto.PTabletWriterAddChunkRequest>
      getRequestsList();
  /**
   * <code>repeated .starrocks.PTabletWriterAddChunkRequest requests = 2;</code>
   */
  io.datafibre.fibre.proto.PTabletWriterAddChunkRequest getRequests(int index);
  /**
   * <code>repeated .starrocks.PTabletWriterAddChunkRequest requests = 2;</code>
   */
  int getRequestsCount();
  /**
   * <code>repeated .starrocks.PTabletWriterAddChunkRequest requests = 2;</code>
   */
  java.util.List<? extends io.datafibre.fibre.proto.PTabletWriterAddChunkRequestOrBuilder>
      getRequestsOrBuilderList();
  /**
   * <code>repeated .starrocks.PTabletWriterAddChunkRequest requests = 2;</code>
   */
  io.datafibre.fibre.proto.PTabletWriterAddChunkRequestOrBuilder getRequestsOrBuilder(
      int index);

  /**
   * <pre>
   * all request's chunk are repeated if true
   * only first request's chunk will be set
   * </pre>
   *
   * <code>optional bool is_repeated_chunk = 3 [default = false];</code>
   * @return Whether the isRepeatedChunk field is set.
   */
  boolean hasIsRepeatedChunk();
  /**
   * <pre>
   * all request's chunk are repeated if true
   * only first request's chunk will be set
   * </pre>
   *
   * <code>optional bool is_repeated_chunk = 3 [default = false];</code>
   * @return The isRepeatedChunk.
   */
  boolean getIsRepeatedChunk();
}
