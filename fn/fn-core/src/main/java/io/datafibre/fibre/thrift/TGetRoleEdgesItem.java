/**
 * Autogenerated by Thrift Compiler (0.19.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package io.datafibre.fibre.thrift;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked", "unused"})
@javax.annotation.Generated(value = "Autogenerated by Thrift Compiler (0.19.0)", date = "2024-02-22")
public class TGetRoleEdgesItem implements org.apache.thrift.TBase<TGetRoleEdgesItem, TGetRoleEdgesItem._Fields>, java.io.Serializable, Cloneable, Comparable<TGetRoleEdgesItem> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("TGetRoleEdgesItem");

  private static final org.apache.thrift.protocol.TField FROM_ROLE_FIELD_DESC = new org.apache.thrift.protocol.TField("from_role", org.apache.thrift.protocol.TType.STRING, (short)1);
  private static final org.apache.thrift.protocol.TField TO_ROLE_FIELD_DESC = new org.apache.thrift.protocol.TField("to_role", org.apache.thrift.protocol.TType.STRING, (short)2);
  private static final org.apache.thrift.protocol.TField TO_USER_FIELD_DESC = new org.apache.thrift.protocol.TField("to_user", org.apache.thrift.protocol.TType.STRING, (short)3);

  private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new TGetRoleEdgesItemStandardSchemeFactory();
  private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new TGetRoleEdgesItemTupleSchemeFactory();

  public @org.apache.thrift.annotation.Nullable java.lang.String from_role; // optional
  public @org.apache.thrift.annotation.Nullable java.lang.String to_role; // optional
  public @org.apache.thrift.annotation.Nullable java.lang.String to_user; // optional

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    FROM_ROLE((short)1, "from_role"),
    TO_ROLE((short)2, "to_role"),
    TO_USER((short)3, "to_user");

    private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

    static {
      for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    @org.apache.thrift.annotation.Nullable
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // FROM_ROLE
          return FROM_ROLE;
        case 2: // TO_ROLE
          return TO_ROLE;
        case 3: // TO_USER
          return TO_USER;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    @org.apache.thrift.annotation.Nullable
    public static _Fields findByName(java.lang.String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final java.lang.String _fieldName;

    _Fields(short thriftId, java.lang.String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    @Override
    public short getThriftFieldId() {
      return _thriftId;
    }

    @Override
    public java.lang.String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final _Fields optionals[] = {_Fields.FROM_ROLE,_Fields.TO_ROLE,_Fields.TO_USER};
  public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.FROM_ROLE, new org.apache.thrift.meta_data.FieldMetaData("from_role", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.TO_ROLE, new org.apache.thrift.meta_data.FieldMetaData("to_role", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.TO_USER, new org.apache.thrift.meta_data.FieldMetaData("to_user", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(TGetRoleEdgesItem.class, metaDataMap);
  }

  public TGetRoleEdgesItem() {
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public TGetRoleEdgesItem(TGetRoleEdgesItem other) {
    if (other.isSetFrom_role()) {
      this.from_role = other.from_role;
    }
    if (other.isSetTo_role()) {
      this.to_role = other.to_role;
    }
    if (other.isSetTo_user()) {
      this.to_user = other.to_user;
    }
  }

  @Override
  public TGetRoleEdgesItem deepCopy() {
    return new TGetRoleEdgesItem(this);
  }

  @Override
  public void clear() {
    this.from_role = null;
    this.to_role = null;
    this.to_user = null;
  }

  @org.apache.thrift.annotation.Nullable
  public java.lang.String getFrom_role() {
    return this.from_role;
  }

  public TGetRoleEdgesItem setFrom_role(@org.apache.thrift.annotation.Nullable java.lang.String from_role) {
    this.from_role = from_role;
    return this;
  }

  public void unsetFrom_role() {
    this.from_role = null;
  }

  /** Returns true if field from_role is set (has been assigned a value) and false otherwise */
  public boolean isSetFrom_role() {
    return this.from_role != null;
  }

  public void setFrom_roleIsSet(boolean value) {
    if (!value) {
      this.from_role = null;
    }
  }

  @org.apache.thrift.annotation.Nullable
  public java.lang.String getTo_role() {
    return this.to_role;
  }

  public TGetRoleEdgesItem setTo_role(@org.apache.thrift.annotation.Nullable java.lang.String to_role) {
    this.to_role = to_role;
    return this;
  }

  public void unsetTo_role() {
    this.to_role = null;
  }

  /** Returns true if field to_role is set (has been assigned a value) and false otherwise */
  public boolean isSetTo_role() {
    return this.to_role != null;
  }

  public void setTo_roleIsSet(boolean value) {
    if (!value) {
      this.to_role = null;
    }
  }

  @org.apache.thrift.annotation.Nullable
  public java.lang.String getTo_user() {
    return this.to_user;
  }

  public TGetRoleEdgesItem setTo_user(@org.apache.thrift.annotation.Nullable java.lang.String to_user) {
    this.to_user = to_user;
    return this;
  }

  public void unsetTo_user() {
    this.to_user = null;
  }

  /** Returns true if field to_user is set (has been assigned a value) and false otherwise */
  public boolean isSetTo_user() {
    return this.to_user != null;
  }

  public void setTo_userIsSet(boolean value) {
    if (!value) {
      this.to_user = null;
    }
  }

  @Override
  public void setFieldValue(_Fields field, @org.apache.thrift.annotation.Nullable java.lang.Object value) {
    switch (field) {
    case FROM_ROLE:
      if (value == null) {
        unsetFrom_role();
      } else {
        setFrom_role((java.lang.String)value);
      }
      break;

    case TO_ROLE:
      if (value == null) {
        unsetTo_role();
      } else {
        setTo_role((java.lang.String)value);
      }
      break;

    case TO_USER:
      if (value == null) {
        unsetTo_user();
      } else {
        setTo_user((java.lang.String)value);
      }
      break;

    }
  }

  @org.apache.thrift.annotation.Nullable
  @Override
  public java.lang.Object getFieldValue(_Fields field) {
    switch (field) {
    case FROM_ROLE:
      return getFrom_role();

    case TO_ROLE:
      return getTo_role();

    case TO_USER:
      return getTo_user();

    }
    throw new java.lang.IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  @Override
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new java.lang.IllegalArgumentException();
    }

    switch (field) {
    case FROM_ROLE:
      return isSetFrom_role();
    case TO_ROLE:
      return isSetTo_role();
    case TO_USER:
      return isSetTo_user();
    }
    throw new java.lang.IllegalStateException();
  }

  @Override
  public boolean equals(java.lang.Object that) {
    if (that instanceof TGetRoleEdgesItem)
      return this.equals((TGetRoleEdgesItem)that);
    return false;
  }

  public boolean equals(TGetRoleEdgesItem that) {
    if (that == null)
      return false;
    if (this == that)
      return true;

    boolean this_present_from_role = true && this.isSetFrom_role();
    boolean that_present_from_role = true && that.isSetFrom_role();
    if (this_present_from_role || that_present_from_role) {
      if (!(this_present_from_role && that_present_from_role))
        return false;
      if (!this.from_role.equals(that.from_role))
        return false;
    }

    boolean this_present_to_role = true && this.isSetTo_role();
    boolean that_present_to_role = true && that.isSetTo_role();
    if (this_present_to_role || that_present_to_role) {
      if (!(this_present_to_role && that_present_to_role))
        return false;
      if (!this.to_role.equals(that.to_role))
        return false;
    }

    boolean this_present_to_user = true && this.isSetTo_user();
    boolean that_present_to_user = true && that.isSetTo_user();
    if (this_present_to_user || that_present_to_user) {
      if (!(this_present_to_user && that_present_to_user))
        return false;
      if (!this.to_user.equals(that.to_user))
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    int hashCode = 1;

    hashCode = hashCode * 8191 + ((isSetFrom_role()) ? 131071 : 524287);
    if (isSetFrom_role())
      hashCode = hashCode * 8191 + from_role.hashCode();

    hashCode = hashCode * 8191 + ((isSetTo_role()) ? 131071 : 524287);
    if (isSetTo_role())
      hashCode = hashCode * 8191 + to_role.hashCode();

    hashCode = hashCode * 8191 + ((isSetTo_user()) ? 131071 : 524287);
    if (isSetTo_user())
      hashCode = hashCode * 8191 + to_user.hashCode();

    return hashCode;
  }

  @Override
  public int compareTo(TGetRoleEdgesItem other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = java.lang.Boolean.compare(isSetFrom_role(), other.isSetFrom_role());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetFrom_role()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.from_role, other.from_role);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetTo_role(), other.isSetTo_role());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetTo_role()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.to_role, other.to_role);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetTo_user(), other.isSetTo_user());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetTo_user()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.to_user, other.to_user);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  @org.apache.thrift.annotation.Nullable
  @Override
  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  @Override
  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    scheme(iprot).read(iprot, this);
  }

  @Override
  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    scheme(oprot).write(oprot, this);
  }

  @Override
  public java.lang.String toString() {
    java.lang.StringBuilder sb = new java.lang.StringBuilder("TGetRoleEdgesItem(");
    boolean first = true;

    if (isSetFrom_role()) {
      sb.append("from_role:");
      if (this.from_role == null) {
        sb.append("null");
      } else {
        sb.append(this.from_role);
      }
      first = false;
    }
    if (isSetTo_role()) {
      if (!first) sb.append(", ");
      sb.append("to_role:");
      if (this.to_role == null) {
        sb.append("null");
      } else {
        sb.append(this.to_role);
      }
      first = false;
    }
    if (isSetTo_user()) {
      if (!first) sb.append(", ");
      sb.append("to_user:");
      if (this.to_user == null) {
        sb.append("null");
      } else {
        sb.append(this.to_user);
      }
      first = false;
    }
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // check for sub-struct validity
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
    try {
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class TGetRoleEdgesItemStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    @Override
    public TGetRoleEdgesItemStandardScheme getScheme() {
      return new TGetRoleEdgesItemStandardScheme();
    }
  }

  private static class TGetRoleEdgesItemStandardScheme extends org.apache.thrift.scheme.StandardScheme<TGetRoleEdgesItem> {

    @Override
    public void read(org.apache.thrift.protocol.TProtocol iprot, TGetRoleEdgesItem struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // FROM_ROLE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.from_role = iprot.readString();
              struct.setFrom_roleIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // TO_ROLE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.to_role = iprot.readString();
              struct.setTo_roleIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // TO_USER
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.to_user = iprot.readString();
              struct.setTo_userIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    @Override
    public void write(org.apache.thrift.protocol.TProtocol oprot, TGetRoleEdgesItem struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      if (struct.from_role != null) {
        if (struct.isSetFrom_role()) {
          oprot.writeFieldBegin(FROM_ROLE_FIELD_DESC);
          oprot.writeString(struct.from_role);
          oprot.writeFieldEnd();
        }
      }
      if (struct.to_role != null) {
        if (struct.isSetTo_role()) {
          oprot.writeFieldBegin(TO_ROLE_FIELD_DESC);
          oprot.writeString(struct.to_role);
          oprot.writeFieldEnd();
        }
      }
      if (struct.to_user != null) {
        if (struct.isSetTo_user()) {
          oprot.writeFieldBegin(TO_USER_FIELD_DESC);
          oprot.writeString(struct.to_user);
          oprot.writeFieldEnd();
        }
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class TGetRoleEdgesItemTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    @Override
    public TGetRoleEdgesItemTupleScheme getScheme() {
      return new TGetRoleEdgesItemTupleScheme();
    }
  }

  private static class TGetRoleEdgesItemTupleScheme extends org.apache.thrift.scheme.TupleScheme<TGetRoleEdgesItem> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, TGetRoleEdgesItem struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      java.util.BitSet optionals = new java.util.BitSet();
      if (struct.isSetFrom_role()) {
        optionals.set(0);
      }
      if (struct.isSetTo_role()) {
        optionals.set(1);
      }
      if (struct.isSetTo_user()) {
        optionals.set(2);
      }
      oprot.writeBitSet(optionals, 3);
      if (struct.isSetFrom_role()) {
        oprot.writeString(struct.from_role);
      }
      if (struct.isSetTo_role()) {
        oprot.writeString(struct.to_role);
      }
      if (struct.isSetTo_user()) {
        oprot.writeString(struct.to_user);
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, TGetRoleEdgesItem struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      java.util.BitSet incoming = iprot.readBitSet(3);
      if (incoming.get(0)) {
        struct.from_role = iprot.readString();
        struct.setFrom_roleIsSet(true);
      }
      if (incoming.get(1)) {
        struct.to_role = iprot.readString();
        struct.setTo_roleIsSet(true);
      }
      if (incoming.get(2)) {
        struct.to_user = iprot.readString();
        struct.setTo_userIsSet(true);
      }
    }
  }

  private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
    return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
  }
}

