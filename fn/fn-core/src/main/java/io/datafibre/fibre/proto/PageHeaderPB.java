// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: binlog.proto

package com.starrocks.proto;

/**
 * Protobuf type {@code starrocks.PageHeaderPB}
 */
public final class PageHeaderPB extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:starrocks.PageHeaderPB)
    PageHeaderPBOrBuilder {
private static final long serialVersionUID = 0L;
  // Use PageHeaderPB.newBuilder() to construct.
  private PageHeaderPB(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private PageHeaderPB() {
    pageType_ = 0;
    compressType_ = 0;
    rowsets_ = emptyLongList();
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new PageHeaderPB();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.starrocks.proto.Binlog.internal_static_starrocks_PageHeaderPB_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.starrocks.proto.Binlog.internal_static_starrocks_PageHeaderPB_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.starrocks.proto.PageHeaderPB.class, com.starrocks.proto.PageHeaderPB.Builder.class);
  }

  private int bitField0_;
  public static final int PAGE_TYPE_FIELD_NUMBER = 1;
  private int pageType_;
  /**
   * <pre>
   * type of page
   * </pre>
   *
   * <code>optional .starrocks.PageType page_type = 1;</code>
   * @return Whether the pageType field is set.
   */
  @java.lang.Override public boolean hasPageType() {
    return ((bitField0_ & 0x00000001) != 0);
  }
  /**
   * <pre>
   * type of page
   * </pre>
   *
   * <code>optional .starrocks.PageType page_type = 1;</code>
   * @return The pageType.
   */
  @java.lang.Override public com.starrocks.proto.PageType getPageType() {
    @SuppressWarnings("deprecation")
    com.starrocks.proto.PageType result = com.starrocks.proto.PageType.valueOf(pageType_);
    return result == null ? com.starrocks.proto.PageType.NORMAL : result;
  }

  public static final int COMPRESS_TYPE_FIELD_NUMBER = 2;
  private int compressType_;
  /**
   * <pre>
   * compress type
   * </pre>
   *
   * <code>optional .starrocks.CompressionTypePB compress_type = 2;</code>
   * @return Whether the compressType field is set.
   */
  @java.lang.Override public boolean hasCompressType() {
    return ((bitField0_ & 0x00000002) != 0);
  }
  /**
   * <pre>
   * compress type
   * </pre>
   *
   * <code>optional .starrocks.CompressionTypePB compress_type = 2;</code>
   * @return The compressType.
   */
  @java.lang.Override public com.starrocks.proto.CompressionTypePB getCompressType() {
    @SuppressWarnings("deprecation")
    com.starrocks.proto.CompressionTypePB result = com.starrocks.proto.CompressionTypePB.valueOf(compressType_);
    return result == null ? com.starrocks.proto.CompressionTypePB.UNKNOWN_COMPRESSION : result;
  }

  public static final int UNCOMPRESSED_SIZE_FIELD_NUMBER = 3;
  private int uncompressedSize_;
  /**
   * <pre>
   * size of uncompressed page
   * </pre>
   *
   * <code>optional int32 uncompressed_size = 3;</code>
   * @return Whether the uncompressedSize field is set.
   */
  @java.lang.Override
  public boolean hasUncompressedSize() {
    return ((bitField0_ & 0x00000004) != 0);
  }
  /**
   * <pre>
   * size of uncompressed page
   * </pre>
   *
   * <code>optional int32 uncompressed_size = 3;</code>
   * @return The uncompressedSize.
   */
  @java.lang.Override
  public int getUncompressedSize() {
    return uncompressedSize_;
  }

  public static final int COMPRESSED_SIZE_FIELD_NUMBER = 4;
  private int compressedSize_;
  /**
   * <pre>
   * size of compressed page
   * </pre>
   *
   * <code>optional int32 compressed_size = 4;</code>
   * @return Whether the compressedSize field is set.
   */
  @java.lang.Override
  public boolean hasCompressedSize() {
    return ((bitField0_ & 0x00000008) != 0);
  }
  /**
   * <pre>
   * size of compressed page
   * </pre>
   *
   * <code>optional int32 compressed_size = 4;</code>
   * @return The compressedSize.
   */
  @java.lang.Override
  public int getCompressedSize() {
    return compressedSize_;
  }

  public static final int COMPRESSED_PAGE_CRC_FIELD_NUMBER = 5;
  private int compressedPageCrc_;
  /**
   * <pre>
   * crc for compressed page
   * </pre>
   *
   * <code>optional int32 compressed_page_crc = 5;</code>
   * @return Whether the compressedPageCrc field is set.
   */
  @java.lang.Override
  public boolean hasCompressedPageCrc() {
    return ((bitField0_ & 0x00000010) != 0);
  }
  /**
   * <pre>
   * crc for compressed page
   * </pre>
   *
   * <code>optional int32 compressed_page_crc = 5;</code>
   * @return The compressedPageCrc.
   */
  @java.lang.Override
  public int getCompressedPageCrc() {
    return compressedPageCrc_;
  }

  public static final int VERSION_FIELD_NUMBER = 6;
  private long version_;
  /**
   * <pre>
   * the version of change events in the page
   * </pre>
   *
   * <code>optional int64 version = 6;</code>
   * @return Whether the version field is set.
   */
  @java.lang.Override
  public boolean hasVersion() {
    return ((bitField0_ & 0x00000020) != 0);
  }
  /**
   * <pre>
   * the version of change events in the page
   * </pre>
   *
   * <code>optional int64 version = 6;</code>
   * @return The version.
   */
  @java.lang.Override
  public long getVersion() {
    return version_;
  }

  public static final int NUM_LOG_ENTRIES_FIELD_NUMBER = 7;
  private int numLogEntries_;
  /**
   * <pre>
   * number of log entries
   * </pre>
   *
   * <code>optional int32 num_log_entries = 7;</code>
   * @return Whether the numLogEntries field is set.
   */
  @java.lang.Override
  public boolean hasNumLogEntries() {
    return ((bitField0_ & 0x00000040) != 0);
  }
  /**
   * <pre>
   * number of log entries
   * </pre>
   *
   * <code>optional int32 num_log_entries = 7;</code>
   * @return The numLogEntries.
   */
  @java.lang.Override
  public int getNumLogEntries() {
    return numLogEntries_;
  }

  public static final int START_SEQ_ID_FIELD_NUMBER = 8;
  private long startSeqId_;
  /**
   * <pre>
   * sequence number of the first change event in the page
   * </pre>
   *
   * <code>optional int64 start_seq_id = 8;</code>
   * @return Whether the startSeqId field is set.
   */
  @java.lang.Override
  public boolean hasStartSeqId() {
    return ((bitField0_ & 0x00000080) != 0);
  }
  /**
   * <pre>
   * sequence number of the first change event in the page
   * </pre>
   *
   * <code>optional int64 start_seq_id = 8;</code>
   * @return The startSeqId.
   */
  @java.lang.Override
  public long getStartSeqId() {
    return startSeqId_;
  }

  public static final int END_SEQ_ID_FIELD_NUMBER = 9;
  private long endSeqId_;
  /**
   * <pre>
   * sequence number of the last change event in the page
   * </pre>
   *
   * <code>optional int64 end_seq_id = 9;</code>
   * @return Whether the endSeqId field is set.
   */
  @java.lang.Override
  public boolean hasEndSeqId() {
    return ((bitField0_ & 0x00000100) != 0);
  }
  /**
   * <pre>
   * sequence number of the last change event in the page
   * </pre>
   *
   * <code>optional int64 end_seq_id = 9;</code>
   * @return The endSeqId.
   */
  @java.lang.Override
  public long getEndSeqId() {
    return endSeqId_;
  }

  public static final int TIMESTAMP_IN_US_FIELD_NUMBER = 10;
  private long timestampInUs_;
  /**
   * <pre>
   * timestamp of change events in the page. Currently events
   * in a version have the same timestamp
   * </pre>
   *
   * <code>optional int64 timestamp_in_us = 10;</code>
   * @return Whether the timestampInUs field is set.
   */
  @java.lang.Override
  public boolean hasTimestampInUs() {
    return ((bitField0_ & 0x00000200) != 0);
  }
  /**
   * <pre>
   * timestamp of change events in the page. Currently events
   * in a version have the same timestamp
   * </pre>
   *
   * <code>optional int64 timestamp_in_us = 10;</code>
   * @return The timestampInUs.
   */
  @java.lang.Override
  public long getTimestampInUs() {
    return timestampInUs_;
  }

  public static final int END_OF_VERSION_FIELD_NUMBER = 11;
  private boolean endOfVersion_;
  /**
   * <pre>
   * whether this is the last page of the version
   * </pre>
   *
   * <code>optional bool end_of_version = 11;</code>
   * @return Whether the endOfVersion field is set.
   */
  @java.lang.Override
  public boolean hasEndOfVersion() {
    return ((bitField0_ & 0x00000400) != 0);
  }
  /**
   * <pre>
   * whether this is the last page of the version
   * </pre>
   *
   * <code>optional bool end_of_version = 11;</code>
   * @return The endOfVersion.
   */
  @java.lang.Override
  public boolean getEndOfVersion() {
    return endOfVersion_;
  }

  public static final int ROWSETS_FIELD_NUMBER = 12;
  private com.google.protobuf.Internal.LongList rowsets_;
  /**
   * <pre>
   * rowsets that this page uses
   * </pre>
   *
   * <code>repeated int64 rowsets = 12;</code>
   * @return A list containing the rowsets.
   */
  @java.lang.Override
  public java.util.List<java.lang.Long>
      getRowsetsList() {
    return rowsets_;
  }
  /**
   * <pre>
   * rowsets that this page uses
   * </pre>
   *
   * <code>repeated int64 rowsets = 12;</code>
   * @return The count of rowsets.
   */
  public int getRowsetsCount() {
    return rowsets_.size();
  }
  /**
   * <pre>
   * rowsets that this page uses
   * </pre>
   *
   * <code>repeated int64 rowsets = 12;</code>
   * @param index The index of the element to return.
   * @return The rowsets at the given index.
   */
  public long getRowsets(int index) {
    return rowsets_.getLong(index);
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (((bitField0_ & 0x00000001) != 0)) {
      output.writeEnum(1, pageType_);
    }
    if (((bitField0_ & 0x00000002) != 0)) {
      output.writeEnum(2, compressType_);
    }
    if (((bitField0_ & 0x00000004) != 0)) {
      output.writeInt32(3, uncompressedSize_);
    }
    if (((bitField0_ & 0x00000008) != 0)) {
      output.writeInt32(4, compressedSize_);
    }
    if (((bitField0_ & 0x00000010) != 0)) {
      output.writeInt32(5, compressedPageCrc_);
    }
    if (((bitField0_ & 0x00000020) != 0)) {
      output.writeInt64(6, version_);
    }
    if (((bitField0_ & 0x00000040) != 0)) {
      output.writeInt32(7, numLogEntries_);
    }
    if (((bitField0_ & 0x00000080) != 0)) {
      output.writeInt64(8, startSeqId_);
    }
    if (((bitField0_ & 0x00000100) != 0)) {
      output.writeInt64(9, endSeqId_);
    }
    if (((bitField0_ & 0x00000200) != 0)) {
      output.writeInt64(10, timestampInUs_);
    }
    if (((bitField0_ & 0x00000400) != 0)) {
      output.writeBool(11, endOfVersion_);
    }
    for (int i = 0; i < rowsets_.size(); i++) {
      output.writeInt64(12, rowsets_.getLong(i));
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (((bitField0_ & 0x00000001) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeEnumSize(1, pageType_);
    }
    if (((bitField0_ & 0x00000002) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeEnumSize(2, compressType_);
    }
    if (((bitField0_ & 0x00000004) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(3, uncompressedSize_);
    }
    if (((bitField0_ & 0x00000008) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(4, compressedSize_);
    }
    if (((bitField0_ & 0x00000010) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(5, compressedPageCrc_);
    }
    if (((bitField0_ & 0x00000020) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt64Size(6, version_);
    }
    if (((bitField0_ & 0x00000040) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(7, numLogEntries_);
    }
    if (((bitField0_ & 0x00000080) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt64Size(8, startSeqId_);
    }
    if (((bitField0_ & 0x00000100) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt64Size(9, endSeqId_);
    }
    if (((bitField0_ & 0x00000200) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt64Size(10, timestampInUs_);
    }
    if (((bitField0_ & 0x00000400) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(11, endOfVersion_);
    }
    {
      int dataSize = 0;
      for (int i = 0; i < rowsets_.size(); i++) {
        dataSize += com.google.protobuf.CodedOutputStream
          .computeInt64SizeNoTag(rowsets_.getLong(i));
      }
      size += dataSize;
      size += 1 * getRowsetsList().size();
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.starrocks.proto.PageHeaderPB)) {
      return super.equals(obj);
    }
    com.starrocks.proto.PageHeaderPB other = (com.starrocks.proto.PageHeaderPB) obj;

    if (hasPageType() != other.hasPageType()) return false;
    if (hasPageType()) {
      if (pageType_ != other.pageType_) return false;
    }
    if (hasCompressType() != other.hasCompressType()) return false;
    if (hasCompressType()) {
      if (compressType_ != other.compressType_) return false;
    }
    if (hasUncompressedSize() != other.hasUncompressedSize()) return false;
    if (hasUncompressedSize()) {
      if (getUncompressedSize()
          != other.getUncompressedSize()) return false;
    }
    if (hasCompressedSize() != other.hasCompressedSize()) return false;
    if (hasCompressedSize()) {
      if (getCompressedSize()
          != other.getCompressedSize()) return false;
    }
    if (hasCompressedPageCrc() != other.hasCompressedPageCrc()) return false;
    if (hasCompressedPageCrc()) {
      if (getCompressedPageCrc()
          != other.getCompressedPageCrc()) return false;
    }
    if (hasVersion() != other.hasVersion()) return false;
    if (hasVersion()) {
      if (getVersion()
          != other.getVersion()) return false;
    }
    if (hasNumLogEntries() != other.hasNumLogEntries()) return false;
    if (hasNumLogEntries()) {
      if (getNumLogEntries()
          != other.getNumLogEntries()) return false;
    }
    if (hasStartSeqId() != other.hasStartSeqId()) return false;
    if (hasStartSeqId()) {
      if (getStartSeqId()
          != other.getStartSeqId()) return false;
    }
    if (hasEndSeqId() != other.hasEndSeqId()) return false;
    if (hasEndSeqId()) {
      if (getEndSeqId()
          != other.getEndSeqId()) return false;
    }
    if (hasTimestampInUs() != other.hasTimestampInUs()) return false;
    if (hasTimestampInUs()) {
      if (getTimestampInUs()
          != other.getTimestampInUs()) return false;
    }
    if (hasEndOfVersion() != other.hasEndOfVersion()) return false;
    if (hasEndOfVersion()) {
      if (getEndOfVersion()
          != other.getEndOfVersion()) return false;
    }
    if (!getRowsetsList()
        .equals(other.getRowsetsList())) return false;
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (hasPageType()) {
      hash = (37 * hash) + PAGE_TYPE_FIELD_NUMBER;
      hash = (53 * hash) + pageType_;
    }
    if (hasCompressType()) {
      hash = (37 * hash) + COMPRESS_TYPE_FIELD_NUMBER;
      hash = (53 * hash) + compressType_;
    }
    if (hasUncompressedSize()) {
      hash = (37 * hash) + UNCOMPRESSED_SIZE_FIELD_NUMBER;
      hash = (53 * hash) + getUncompressedSize();
    }
    if (hasCompressedSize()) {
      hash = (37 * hash) + COMPRESSED_SIZE_FIELD_NUMBER;
      hash = (53 * hash) + getCompressedSize();
    }
    if (hasCompressedPageCrc()) {
      hash = (37 * hash) + COMPRESSED_PAGE_CRC_FIELD_NUMBER;
      hash = (53 * hash) + getCompressedPageCrc();
    }
    if (hasVersion()) {
      hash = (37 * hash) + VERSION_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getVersion());
    }
    if (hasNumLogEntries()) {
      hash = (37 * hash) + NUM_LOG_ENTRIES_FIELD_NUMBER;
      hash = (53 * hash) + getNumLogEntries();
    }
    if (hasStartSeqId()) {
      hash = (37 * hash) + START_SEQ_ID_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getStartSeqId());
    }
    if (hasEndSeqId()) {
      hash = (37 * hash) + END_SEQ_ID_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getEndSeqId());
    }
    if (hasTimestampInUs()) {
      hash = (37 * hash) + TIMESTAMP_IN_US_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getTimestampInUs());
    }
    if (hasEndOfVersion()) {
      hash = (37 * hash) + END_OF_VERSION_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getEndOfVersion());
    }
    if (getRowsetsCount() > 0) {
      hash = (37 * hash) + ROWSETS_FIELD_NUMBER;
      hash = (53 * hash) + getRowsetsList().hashCode();
    }
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.starrocks.proto.PageHeaderPB parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.starrocks.proto.PageHeaderPB parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.starrocks.proto.PageHeaderPB parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.starrocks.proto.PageHeaderPB parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.starrocks.proto.PageHeaderPB parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.starrocks.proto.PageHeaderPB parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.starrocks.proto.PageHeaderPB parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.starrocks.proto.PageHeaderPB parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.starrocks.proto.PageHeaderPB parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static com.starrocks.proto.PageHeaderPB parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.starrocks.proto.PageHeaderPB parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.starrocks.proto.PageHeaderPB parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.starrocks.proto.PageHeaderPB prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code starrocks.PageHeaderPB}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:starrocks.PageHeaderPB)
      com.starrocks.proto.PageHeaderPBOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.starrocks.proto.Binlog.internal_static_starrocks_PageHeaderPB_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.starrocks.proto.Binlog.internal_static_starrocks_PageHeaderPB_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.starrocks.proto.PageHeaderPB.class, com.starrocks.proto.PageHeaderPB.Builder.class);
    }

    // Construct using com.starrocks.proto.PageHeaderPB.newBuilder()
    private Builder() {

    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);

    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      pageType_ = 0;
      bitField0_ = (bitField0_ & ~0x00000001);
      compressType_ = 0;
      bitField0_ = (bitField0_ & ~0x00000002);
      uncompressedSize_ = 0;
      bitField0_ = (bitField0_ & ~0x00000004);
      compressedSize_ = 0;
      bitField0_ = (bitField0_ & ~0x00000008);
      compressedPageCrc_ = 0;
      bitField0_ = (bitField0_ & ~0x00000010);
      version_ = 0L;
      bitField0_ = (bitField0_ & ~0x00000020);
      numLogEntries_ = 0;
      bitField0_ = (bitField0_ & ~0x00000040);
      startSeqId_ = 0L;
      bitField0_ = (bitField0_ & ~0x00000080);
      endSeqId_ = 0L;
      bitField0_ = (bitField0_ & ~0x00000100);
      timestampInUs_ = 0L;
      bitField0_ = (bitField0_ & ~0x00000200);
      endOfVersion_ = false;
      bitField0_ = (bitField0_ & ~0x00000400);
      rowsets_ = emptyLongList();
      bitField0_ = (bitField0_ & ~0x00000800);
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.starrocks.proto.Binlog.internal_static_starrocks_PageHeaderPB_descriptor;
    }

    @java.lang.Override
    public com.starrocks.proto.PageHeaderPB getDefaultInstanceForType() {
      return com.starrocks.proto.PageHeaderPB.getDefaultInstance();
    }

    @java.lang.Override
    public com.starrocks.proto.PageHeaderPB build() {
      com.starrocks.proto.PageHeaderPB result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.starrocks.proto.PageHeaderPB buildPartial() {
      com.starrocks.proto.PageHeaderPB result = new com.starrocks.proto.PageHeaderPB(this);
      int from_bitField0_ = bitField0_;
      int to_bitField0_ = 0;
      if (((from_bitField0_ & 0x00000001) != 0)) {
        to_bitField0_ |= 0x00000001;
      }
      result.pageType_ = pageType_;
      if (((from_bitField0_ & 0x00000002) != 0)) {
        to_bitField0_ |= 0x00000002;
      }
      result.compressType_ = compressType_;
      if (((from_bitField0_ & 0x00000004) != 0)) {
        result.uncompressedSize_ = uncompressedSize_;
        to_bitField0_ |= 0x00000004;
      }
      if (((from_bitField0_ & 0x00000008) != 0)) {
        result.compressedSize_ = compressedSize_;
        to_bitField0_ |= 0x00000008;
      }
      if (((from_bitField0_ & 0x00000010) != 0)) {
        result.compressedPageCrc_ = compressedPageCrc_;
        to_bitField0_ |= 0x00000010;
      }
      if (((from_bitField0_ & 0x00000020) != 0)) {
        result.version_ = version_;
        to_bitField0_ |= 0x00000020;
      }
      if (((from_bitField0_ & 0x00000040) != 0)) {
        result.numLogEntries_ = numLogEntries_;
        to_bitField0_ |= 0x00000040;
      }
      if (((from_bitField0_ & 0x00000080) != 0)) {
        result.startSeqId_ = startSeqId_;
        to_bitField0_ |= 0x00000080;
      }
      if (((from_bitField0_ & 0x00000100) != 0)) {
        result.endSeqId_ = endSeqId_;
        to_bitField0_ |= 0x00000100;
      }
      if (((from_bitField0_ & 0x00000200) != 0)) {
        result.timestampInUs_ = timestampInUs_;
        to_bitField0_ |= 0x00000200;
      }
      if (((from_bitField0_ & 0x00000400) != 0)) {
        result.endOfVersion_ = endOfVersion_;
        to_bitField0_ |= 0x00000400;
      }
      if (((bitField0_ & 0x00000800) != 0)) {
        rowsets_.makeImmutable();
        bitField0_ = (bitField0_ & ~0x00000800);
      }
      result.rowsets_ = rowsets_;
      result.bitField0_ = to_bitField0_;
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.starrocks.proto.PageHeaderPB) {
        return mergeFrom((com.starrocks.proto.PageHeaderPB)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.starrocks.proto.PageHeaderPB other) {
      if (other == com.starrocks.proto.PageHeaderPB.getDefaultInstance()) return this;
      if (other.hasPageType()) {
        setPageType(other.getPageType());
      }
      if (other.hasCompressType()) {
        setCompressType(other.getCompressType());
      }
      if (other.hasUncompressedSize()) {
        setUncompressedSize(other.getUncompressedSize());
      }
      if (other.hasCompressedSize()) {
        setCompressedSize(other.getCompressedSize());
      }
      if (other.hasCompressedPageCrc()) {
        setCompressedPageCrc(other.getCompressedPageCrc());
      }
      if (other.hasVersion()) {
        setVersion(other.getVersion());
      }
      if (other.hasNumLogEntries()) {
        setNumLogEntries(other.getNumLogEntries());
      }
      if (other.hasStartSeqId()) {
        setStartSeqId(other.getStartSeqId());
      }
      if (other.hasEndSeqId()) {
        setEndSeqId(other.getEndSeqId());
      }
      if (other.hasTimestampInUs()) {
        setTimestampInUs(other.getTimestampInUs());
      }
      if (other.hasEndOfVersion()) {
        setEndOfVersion(other.getEndOfVersion());
      }
      if (!other.rowsets_.isEmpty()) {
        if (rowsets_.isEmpty()) {
          rowsets_ = other.rowsets_;
          bitField0_ = (bitField0_ & ~0x00000800);
        } else {
          ensureRowsetsIsMutable();
          rowsets_.addAll(other.rowsets_);
        }
        onChanged();
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {
              int tmpRaw = input.readEnum();
              com.starrocks.proto.PageType tmpValue =
                  com.starrocks.proto.PageType.forNumber(tmpRaw);
              if (tmpValue == null) {
                mergeUnknownVarintField(1, tmpRaw);
              } else {
                pageType_ = tmpRaw;
                bitField0_ |= 0x00000001;
              }
              break;
            } // case 8
            case 16: {
              int tmpRaw = input.readEnum();
              com.starrocks.proto.CompressionTypePB tmpValue =
                  com.starrocks.proto.CompressionTypePB.forNumber(tmpRaw);
              if (tmpValue == null) {
                mergeUnknownVarintField(2, tmpRaw);
              } else {
                compressType_ = tmpRaw;
                bitField0_ |= 0x00000002;
              }
              break;
            } // case 16
            case 24: {
              uncompressedSize_ = input.readInt32();
              bitField0_ |= 0x00000004;
              break;
            } // case 24
            case 32: {
              compressedSize_ = input.readInt32();
              bitField0_ |= 0x00000008;
              break;
            } // case 32
            case 40: {
              compressedPageCrc_ = input.readInt32();
              bitField0_ |= 0x00000010;
              break;
            } // case 40
            case 48: {
              version_ = input.readInt64();
              bitField0_ |= 0x00000020;
              break;
            } // case 48
            case 56: {
              numLogEntries_ = input.readInt32();
              bitField0_ |= 0x00000040;
              break;
            } // case 56
            case 64: {
              startSeqId_ = input.readInt64();
              bitField0_ |= 0x00000080;
              break;
            } // case 64
            case 72: {
              endSeqId_ = input.readInt64();
              bitField0_ |= 0x00000100;
              break;
            } // case 72
            case 80: {
              timestampInUs_ = input.readInt64();
              bitField0_ |= 0x00000200;
              break;
            } // case 80
            case 88: {
              endOfVersion_ = input.readBool();
              bitField0_ |= 0x00000400;
              break;
            } // case 88
            case 96: {
              long v = input.readInt64();
              ensureRowsetsIsMutable();
              rowsets_.addLong(v);
              break;
            } // case 96
            case 98: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              ensureRowsetsIsMutable();
              while (input.getBytesUntilLimit() > 0) {
                rowsets_.addLong(input.readInt64());
              }
              input.popLimit(limit);
              break;
            } // case 98
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int bitField0_;

    private int pageType_ = 0;
    /**
     * <pre>
     * type of page
     * </pre>
     *
     * <code>optional .starrocks.PageType page_type = 1;</code>
     * @return Whether the pageType field is set.
     */
    @java.lang.Override public boolean hasPageType() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * type of page
     * </pre>
     *
     * <code>optional .starrocks.PageType page_type = 1;</code>
     * @return The pageType.
     */
    @java.lang.Override
    public com.starrocks.proto.PageType getPageType() {
      @SuppressWarnings("deprecation")
      com.starrocks.proto.PageType result = com.starrocks.proto.PageType.valueOf(pageType_);
      return result == null ? com.starrocks.proto.PageType.NORMAL : result;
    }
    /**
     * <pre>
     * type of page
     * </pre>
     *
     * <code>optional .starrocks.PageType page_type = 1;</code>
     * @param value The pageType to set.
     * @return This builder for chaining.
     */
    public Builder setPageType(com.starrocks.proto.PageType value) {
      if (value == null) {
        throw new NullPointerException();
      }
      bitField0_ |= 0x00000001;
      pageType_ = value.getNumber();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * type of page
     * </pre>
     *
     * <code>optional .starrocks.PageType page_type = 1;</code>
     * @return This builder for chaining.
     */
    public Builder clearPageType() {
      bitField0_ = (bitField0_ & ~0x00000001);
      pageType_ = 0;
      onChanged();
      return this;
    }

    private int compressType_ = 0;
    /**
     * <pre>
     * compress type
     * </pre>
     *
     * <code>optional .starrocks.CompressionTypePB compress_type = 2;</code>
     * @return Whether the compressType field is set.
     */
    @java.lang.Override public boolean hasCompressType() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <pre>
     * compress type
     * </pre>
     *
     * <code>optional .starrocks.CompressionTypePB compress_type = 2;</code>
     * @return The compressType.
     */
    @java.lang.Override
    public com.starrocks.proto.CompressionTypePB getCompressType() {
      @SuppressWarnings("deprecation")
      com.starrocks.proto.CompressionTypePB result = com.starrocks.proto.CompressionTypePB.valueOf(compressType_);
      return result == null ? com.starrocks.proto.CompressionTypePB.UNKNOWN_COMPRESSION : result;
    }
    /**
     * <pre>
     * compress type
     * </pre>
     *
     * <code>optional .starrocks.CompressionTypePB compress_type = 2;</code>
     * @param value The compressType to set.
     * @return This builder for chaining.
     */
    public Builder setCompressType(com.starrocks.proto.CompressionTypePB value) {
      if (value == null) {
        throw new NullPointerException();
      }
      bitField0_ |= 0x00000002;
      compressType_ = value.getNumber();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * compress type
     * </pre>
     *
     * <code>optional .starrocks.CompressionTypePB compress_type = 2;</code>
     * @return This builder for chaining.
     */
    public Builder clearCompressType() {
      bitField0_ = (bitField0_ & ~0x00000002);
      compressType_ = 0;
      onChanged();
      return this;
    }

    private int uncompressedSize_ ;
    /**
     * <pre>
     * size of uncompressed page
     * </pre>
     *
     * <code>optional int32 uncompressed_size = 3;</code>
     * @return Whether the uncompressedSize field is set.
     */
    @java.lang.Override
    public boolean hasUncompressedSize() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <pre>
     * size of uncompressed page
     * </pre>
     *
     * <code>optional int32 uncompressed_size = 3;</code>
     * @return The uncompressedSize.
     */
    @java.lang.Override
    public int getUncompressedSize() {
      return uncompressedSize_;
    }
    /**
     * <pre>
     * size of uncompressed page
     * </pre>
     *
     * <code>optional int32 uncompressed_size = 3;</code>
     * @param value The uncompressedSize to set.
     * @return This builder for chaining.
     */
    public Builder setUncompressedSize(int value) {
      bitField0_ |= 0x00000004;
      uncompressedSize_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * size of uncompressed page
     * </pre>
     *
     * <code>optional int32 uncompressed_size = 3;</code>
     * @return This builder for chaining.
     */
    public Builder clearUncompressedSize() {
      bitField0_ = (bitField0_ & ~0x00000004);
      uncompressedSize_ = 0;
      onChanged();
      return this;
    }

    private int compressedSize_ ;
    /**
     * <pre>
     * size of compressed page
     * </pre>
     *
     * <code>optional int32 compressed_size = 4;</code>
     * @return Whether the compressedSize field is set.
     */
    @java.lang.Override
    public boolean hasCompressedSize() {
      return ((bitField0_ & 0x00000008) != 0);
    }
    /**
     * <pre>
     * size of compressed page
     * </pre>
     *
     * <code>optional int32 compressed_size = 4;</code>
     * @return The compressedSize.
     */
    @java.lang.Override
    public int getCompressedSize() {
      return compressedSize_;
    }
    /**
     * <pre>
     * size of compressed page
     * </pre>
     *
     * <code>optional int32 compressed_size = 4;</code>
     * @param value The compressedSize to set.
     * @return This builder for chaining.
     */
    public Builder setCompressedSize(int value) {
      bitField0_ |= 0x00000008;
      compressedSize_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * size of compressed page
     * </pre>
     *
     * <code>optional int32 compressed_size = 4;</code>
     * @return This builder for chaining.
     */
    public Builder clearCompressedSize() {
      bitField0_ = (bitField0_ & ~0x00000008);
      compressedSize_ = 0;
      onChanged();
      return this;
    }

    private int compressedPageCrc_ ;
    /**
     * <pre>
     * crc for compressed page
     * </pre>
     *
     * <code>optional int32 compressed_page_crc = 5;</code>
     * @return Whether the compressedPageCrc field is set.
     */
    @java.lang.Override
    public boolean hasCompressedPageCrc() {
      return ((bitField0_ & 0x00000010) != 0);
    }
    /**
     * <pre>
     * crc for compressed page
     * </pre>
     *
     * <code>optional int32 compressed_page_crc = 5;</code>
     * @return The compressedPageCrc.
     */
    @java.lang.Override
    public int getCompressedPageCrc() {
      return compressedPageCrc_;
    }
    /**
     * <pre>
     * crc for compressed page
     * </pre>
     *
     * <code>optional int32 compressed_page_crc = 5;</code>
     * @param value The compressedPageCrc to set.
     * @return This builder for chaining.
     */
    public Builder setCompressedPageCrc(int value) {
      bitField0_ |= 0x00000010;
      compressedPageCrc_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * crc for compressed page
     * </pre>
     *
     * <code>optional int32 compressed_page_crc = 5;</code>
     * @return This builder for chaining.
     */
    public Builder clearCompressedPageCrc() {
      bitField0_ = (bitField0_ & ~0x00000010);
      compressedPageCrc_ = 0;
      onChanged();
      return this;
    }

    private long version_ ;
    /**
     * <pre>
     * the version of change events in the page
     * </pre>
     *
     * <code>optional int64 version = 6;</code>
     * @return Whether the version field is set.
     */
    @java.lang.Override
    public boolean hasVersion() {
      return ((bitField0_ & 0x00000020) != 0);
    }
    /**
     * <pre>
     * the version of change events in the page
     * </pre>
     *
     * <code>optional int64 version = 6;</code>
     * @return The version.
     */
    @java.lang.Override
    public long getVersion() {
      return version_;
    }
    /**
     * <pre>
     * the version of change events in the page
     * </pre>
     *
     * <code>optional int64 version = 6;</code>
     * @param value The version to set.
     * @return This builder for chaining.
     */
    public Builder setVersion(long value) {
      bitField0_ |= 0x00000020;
      version_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * the version of change events in the page
     * </pre>
     *
     * <code>optional int64 version = 6;</code>
     * @return This builder for chaining.
     */
    public Builder clearVersion() {
      bitField0_ = (bitField0_ & ~0x00000020);
      version_ = 0L;
      onChanged();
      return this;
    }

    private int numLogEntries_ ;
    /**
     * <pre>
     * number of log entries
     * </pre>
     *
     * <code>optional int32 num_log_entries = 7;</code>
     * @return Whether the numLogEntries field is set.
     */
    @java.lang.Override
    public boolean hasNumLogEntries() {
      return ((bitField0_ & 0x00000040) != 0);
    }
    /**
     * <pre>
     * number of log entries
     * </pre>
     *
     * <code>optional int32 num_log_entries = 7;</code>
     * @return The numLogEntries.
     */
    @java.lang.Override
    public int getNumLogEntries() {
      return numLogEntries_;
    }
    /**
     * <pre>
     * number of log entries
     * </pre>
     *
     * <code>optional int32 num_log_entries = 7;</code>
     * @param value The numLogEntries to set.
     * @return This builder for chaining.
     */
    public Builder setNumLogEntries(int value) {
      bitField0_ |= 0x00000040;
      numLogEntries_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * number of log entries
     * </pre>
     *
     * <code>optional int32 num_log_entries = 7;</code>
     * @return This builder for chaining.
     */
    public Builder clearNumLogEntries() {
      bitField0_ = (bitField0_ & ~0x00000040);
      numLogEntries_ = 0;
      onChanged();
      return this;
    }

    private long startSeqId_ ;
    /**
     * <pre>
     * sequence number of the first change event in the page
     * </pre>
     *
     * <code>optional int64 start_seq_id = 8;</code>
     * @return Whether the startSeqId field is set.
     */
    @java.lang.Override
    public boolean hasStartSeqId() {
      return ((bitField0_ & 0x00000080) != 0);
    }
    /**
     * <pre>
     * sequence number of the first change event in the page
     * </pre>
     *
     * <code>optional int64 start_seq_id = 8;</code>
     * @return The startSeqId.
     */
    @java.lang.Override
    public long getStartSeqId() {
      return startSeqId_;
    }
    /**
     * <pre>
     * sequence number of the first change event in the page
     * </pre>
     *
     * <code>optional int64 start_seq_id = 8;</code>
     * @param value The startSeqId to set.
     * @return This builder for chaining.
     */
    public Builder setStartSeqId(long value) {
      bitField0_ |= 0x00000080;
      startSeqId_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * sequence number of the first change event in the page
     * </pre>
     *
     * <code>optional int64 start_seq_id = 8;</code>
     * @return This builder for chaining.
     */
    public Builder clearStartSeqId() {
      bitField0_ = (bitField0_ & ~0x00000080);
      startSeqId_ = 0L;
      onChanged();
      return this;
    }

    private long endSeqId_ ;
    /**
     * <pre>
     * sequence number of the last change event in the page
     * </pre>
     *
     * <code>optional int64 end_seq_id = 9;</code>
     * @return Whether the endSeqId field is set.
     */
    @java.lang.Override
    public boolean hasEndSeqId() {
      return ((bitField0_ & 0x00000100) != 0);
    }
    /**
     * <pre>
     * sequence number of the last change event in the page
     * </pre>
     *
     * <code>optional int64 end_seq_id = 9;</code>
     * @return The endSeqId.
     */
    @java.lang.Override
    public long getEndSeqId() {
      return endSeqId_;
    }
    /**
     * <pre>
     * sequence number of the last change event in the page
     * </pre>
     *
     * <code>optional int64 end_seq_id = 9;</code>
     * @param value The endSeqId to set.
     * @return This builder for chaining.
     */
    public Builder setEndSeqId(long value) {
      bitField0_ |= 0x00000100;
      endSeqId_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * sequence number of the last change event in the page
     * </pre>
     *
     * <code>optional int64 end_seq_id = 9;</code>
     * @return This builder for chaining.
     */
    public Builder clearEndSeqId() {
      bitField0_ = (bitField0_ & ~0x00000100);
      endSeqId_ = 0L;
      onChanged();
      return this;
    }

    private long timestampInUs_ ;
    /**
     * <pre>
     * timestamp of change events in the page. Currently events
     * in a version have the same timestamp
     * </pre>
     *
     * <code>optional int64 timestamp_in_us = 10;</code>
     * @return Whether the timestampInUs field is set.
     */
    @java.lang.Override
    public boolean hasTimestampInUs() {
      return ((bitField0_ & 0x00000200) != 0);
    }
    /**
     * <pre>
     * timestamp of change events in the page. Currently events
     * in a version have the same timestamp
     * </pre>
     *
     * <code>optional int64 timestamp_in_us = 10;</code>
     * @return The timestampInUs.
     */
    @java.lang.Override
    public long getTimestampInUs() {
      return timestampInUs_;
    }
    /**
     * <pre>
     * timestamp of change events in the page. Currently events
     * in a version have the same timestamp
     * </pre>
     *
     * <code>optional int64 timestamp_in_us = 10;</code>
     * @param value The timestampInUs to set.
     * @return This builder for chaining.
     */
    public Builder setTimestampInUs(long value) {
      bitField0_ |= 0x00000200;
      timestampInUs_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * timestamp of change events in the page. Currently events
     * in a version have the same timestamp
     * </pre>
     *
     * <code>optional int64 timestamp_in_us = 10;</code>
     * @return This builder for chaining.
     */
    public Builder clearTimestampInUs() {
      bitField0_ = (bitField0_ & ~0x00000200);
      timestampInUs_ = 0L;
      onChanged();
      return this;
    }

    private boolean endOfVersion_ ;
    /**
     * <pre>
     * whether this is the last page of the version
     * </pre>
     *
     * <code>optional bool end_of_version = 11;</code>
     * @return Whether the endOfVersion field is set.
     */
    @java.lang.Override
    public boolean hasEndOfVersion() {
      return ((bitField0_ & 0x00000400) != 0);
    }
    /**
     * <pre>
     * whether this is the last page of the version
     * </pre>
     *
     * <code>optional bool end_of_version = 11;</code>
     * @return The endOfVersion.
     */
    @java.lang.Override
    public boolean getEndOfVersion() {
      return endOfVersion_;
    }
    /**
     * <pre>
     * whether this is the last page of the version
     * </pre>
     *
     * <code>optional bool end_of_version = 11;</code>
     * @param value The endOfVersion to set.
     * @return This builder for chaining.
     */
    public Builder setEndOfVersion(boolean value) {
      bitField0_ |= 0x00000400;
      endOfVersion_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * whether this is the last page of the version
     * </pre>
     *
     * <code>optional bool end_of_version = 11;</code>
     * @return This builder for chaining.
     */
    public Builder clearEndOfVersion() {
      bitField0_ = (bitField0_ & ~0x00000400);
      endOfVersion_ = false;
      onChanged();
      return this;
    }

    private com.google.protobuf.Internal.LongList rowsets_ = emptyLongList();
    private void ensureRowsetsIsMutable() {
      if (!((bitField0_ & 0x00000800) != 0)) {
        rowsets_ = mutableCopy(rowsets_);
        bitField0_ |= 0x00000800;
       }
    }
    /**
     * <pre>
     * rowsets that this page uses
     * </pre>
     *
     * <code>repeated int64 rowsets = 12;</code>
     * @return A list containing the rowsets.
     */
    public java.util.List<java.lang.Long>
        getRowsetsList() {
      return ((bitField0_ & 0x00000800) != 0) ?
               java.util.Collections.unmodifiableList(rowsets_) : rowsets_;
    }
    /**
     * <pre>
     * rowsets that this page uses
     * </pre>
     *
     * <code>repeated int64 rowsets = 12;</code>
     * @return The count of rowsets.
     */
    public int getRowsetsCount() {
      return rowsets_.size();
    }
    /**
     * <pre>
     * rowsets that this page uses
     * </pre>
     *
     * <code>repeated int64 rowsets = 12;</code>
     * @param index The index of the element to return.
     * @return The rowsets at the given index.
     */
    public long getRowsets(int index) {
      return rowsets_.getLong(index);
    }
    /**
     * <pre>
     * rowsets that this page uses
     * </pre>
     *
     * <code>repeated int64 rowsets = 12;</code>
     * @param index The index to set the value at.
     * @param value The rowsets to set.
     * @return This builder for chaining.
     */
    public Builder setRowsets(
        int index, long value) {
      ensureRowsetsIsMutable();
      rowsets_.setLong(index, value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * rowsets that this page uses
     * </pre>
     *
     * <code>repeated int64 rowsets = 12;</code>
     * @param value The rowsets to add.
     * @return This builder for chaining.
     */
    public Builder addRowsets(long value) {
      ensureRowsetsIsMutable();
      rowsets_.addLong(value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * rowsets that this page uses
     * </pre>
     *
     * <code>repeated int64 rowsets = 12;</code>
     * @param values The rowsets to add.
     * @return This builder for chaining.
     */
    public Builder addAllRowsets(
        java.lang.Iterable<? extends java.lang.Long> values) {
      ensureRowsetsIsMutable();
      com.google.protobuf.AbstractMessageLite.Builder.addAll(
          values, rowsets_);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * rowsets that this page uses
     * </pre>
     *
     * <code>repeated int64 rowsets = 12;</code>
     * @return This builder for chaining.
     */
    public Builder clearRowsets() {
      rowsets_ = emptyLongList();
      bitField0_ = (bitField0_ & ~0x00000800);
      onChanged();
      return this;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:starrocks.PageHeaderPB)
  }

  // @@protoc_insertion_point(class_scope:starrocks.PageHeaderPB)
  private static final com.starrocks.proto.PageHeaderPB DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.starrocks.proto.PageHeaderPB();
  }

  public static com.starrocks.proto.PageHeaderPB getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  @java.lang.Deprecated public static final com.google.protobuf.Parser<PageHeaderPB>
      PARSER = new com.google.protobuf.AbstractParser<PageHeaderPB>() {
    @java.lang.Override
    public PageHeaderPB parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<PageHeaderPB> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<PageHeaderPB> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.starrocks.proto.PageHeaderPB getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

