// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: data.proto

package com.starrocks.proto;

/**
 * <pre>
 * We only serialize slot_id_map, is_nulls, is_consts in first chunk when RPC.
 * </pre>
 *
 * Protobuf type {@code starrocks.ChunkPB}
 */
public final class ChunkPB extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:starrocks.ChunkPB)
    ChunkPBOrBuilder {
private static final long serialVersionUID = 0L;
  // Use ChunkPB.newBuilder() to construct.
  private ChunkPB(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private ChunkPB() {
    data_ = com.google.protobuf.ByteString.EMPTY;
    compressType_ = 0;
    slotIdMap_ = emptyIntList();
    isNulls_ = emptyBooleanList();
    isConsts_ = emptyBooleanList();
    tupleIdMap_ = emptyIntList();
    encodeLevel_ = emptyIntList();
    extraDataMetas_ = java.util.Collections.emptyList();
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new ChunkPB();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.starrocks.proto.Data.internal_static_starrocks_ChunkPB_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.starrocks.proto.Data.internal_static_starrocks_ChunkPB_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.starrocks.proto.ChunkPB.class, com.starrocks.proto.ChunkPB.Builder.class);
  }

  private int bitField0_;
  public static final int DATA_FIELD_NUMBER = 1;
  private com.google.protobuf.ByteString data_;
  /**
   * <pre>
   * Content for this chunk.
   * </pre>
   *
   * <code>optional bytes data = 1;</code>
   * @return Whether the data field is set.
   */
  @java.lang.Override
  public boolean hasData() {
    return ((bitField0_ & 0x00000001) != 0);
  }
  /**
   * <pre>
   * Content for this chunk.
   * </pre>
   *
   * <code>optional bytes data = 1;</code>
   * @return The data.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString getData() {
    return data_;
  }

  public static final int COMPRESS_TYPE_FIELD_NUMBER = 2;
  private int compressType_;
  /**
   * <code>optional .starrocks.CompressionTypePB compress_type = 2;</code>
   * @return Whether the compressType field is set.
   */
  @java.lang.Override public boolean hasCompressType() {
    return ((bitField0_ & 0x00000002) != 0);
  }
  /**
   * <code>optional .starrocks.CompressionTypePB compress_type = 2;</code>
   * @return The compressType.
   */
  @java.lang.Override public com.starrocks.proto.CompressionTypePB getCompressType() {
    @SuppressWarnings("deprecation")
    com.starrocks.proto.CompressionTypePB result = com.starrocks.proto.CompressionTypePB.valueOf(compressType_);
    return result == null ? com.starrocks.proto.CompressionTypePB.UNKNOWN_COMPRESSION : result;
  }

  public static final int UNCOMPRESSED_SIZE_FIELD_NUMBER = 3;
  private long uncompressedSize_;
  /**
   * <pre>
   * Helper to allocate memory to decompress compressed data.
   * </pre>
   *
   * <code>optional int64 uncompressed_size = 3;</code>
   * @return Whether the uncompressedSize field is set.
   */
  @java.lang.Override
  public boolean hasUncompressedSize() {
    return ((bitField0_ & 0x00000004) != 0);
  }
  /**
   * <pre>
   * Helper to allocate memory to decompress compressed data.
   * </pre>
   *
   * <code>optional int64 uncompressed_size = 3;</code>
   * @return The uncompressedSize.
   */
  @java.lang.Override
  public long getUncompressedSize() {
    return uncompressedSize_;
  }

  public static final int SLOT_ID_MAP_FIELD_NUMBER = 4;
  private com.google.protobuf.Internal.IntList slotIdMap_;
  /**
   * <pre>
   * slot id to column id map
   * </pre>
   *
   * <code>repeated int32 slot_id_map = 4;</code>
   * @return A list containing the slotIdMap.
   */
  @java.lang.Override
  public java.util.List<java.lang.Integer>
      getSlotIdMapList() {
    return slotIdMap_;
  }
  /**
   * <pre>
   * slot id to column id map
   * </pre>
   *
   * <code>repeated int32 slot_id_map = 4;</code>
   * @return The count of slotIdMap.
   */
  public int getSlotIdMapCount() {
    return slotIdMap_.size();
  }
  /**
   * <pre>
   * slot id to column id map
   * </pre>
   *
   * <code>repeated int32 slot_id_map = 4;</code>
   * @param index The index of the element to return.
   * @return The slotIdMap at the given index.
   */
  public int getSlotIdMap(int index) {
    return slotIdMap_.getInt(index);
  }

  public static final int IS_NULLS_FIELD_NUMBER = 5;
  private com.google.protobuf.Internal.BooleanList isNulls_;
  /**
   * <pre>
   * column is nullable
   * </pre>
   *
   * <code>repeated bool is_nulls = 5;</code>
   * @return A list containing the isNulls.
   */
  @java.lang.Override
  public java.util.List<java.lang.Boolean>
      getIsNullsList() {
    return isNulls_;
  }
  /**
   * <pre>
   * column is nullable
   * </pre>
   *
   * <code>repeated bool is_nulls = 5;</code>
   * @return The count of isNulls.
   */
  public int getIsNullsCount() {
    return isNulls_.size();
  }
  /**
   * <pre>
   * column is nullable
   * </pre>
   *
   * <code>repeated bool is_nulls = 5;</code>
   * @param index The index of the element to return.
   * @return The isNulls at the given index.
   */
  public boolean getIsNulls(int index) {
    return isNulls_.getBoolean(index);
  }

  public static final int IS_CONSTS_FIELD_NUMBER = 6;
  private com.google.protobuf.Internal.BooleanList isConsts_;
  /**
   * <pre>
   * column is const
   * </pre>
   *
   * <code>repeated bool is_consts = 6;</code>
   * @return A list containing the isConsts.
   */
  @java.lang.Override
  public java.util.List<java.lang.Boolean>
      getIsConstsList() {
    return isConsts_;
  }
  /**
   * <pre>
   * column is const
   * </pre>
   *
   * <code>repeated bool is_consts = 6;</code>
   * @return The count of isConsts.
   */
  public int getIsConstsCount() {
    return isConsts_.size();
  }
  /**
   * <pre>
   * column is const
   * </pre>
   *
   * <code>repeated bool is_consts = 6;</code>
   * @param index The index of the element to return.
   * @return The isConsts at the given index.
   */
  public boolean getIsConsts(int index) {
    return isConsts_.getBoolean(index);
  }

  public static final int TUPLE_ID_MAP_FIELD_NUMBER = 7;
  private com.google.protobuf.Internal.IntList tupleIdMap_;
  /**
   * <pre>
   * tuple id to column id map
   * </pre>
   *
   * <code>repeated int32 tuple_id_map = 7;</code>
   * @return A list containing the tupleIdMap.
   */
  @java.lang.Override
  public java.util.List<java.lang.Integer>
      getTupleIdMapList() {
    return tupleIdMap_;
  }
  /**
   * <pre>
   * tuple id to column id map
   * </pre>
   *
   * <code>repeated int32 tuple_id_map = 7;</code>
   * @return The count of tupleIdMap.
   */
  public int getTupleIdMapCount() {
    return tupleIdMap_.size();
  }
  /**
   * <pre>
   * tuple id to column id map
   * </pre>
   *
   * <code>repeated int32 tuple_id_map = 7;</code>
   * @param index The index of the element to return.
   * @return The tupleIdMap at the given index.
   */
  public int getTupleIdMap(int index) {
    return tupleIdMap_.getInt(index);
  }

  public static final int DATA_SIZE_FIELD_NUMBER = 8;
  private long dataSize_;
  /**
   * <pre>
   * used to record size using brpc attachment
   * </pre>
   *
   * <code>optional int64 data_size = 8;</code>
   * @return Whether the dataSize field is set.
   */
  @java.lang.Override
  public boolean hasDataSize() {
    return ((bitField0_ & 0x00000008) != 0);
  }
  /**
   * <pre>
   * used to record size using brpc attachment
   * </pre>
   *
   * <code>optional int64 data_size = 8;</code>
   * @return The dataSize.
   */
  @java.lang.Override
  public long getDataSize() {
    return dataSize_;
  }

  public static final int SERIALIZED_SIZE_FIELD_NUMBER = 9;
  private long serializedSize__;
  /**
   * <pre>
   * For some object column types like bitmap/hll/percentile.
   * we may estimate larger serialized_size but actually don't use that much space.
   * </pre>
   *
   * <code>optional int64 serialized_size = 9;</code>
   * @return Whether the serializedSize field is set.
   */
  @java.lang.Override
  public boolean hasSerializedSize_() {
    return ((bitField0_ & 0x00000010) != 0);
  }
  /**
   * <pre>
   * For some object column types like bitmap/hll/percentile.
   * we may estimate larger serialized_size but actually don't use that much space.
   * </pre>
   *
   * <code>optional int64 serialized_size = 9;</code>
   * @return The serializedSize.
   */
  @java.lang.Override
  public long getSerializedSize_() {
    return serializedSize__;
  }

  public static final int ENCODE_LEVEL_FIELD_NUMBER = 10;
  private com.google.protobuf.Internal.IntList encodeLevel_;
  /**
   * <pre>
   * the encode level for data columns, during upgrade, this must be 0.
   * </pre>
   *
   * <code>repeated int32 encode_level = 10;</code>
   * @return A list containing the encodeLevel.
   */
  @java.lang.Override
  public java.util.List<java.lang.Integer>
      getEncodeLevelList() {
    return encodeLevel_;
  }
  /**
   * <pre>
   * the encode level for data columns, during upgrade, this must be 0.
   * </pre>
   *
   * <code>repeated int32 encode_level = 10;</code>
   * @return The count of encodeLevel.
   */
  public int getEncodeLevelCount() {
    return encodeLevel_.size();
  }
  /**
   * <pre>
   * the encode level for data columns, during upgrade, this must be 0.
   * </pre>
   *
   * <code>repeated int32 encode_level = 10;</code>
   * @param index The index of the element to return.
   * @return The encodeLevel at the given index.
   */
  public int getEncodeLevel(int index) {
    return encodeLevel_.getInt(index);
  }

  public static final int EXTRA_DATA_METAS_FIELD_NUMBER = 11;
  private java.util.List<com.starrocks.proto.ChunkExtraColumnsMetaPB> extraDataMetas_;
  /**
   * <pre>
   * chunk's extra data meta.
   * </pre>
   *
   * <code>repeated .starrocks.ChunkExtraColumnsMetaPB extra_data_metas = 11;</code>
   */
  @java.lang.Override
  public java.util.List<com.starrocks.proto.ChunkExtraColumnsMetaPB> getExtraDataMetasList() {
    return extraDataMetas_;
  }
  /**
   * <pre>
   * chunk's extra data meta.
   * </pre>
   *
   * <code>repeated .starrocks.ChunkExtraColumnsMetaPB extra_data_metas = 11;</code>
   */
  @java.lang.Override
  public java.util.List<? extends com.starrocks.proto.ChunkExtraColumnsMetaPBOrBuilder> 
      getExtraDataMetasOrBuilderList() {
    return extraDataMetas_;
  }
  /**
   * <pre>
   * chunk's extra data meta.
   * </pre>
   *
   * <code>repeated .starrocks.ChunkExtraColumnsMetaPB extra_data_metas = 11;</code>
   */
  @java.lang.Override
  public int getExtraDataMetasCount() {
    return extraDataMetas_.size();
  }
  /**
   * <pre>
   * chunk's extra data meta.
   * </pre>
   *
   * <code>repeated .starrocks.ChunkExtraColumnsMetaPB extra_data_metas = 11;</code>
   */
  @java.lang.Override
  public com.starrocks.proto.ChunkExtraColumnsMetaPB getExtraDataMetas(int index) {
    return extraDataMetas_.get(index);
  }
  /**
   * <pre>
   * chunk's extra data meta.
   * </pre>
   *
   * <code>repeated .starrocks.ChunkExtraColumnsMetaPB extra_data_metas = 11;</code>
   */
  @java.lang.Override
  public com.starrocks.proto.ChunkExtraColumnsMetaPBOrBuilder getExtraDataMetasOrBuilder(
      int index) {
    return extraDataMetas_.get(index);
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    for (int i = 0; i < getExtraDataMetasCount(); i++) {
      if (!getExtraDataMetas(i).isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
    }
    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (((bitField0_ & 0x00000001) != 0)) {
      output.writeBytes(1, data_);
    }
    if (((bitField0_ & 0x00000002) != 0)) {
      output.writeEnum(2, compressType_);
    }
    if (((bitField0_ & 0x00000004) != 0)) {
      output.writeInt64(3, uncompressedSize_);
    }
    for (int i = 0; i < slotIdMap_.size(); i++) {
      output.writeInt32(4, slotIdMap_.getInt(i));
    }
    for (int i = 0; i < isNulls_.size(); i++) {
      output.writeBool(5, isNulls_.getBoolean(i));
    }
    for (int i = 0; i < isConsts_.size(); i++) {
      output.writeBool(6, isConsts_.getBoolean(i));
    }
    for (int i = 0; i < tupleIdMap_.size(); i++) {
      output.writeInt32(7, tupleIdMap_.getInt(i));
    }
    if (((bitField0_ & 0x00000008) != 0)) {
      output.writeInt64(8, dataSize_);
    }
    if (((bitField0_ & 0x00000010) != 0)) {
      output.writeInt64(9, serializedSize__);
    }
    for (int i = 0; i < encodeLevel_.size(); i++) {
      output.writeInt32(10, encodeLevel_.getInt(i));
    }
    for (int i = 0; i < extraDataMetas_.size(); i++) {
      output.writeMessage(11, extraDataMetas_.get(i));
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (((bitField0_ & 0x00000001) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeBytesSize(1, data_);
    }
    if (((bitField0_ & 0x00000002) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeEnumSize(2, compressType_);
    }
    if (((bitField0_ & 0x00000004) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt64Size(3, uncompressedSize_);
    }
    {
      int dataSize = 0;
      for (int i = 0; i < slotIdMap_.size(); i++) {
        dataSize += com.google.protobuf.CodedOutputStream
          .computeInt32SizeNoTag(slotIdMap_.getInt(i));
      }
      size += dataSize;
      size += 1 * getSlotIdMapList().size();
    }
    {
      int dataSize = 0;
      dataSize = 1 * getIsNullsList().size();
      size += dataSize;
      size += 1 * getIsNullsList().size();
    }
    {
      int dataSize = 0;
      dataSize = 1 * getIsConstsList().size();
      size += dataSize;
      size += 1 * getIsConstsList().size();
    }
    {
      int dataSize = 0;
      for (int i = 0; i < tupleIdMap_.size(); i++) {
        dataSize += com.google.protobuf.CodedOutputStream
          .computeInt32SizeNoTag(tupleIdMap_.getInt(i));
      }
      size += dataSize;
      size += 1 * getTupleIdMapList().size();
    }
    if (((bitField0_ & 0x00000008) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt64Size(8, dataSize_);
    }
    if (((bitField0_ & 0x00000010) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt64Size(9, serializedSize__);
    }
    {
      int dataSize = 0;
      for (int i = 0; i < encodeLevel_.size(); i++) {
        dataSize += com.google.protobuf.CodedOutputStream
          .computeInt32SizeNoTag(encodeLevel_.getInt(i));
      }
      size += dataSize;
      size += 1 * getEncodeLevelList().size();
    }
    for (int i = 0; i < extraDataMetas_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(11, extraDataMetas_.get(i));
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.starrocks.proto.ChunkPB)) {
      return super.equals(obj);
    }
    com.starrocks.proto.ChunkPB other = (com.starrocks.proto.ChunkPB) obj;

    if (hasData() != other.hasData()) return false;
    if (hasData()) {
      if (!getData()
          .equals(other.getData())) return false;
    }
    if (hasCompressType() != other.hasCompressType()) return false;
    if (hasCompressType()) {
      if (compressType_ != other.compressType_) return false;
    }
    if (hasUncompressedSize() != other.hasUncompressedSize()) return false;
    if (hasUncompressedSize()) {
      if (getUncompressedSize()
          != other.getUncompressedSize()) return false;
    }
    if (!getSlotIdMapList()
        .equals(other.getSlotIdMapList())) return false;
    if (!getIsNullsList()
        .equals(other.getIsNullsList())) return false;
    if (!getIsConstsList()
        .equals(other.getIsConstsList())) return false;
    if (!getTupleIdMapList()
        .equals(other.getTupleIdMapList())) return false;
    if (hasDataSize() != other.hasDataSize()) return false;
    if (hasDataSize()) {
      if (getDataSize()
          != other.getDataSize()) return false;
    }
    if (hasSerializedSize_() != other.hasSerializedSize_()) return false;
    if (hasSerializedSize_()) {
      if (getSerializedSize_()
          != other.getSerializedSize_()) return false;
    }
    if (!getEncodeLevelList()
        .equals(other.getEncodeLevelList())) return false;
    if (!getExtraDataMetasList()
        .equals(other.getExtraDataMetasList())) return false;
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (hasData()) {
      hash = (37 * hash) + DATA_FIELD_NUMBER;
      hash = (53 * hash) + getData().hashCode();
    }
    if (hasCompressType()) {
      hash = (37 * hash) + COMPRESS_TYPE_FIELD_NUMBER;
      hash = (53 * hash) + compressType_;
    }
    if (hasUncompressedSize()) {
      hash = (37 * hash) + UNCOMPRESSED_SIZE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getUncompressedSize());
    }
    if (getSlotIdMapCount() > 0) {
      hash = (37 * hash) + SLOT_ID_MAP_FIELD_NUMBER;
      hash = (53 * hash) + getSlotIdMapList().hashCode();
    }
    if (getIsNullsCount() > 0) {
      hash = (37 * hash) + IS_NULLS_FIELD_NUMBER;
      hash = (53 * hash) + getIsNullsList().hashCode();
    }
    if (getIsConstsCount() > 0) {
      hash = (37 * hash) + IS_CONSTS_FIELD_NUMBER;
      hash = (53 * hash) + getIsConstsList().hashCode();
    }
    if (getTupleIdMapCount() > 0) {
      hash = (37 * hash) + TUPLE_ID_MAP_FIELD_NUMBER;
      hash = (53 * hash) + getTupleIdMapList().hashCode();
    }
    if (hasDataSize()) {
      hash = (37 * hash) + DATA_SIZE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getDataSize());
    }
    if (hasSerializedSize_()) {
      hash = (37 * hash) + SERIALIZED_SIZE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getSerializedSize_());
    }
    if (getEncodeLevelCount() > 0) {
      hash = (37 * hash) + ENCODE_LEVEL_FIELD_NUMBER;
      hash = (53 * hash) + getEncodeLevelList().hashCode();
    }
    if (getExtraDataMetasCount() > 0) {
      hash = (37 * hash) + EXTRA_DATA_METAS_FIELD_NUMBER;
      hash = (53 * hash) + getExtraDataMetasList().hashCode();
    }
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.starrocks.proto.ChunkPB parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.starrocks.proto.ChunkPB parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.starrocks.proto.ChunkPB parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.starrocks.proto.ChunkPB parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.starrocks.proto.ChunkPB parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.starrocks.proto.ChunkPB parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.starrocks.proto.ChunkPB parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.starrocks.proto.ChunkPB parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.starrocks.proto.ChunkPB parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static com.starrocks.proto.ChunkPB parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.starrocks.proto.ChunkPB parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.starrocks.proto.ChunkPB parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.starrocks.proto.ChunkPB prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * We only serialize slot_id_map, is_nulls, is_consts in first chunk when RPC.
   * </pre>
   *
   * Protobuf type {@code starrocks.ChunkPB}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:starrocks.ChunkPB)
      com.starrocks.proto.ChunkPBOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.starrocks.proto.Data.internal_static_starrocks_ChunkPB_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.starrocks.proto.Data.internal_static_starrocks_ChunkPB_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.starrocks.proto.ChunkPB.class, com.starrocks.proto.ChunkPB.Builder.class);
    }

    // Construct using com.starrocks.proto.ChunkPB.newBuilder()
    private Builder() {

    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);

    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      data_ = com.google.protobuf.ByteString.EMPTY;
      bitField0_ = (bitField0_ & ~0x00000001);
      compressType_ = 0;
      bitField0_ = (bitField0_ & ~0x00000002);
      uncompressedSize_ = 0L;
      bitField0_ = (bitField0_ & ~0x00000004);
      slotIdMap_ = emptyIntList();
      bitField0_ = (bitField0_ & ~0x00000008);
      isNulls_ = emptyBooleanList();
      bitField0_ = (bitField0_ & ~0x00000010);
      isConsts_ = emptyBooleanList();
      bitField0_ = (bitField0_ & ~0x00000020);
      tupleIdMap_ = emptyIntList();
      bitField0_ = (bitField0_ & ~0x00000040);
      dataSize_ = 0L;
      bitField0_ = (bitField0_ & ~0x00000080);
      serializedSize__ = 0L;
      bitField0_ = (bitField0_ & ~0x00000100);
      encodeLevel_ = emptyIntList();
      bitField0_ = (bitField0_ & ~0x00000200);
      if (extraDataMetasBuilder_ == null) {
        extraDataMetas_ = java.util.Collections.emptyList();
      } else {
        extraDataMetas_ = null;
        extraDataMetasBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000400);
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.starrocks.proto.Data.internal_static_starrocks_ChunkPB_descriptor;
    }

    @java.lang.Override
    public com.starrocks.proto.ChunkPB getDefaultInstanceForType() {
      return com.starrocks.proto.ChunkPB.getDefaultInstance();
    }

    @java.lang.Override
    public com.starrocks.proto.ChunkPB build() {
      com.starrocks.proto.ChunkPB result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.starrocks.proto.ChunkPB buildPartial() {
      com.starrocks.proto.ChunkPB result = new com.starrocks.proto.ChunkPB(this);
      int from_bitField0_ = bitField0_;
      int to_bitField0_ = 0;
      if (((from_bitField0_ & 0x00000001) != 0)) {
        to_bitField0_ |= 0x00000001;
      }
      result.data_ = data_;
      if (((from_bitField0_ & 0x00000002) != 0)) {
        to_bitField0_ |= 0x00000002;
      }
      result.compressType_ = compressType_;
      if (((from_bitField0_ & 0x00000004) != 0)) {
        result.uncompressedSize_ = uncompressedSize_;
        to_bitField0_ |= 0x00000004;
      }
      if (((bitField0_ & 0x00000008) != 0)) {
        slotIdMap_.makeImmutable();
        bitField0_ = (bitField0_ & ~0x00000008);
      }
      result.slotIdMap_ = slotIdMap_;
      if (((bitField0_ & 0x00000010) != 0)) {
        isNulls_.makeImmutable();
        bitField0_ = (bitField0_ & ~0x00000010);
      }
      result.isNulls_ = isNulls_;
      if (((bitField0_ & 0x00000020) != 0)) {
        isConsts_.makeImmutable();
        bitField0_ = (bitField0_ & ~0x00000020);
      }
      result.isConsts_ = isConsts_;
      if (((bitField0_ & 0x00000040) != 0)) {
        tupleIdMap_.makeImmutable();
        bitField0_ = (bitField0_ & ~0x00000040);
      }
      result.tupleIdMap_ = tupleIdMap_;
      if (((from_bitField0_ & 0x00000080) != 0)) {
        result.dataSize_ = dataSize_;
        to_bitField0_ |= 0x00000008;
      }
      if (((from_bitField0_ & 0x00000100) != 0)) {
        result.serializedSize__ = serializedSize__;
        to_bitField0_ |= 0x00000010;
      }
      if (((bitField0_ & 0x00000200) != 0)) {
        encodeLevel_.makeImmutable();
        bitField0_ = (bitField0_ & ~0x00000200);
      }
      result.encodeLevel_ = encodeLevel_;
      if (extraDataMetasBuilder_ == null) {
        if (((bitField0_ & 0x00000400) != 0)) {
          extraDataMetas_ = java.util.Collections.unmodifiableList(extraDataMetas_);
          bitField0_ = (bitField0_ & ~0x00000400);
        }
        result.extraDataMetas_ = extraDataMetas_;
      } else {
        result.extraDataMetas_ = extraDataMetasBuilder_.build();
      }
      result.bitField0_ = to_bitField0_;
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.starrocks.proto.ChunkPB) {
        return mergeFrom((com.starrocks.proto.ChunkPB)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.starrocks.proto.ChunkPB other) {
      if (other == com.starrocks.proto.ChunkPB.getDefaultInstance()) return this;
      if (other.hasData()) {
        setData(other.getData());
      }
      if (other.hasCompressType()) {
        setCompressType(other.getCompressType());
      }
      if (other.hasUncompressedSize()) {
        setUncompressedSize(other.getUncompressedSize());
      }
      if (!other.slotIdMap_.isEmpty()) {
        if (slotIdMap_.isEmpty()) {
          slotIdMap_ = other.slotIdMap_;
          bitField0_ = (bitField0_ & ~0x00000008);
        } else {
          ensureSlotIdMapIsMutable();
          slotIdMap_.addAll(other.slotIdMap_);
        }
        onChanged();
      }
      if (!other.isNulls_.isEmpty()) {
        if (isNulls_.isEmpty()) {
          isNulls_ = other.isNulls_;
          bitField0_ = (bitField0_ & ~0x00000010);
        } else {
          ensureIsNullsIsMutable();
          isNulls_.addAll(other.isNulls_);
        }
        onChanged();
      }
      if (!other.isConsts_.isEmpty()) {
        if (isConsts_.isEmpty()) {
          isConsts_ = other.isConsts_;
          bitField0_ = (bitField0_ & ~0x00000020);
        } else {
          ensureIsConstsIsMutable();
          isConsts_.addAll(other.isConsts_);
        }
        onChanged();
      }
      if (!other.tupleIdMap_.isEmpty()) {
        if (tupleIdMap_.isEmpty()) {
          tupleIdMap_ = other.tupleIdMap_;
          bitField0_ = (bitField0_ & ~0x00000040);
        } else {
          ensureTupleIdMapIsMutable();
          tupleIdMap_.addAll(other.tupleIdMap_);
        }
        onChanged();
      }
      if (other.hasDataSize()) {
        setDataSize(other.getDataSize());
      }
      if (other.hasSerializedSize_()) {
        setSerializedSize_(other.getSerializedSize_());
      }
      if (!other.encodeLevel_.isEmpty()) {
        if (encodeLevel_.isEmpty()) {
          encodeLevel_ = other.encodeLevel_;
          bitField0_ = (bitField0_ & ~0x00000200);
        } else {
          ensureEncodeLevelIsMutable();
          encodeLevel_.addAll(other.encodeLevel_);
        }
        onChanged();
      }
      if (extraDataMetasBuilder_ == null) {
        if (!other.extraDataMetas_.isEmpty()) {
          if (extraDataMetas_.isEmpty()) {
            extraDataMetas_ = other.extraDataMetas_;
            bitField0_ = (bitField0_ & ~0x00000400);
          } else {
            ensureExtraDataMetasIsMutable();
            extraDataMetas_.addAll(other.extraDataMetas_);
          }
          onChanged();
        }
      } else {
        if (!other.extraDataMetas_.isEmpty()) {
          if (extraDataMetasBuilder_.isEmpty()) {
            extraDataMetasBuilder_.dispose();
            extraDataMetasBuilder_ = null;
            extraDataMetas_ = other.extraDataMetas_;
            bitField0_ = (bitField0_ & ~0x00000400);
            extraDataMetasBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getExtraDataMetasFieldBuilder() : null;
          } else {
            extraDataMetasBuilder_.addAllMessages(other.extraDataMetas_);
          }
        }
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      for (int i = 0; i < getExtraDataMetasCount(); i++) {
        if (!getExtraDataMetas(i).isInitialized()) {
          return false;
        }
      }
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              data_ = input.readBytes();
              bitField0_ |= 0x00000001;
              break;
            } // case 10
            case 16: {
              int tmpRaw = input.readEnum();
              com.starrocks.proto.CompressionTypePB tmpValue =
                  com.starrocks.proto.CompressionTypePB.forNumber(tmpRaw);
              if (tmpValue == null) {
                mergeUnknownVarintField(2, tmpRaw);
              } else {
                compressType_ = tmpRaw;
                bitField0_ |= 0x00000002;
              }
              break;
            } // case 16
            case 24: {
              uncompressedSize_ = input.readInt64();
              bitField0_ |= 0x00000004;
              break;
            } // case 24
            case 32: {
              int v = input.readInt32();
              ensureSlotIdMapIsMutable();
              slotIdMap_.addInt(v);
              break;
            } // case 32
            case 34: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              ensureSlotIdMapIsMutable();
              while (input.getBytesUntilLimit() > 0) {
                slotIdMap_.addInt(input.readInt32());
              }
              input.popLimit(limit);
              break;
            } // case 34
            case 40: {
              boolean v = input.readBool();
              ensureIsNullsIsMutable();
              isNulls_.addBoolean(v);
              break;
            } // case 40
            case 42: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              ensureIsNullsIsMutable();
              while (input.getBytesUntilLimit() > 0) {
                isNulls_.addBoolean(input.readBool());
              }
              input.popLimit(limit);
              break;
            } // case 42
            case 48: {
              boolean v = input.readBool();
              ensureIsConstsIsMutable();
              isConsts_.addBoolean(v);
              break;
            } // case 48
            case 50: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              ensureIsConstsIsMutable();
              while (input.getBytesUntilLimit() > 0) {
                isConsts_.addBoolean(input.readBool());
              }
              input.popLimit(limit);
              break;
            } // case 50
            case 56: {
              int v = input.readInt32();
              ensureTupleIdMapIsMutable();
              tupleIdMap_.addInt(v);
              break;
            } // case 56
            case 58: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              ensureTupleIdMapIsMutable();
              while (input.getBytesUntilLimit() > 0) {
                tupleIdMap_.addInt(input.readInt32());
              }
              input.popLimit(limit);
              break;
            } // case 58
            case 64: {
              dataSize_ = input.readInt64();
              bitField0_ |= 0x00000080;
              break;
            } // case 64
            case 72: {
              serializedSize__ = input.readInt64();
              bitField0_ |= 0x00000100;
              break;
            } // case 72
            case 80: {
              int v = input.readInt32();
              ensureEncodeLevelIsMutable();
              encodeLevel_.addInt(v);
              break;
            } // case 80
            case 82: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              ensureEncodeLevelIsMutable();
              while (input.getBytesUntilLimit() > 0) {
                encodeLevel_.addInt(input.readInt32());
              }
              input.popLimit(limit);
              break;
            } // case 82
            case 90: {
              com.starrocks.proto.ChunkExtraColumnsMetaPB m =
                  input.readMessage(
                      com.starrocks.proto.ChunkExtraColumnsMetaPB.PARSER,
                      extensionRegistry);
              if (extraDataMetasBuilder_ == null) {
                ensureExtraDataMetasIsMutable();
                extraDataMetas_.add(m);
              } else {
                extraDataMetasBuilder_.addMessage(m);
              }
              break;
            } // case 90
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int bitField0_;

    private com.google.protobuf.ByteString data_ = com.google.protobuf.ByteString.EMPTY;
    /**
     * <pre>
     * Content for this chunk.
     * </pre>
     *
     * <code>optional bytes data = 1;</code>
     * @return Whether the data field is set.
     */
    @java.lang.Override
    public boolean hasData() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * Content for this chunk.
     * </pre>
     *
     * <code>optional bytes data = 1;</code>
     * @return The data.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getData() {
      return data_;
    }
    /**
     * <pre>
     * Content for this chunk.
     * </pre>
     *
     * <code>optional bytes data = 1;</code>
     * @param value The data to set.
     * @return This builder for chaining.
     */
    public Builder setData(com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
      data_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Content for this chunk.
     * </pre>
     *
     * <code>optional bytes data = 1;</code>
     * @return This builder for chaining.
     */
    public Builder clearData() {
      bitField0_ = (bitField0_ & ~0x00000001);
      data_ = getDefaultInstance().getData();
      onChanged();
      return this;
    }

    private int compressType_ = 0;
    /**
     * <code>optional .starrocks.CompressionTypePB compress_type = 2;</code>
     * @return Whether the compressType field is set.
     */
    @java.lang.Override public boolean hasCompressType() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <code>optional .starrocks.CompressionTypePB compress_type = 2;</code>
     * @return The compressType.
     */
    @java.lang.Override
    public com.starrocks.proto.CompressionTypePB getCompressType() {
      @SuppressWarnings("deprecation")
      com.starrocks.proto.CompressionTypePB result = com.starrocks.proto.CompressionTypePB.valueOf(compressType_);
      return result == null ? com.starrocks.proto.CompressionTypePB.UNKNOWN_COMPRESSION : result;
    }
    /**
     * <code>optional .starrocks.CompressionTypePB compress_type = 2;</code>
     * @param value The compressType to set.
     * @return This builder for chaining.
     */
    public Builder setCompressType(com.starrocks.proto.CompressionTypePB value) {
      if (value == null) {
        throw new NullPointerException();
      }
      bitField0_ |= 0x00000002;
      compressType_ = value.getNumber();
      onChanged();
      return this;
    }
    /**
     * <code>optional .starrocks.CompressionTypePB compress_type = 2;</code>
     * @return This builder for chaining.
     */
    public Builder clearCompressType() {
      bitField0_ = (bitField0_ & ~0x00000002);
      compressType_ = 0;
      onChanged();
      return this;
    }

    private long uncompressedSize_ ;
    /**
     * <pre>
     * Helper to allocate memory to decompress compressed data.
     * </pre>
     *
     * <code>optional int64 uncompressed_size = 3;</code>
     * @return Whether the uncompressedSize field is set.
     */
    @java.lang.Override
    public boolean hasUncompressedSize() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <pre>
     * Helper to allocate memory to decompress compressed data.
     * </pre>
     *
     * <code>optional int64 uncompressed_size = 3;</code>
     * @return The uncompressedSize.
     */
    @java.lang.Override
    public long getUncompressedSize() {
      return uncompressedSize_;
    }
    /**
     * <pre>
     * Helper to allocate memory to decompress compressed data.
     * </pre>
     *
     * <code>optional int64 uncompressed_size = 3;</code>
     * @param value The uncompressedSize to set.
     * @return This builder for chaining.
     */
    public Builder setUncompressedSize(long value) {
      bitField0_ |= 0x00000004;
      uncompressedSize_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Helper to allocate memory to decompress compressed data.
     * </pre>
     *
     * <code>optional int64 uncompressed_size = 3;</code>
     * @return This builder for chaining.
     */
    public Builder clearUncompressedSize() {
      bitField0_ = (bitField0_ & ~0x00000004);
      uncompressedSize_ = 0L;
      onChanged();
      return this;
    }

    private com.google.protobuf.Internal.IntList slotIdMap_ = emptyIntList();
    private void ensureSlotIdMapIsMutable() {
      if (!((bitField0_ & 0x00000008) != 0)) {
        slotIdMap_ = mutableCopy(slotIdMap_);
        bitField0_ |= 0x00000008;
       }
    }
    /**
     * <pre>
     * slot id to column id map
     * </pre>
     *
     * <code>repeated int32 slot_id_map = 4;</code>
     * @return A list containing the slotIdMap.
     */
    public java.util.List<java.lang.Integer>
        getSlotIdMapList() {
      return ((bitField0_ & 0x00000008) != 0) ?
               java.util.Collections.unmodifiableList(slotIdMap_) : slotIdMap_;
    }
    /**
     * <pre>
     * slot id to column id map
     * </pre>
     *
     * <code>repeated int32 slot_id_map = 4;</code>
     * @return The count of slotIdMap.
     */
    public int getSlotIdMapCount() {
      return slotIdMap_.size();
    }
    /**
     * <pre>
     * slot id to column id map
     * </pre>
     *
     * <code>repeated int32 slot_id_map = 4;</code>
     * @param index The index of the element to return.
     * @return The slotIdMap at the given index.
     */
    public int getSlotIdMap(int index) {
      return slotIdMap_.getInt(index);
    }
    /**
     * <pre>
     * slot id to column id map
     * </pre>
     *
     * <code>repeated int32 slot_id_map = 4;</code>
     * @param index The index to set the value at.
     * @param value The slotIdMap to set.
     * @return This builder for chaining.
     */
    public Builder setSlotIdMap(
        int index, int value) {
      ensureSlotIdMapIsMutable();
      slotIdMap_.setInt(index, value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * slot id to column id map
     * </pre>
     *
     * <code>repeated int32 slot_id_map = 4;</code>
     * @param value The slotIdMap to add.
     * @return This builder for chaining.
     */
    public Builder addSlotIdMap(int value) {
      ensureSlotIdMapIsMutable();
      slotIdMap_.addInt(value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * slot id to column id map
     * </pre>
     *
     * <code>repeated int32 slot_id_map = 4;</code>
     * @param values The slotIdMap to add.
     * @return This builder for chaining.
     */
    public Builder addAllSlotIdMap(
        java.lang.Iterable<? extends java.lang.Integer> values) {
      ensureSlotIdMapIsMutable();
      com.google.protobuf.AbstractMessageLite.Builder.addAll(
          values, slotIdMap_);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * slot id to column id map
     * </pre>
     *
     * <code>repeated int32 slot_id_map = 4;</code>
     * @return This builder for chaining.
     */
    public Builder clearSlotIdMap() {
      slotIdMap_ = emptyIntList();
      bitField0_ = (bitField0_ & ~0x00000008);
      onChanged();
      return this;
    }

    private com.google.protobuf.Internal.BooleanList isNulls_ = emptyBooleanList();
    private void ensureIsNullsIsMutable() {
      if (!((bitField0_ & 0x00000010) != 0)) {
        isNulls_ = mutableCopy(isNulls_);
        bitField0_ |= 0x00000010;
       }
    }
    /**
     * <pre>
     * column is nullable
     * </pre>
     *
     * <code>repeated bool is_nulls = 5;</code>
     * @return A list containing the isNulls.
     */
    public java.util.List<java.lang.Boolean>
        getIsNullsList() {
      return ((bitField0_ & 0x00000010) != 0) ?
               java.util.Collections.unmodifiableList(isNulls_) : isNulls_;
    }
    /**
     * <pre>
     * column is nullable
     * </pre>
     *
     * <code>repeated bool is_nulls = 5;</code>
     * @return The count of isNulls.
     */
    public int getIsNullsCount() {
      return isNulls_.size();
    }
    /**
     * <pre>
     * column is nullable
     * </pre>
     *
     * <code>repeated bool is_nulls = 5;</code>
     * @param index The index of the element to return.
     * @return The isNulls at the given index.
     */
    public boolean getIsNulls(int index) {
      return isNulls_.getBoolean(index);
    }
    /**
     * <pre>
     * column is nullable
     * </pre>
     *
     * <code>repeated bool is_nulls = 5;</code>
     * @param index The index to set the value at.
     * @param value The isNulls to set.
     * @return This builder for chaining.
     */
    public Builder setIsNulls(
        int index, boolean value) {
      ensureIsNullsIsMutable();
      isNulls_.setBoolean(index, value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * column is nullable
     * </pre>
     *
     * <code>repeated bool is_nulls = 5;</code>
     * @param value The isNulls to add.
     * @return This builder for chaining.
     */
    public Builder addIsNulls(boolean value) {
      ensureIsNullsIsMutable();
      isNulls_.addBoolean(value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * column is nullable
     * </pre>
     *
     * <code>repeated bool is_nulls = 5;</code>
     * @param values The isNulls to add.
     * @return This builder for chaining.
     */
    public Builder addAllIsNulls(
        java.lang.Iterable<? extends java.lang.Boolean> values) {
      ensureIsNullsIsMutable();
      com.google.protobuf.AbstractMessageLite.Builder.addAll(
          values, isNulls_);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * column is nullable
     * </pre>
     *
     * <code>repeated bool is_nulls = 5;</code>
     * @return This builder for chaining.
     */
    public Builder clearIsNulls() {
      isNulls_ = emptyBooleanList();
      bitField0_ = (bitField0_ & ~0x00000010);
      onChanged();
      return this;
    }

    private com.google.protobuf.Internal.BooleanList isConsts_ = emptyBooleanList();
    private void ensureIsConstsIsMutable() {
      if (!((bitField0_ & 0x00000020) != 0)) {
        isConsts_ = mutableCopy(isConsts_);
        bitField0_ |= 0x00000020;
       }
    }
    /**
     * <pre>
     * column is const
     * </pre>
     *
     * <code>repeated bool is_consts = 6;</code>
     * @return A list containing the isConsts.
     */
    public java.util.List<java.lang.Boolean>
        getIsConstsList() {
      return ((bitField0_ & 0x00000020) != 0) ?
               java.util.Collections.unmodifiableList(isConsts_) : isConsts_;
    }
    /**
     * <pre>
     * column is const
     * </pre>
     *
     * <code>repeated bool is_consts = 6;</code>
     * @return The count of isConsts.
     */
    public int getIsConstsCount() {
      return isConsts_.size();
    }
    /**
     * <pre>
     * column is const
     * </pre>
     *
     * <code>repeated bool is_consts = 6;</code>
     * @param index The index of the element to return.
     * @return The isConsts at the given index.
     */
    public boolean getIsConsts(int index) {
      return isConsts_.getBoolean(index);
    }
    /**
     * <pre>
     * column is const
     * </pre>
     *
     * <code>repeated bool is_consts = 6;</code>
     * @param index The index to set the value at.
     * @param value The isConsts to set.
     * @return This builder for chaining.
     */
    public Builder setIsConsts(
        int index, boolean value) {
      ensureIsConstsIsMutable();
      isConsts_.setBoolean(index, value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * column is const
     * </pre>
     *
     * <code>repeated bool is_consts = 6;</code>
     * @param value The isConsts to add.
     * @return This builder for chaining.
     */
    public Builder addIsConsts(boolean value) {
      ensureIsConstsIsMutable();
      isConsts_.addBoolean(value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * column is const
     * </pre>
     *
     * <code>repeated bool is_consts = 6;</code>
     * @param values The isConsts to add.
     * @return This builder for chaining.
     */
    public Builder addAllIsConsts(
        java.lang.Iterable<? extends java.lang.Boolean> values) {
      ensureIsConstsIsMutable();
      com.google.protobuf.AbstractMessageLite.Builder.addAll(
          values, isConsts_);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * column is const
     * </pre>
     *
     * <code>repeated bool is_consts = 6;</code>
     * @return This builder for chaining.
     */
    public Builder clearIsConsts() {
      isConsts_ = emptyBooleanList();
      bitField0_ = (bitField0_ & ~0x00000020);
      onChanged();
      return this;
    }

    private com.google.protobuf.Internal.IntList tupleIdMap_ = emptyIntList();
    private void ensureTupleIdMapIsMutable() {
      if (!((bitField0_ & 0x00000040) != 0)) {
        tupleIdMap_ = mutableCopy(tupleIdMap_);
        bitField0_ |= 0x00000040;
       }
    }
    /**
     * <pre>
     * tuple id to column id map
     * </pre>
     *
     * <code>repeated int32 tuple_id_map = 7;</code>
     * @return A list containing the tupleIdMap.
     */
    public java.util.List<java.lang.Integer>
        getTupleIdMapList() {
      return ((bitField0_ & 0x00000040) != 0) ?
               java.util.Collections.unmodifiableList(tupleIdMap_) : tupleIdMap_;
    }
    /**
     * <pre>
     * tuple id to column id map
     * </pre>
     *
     * <code>repeated int32 tuple_id_map = 7;</code>
     * @return The count of tupleIdMap.
     */
    public int getTupleIdMapCount() {
      return tupleIdMap_.size();
    }
    /**
     * <pre>
     * tuple id to column id map
     * </pre>
     *
     * <code>repeated int32 tuple_id_map = 7;</code>
     * @param index The index of the element to return.
     * @return The tupleIdMap at the given index.
     */
    public int getTupleIdMap(int index) {
      return tupleIdMap_.getInt(index);
    }
    /**
     * <pre>
     * tuple id to column id map
     * </pre>
     *
     * <code>repeated int32 tuple_id_map = 7;</code>
     * @param index The index to set the value at.
     * @param value The tupleIdMap to set.
     * @return This builder for chaining.
     */
    public Builder setTupleIdMap(
        int index, int value) {
      ensureTupleIdMapIsMutable();
      tupleIdMap_.setInt(index, value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * tuple id to column id map
     * </pre>
     *
     * <code>repeated int32 tuple_id_map = 7;</code>
     * @param value The tupleIdMap to add.
     * @return This builder for chaining.
     */
    public Builder addTupleIdMap(int value) {
      ensureTupleIdMapIsMutable();
      tupleIdMap_.addInt(value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * tuple id to column id map
     * </pre>
     *
     * <code>repeated int32 tuple_id_map = 7;</code>
     * @param values The tupleIdMap to add.
     * @return This builder for chaining.
     */
    public Builder addAllTupleIdMap(
        java.lang.Iterable<? extends java.lang.Integer> values) {
      ensureTupleIdMapIsMutable();
      com.google.protobuf.AbstractMessageLite.Builder.addAll(
          values, tupleIdMap_);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * tuple id to column id map
     * </pre>
     *
     * <code>repeated int32 tuple_id_map = 7;</code>
     * @return This builder for chaining.
     */
    public Builder clearTupleIdMap() {
      tupleIdMap_ = emptyIntList();
      bitField0_ = (bitField0_ & ~0x00000040);
      onChanged();
      return this;
    }

    private long dataSize_ ;
    /**
     * <pre>
     * used to record size using brpc attachment
     * </pre>
     *
     * <code>optional int64 data_size = 8;</code>
     * @return Whether the dataSize field is set.
     */
    @java.lang.Override
    public boolean hasDataSize() {
      return ((bitField0_ & 0x00000080) != 0);
    }
    /**
     * <pre>
     * used to record size using brpc attachment
     * </pre>
     *
     * <code>optional int64 data_size = 8;</code>
     * @return The dataSize.
     */
    @java.lang.Override
    public long getDataSize() {
      return dataSize_;
    }
    /**
     * <pre>
     * used to record size using brpc attachment
     * </pre>
     *
     * <code>optional int64 data_size = 8;</code>
     * @param value The dataSize to set.
     * @return This builder for chaining.
     */
    public Builder setDataSize(long value) {
      bitField0_ |= 0x00000080;
      dataSize_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * used to record size using brpc attachment
     * </pre>
     *
     * <code>optional int64 data_size = 8;</code>
     * @return This builder for chaining.
     */
    public Builder clearDataSize() {
      bitField0_ = (bitField0_ & ~0x00000080);
      dataSize_ = 0L;
      onChanged();
      return this;
    }

    private long serializedSize__ ;
    /**
     * <pre>
     * For some object column types like bitmap/hll/percentile.
     * we may estimate larger serialized_size but actually don't use that much space.
     * </pre>
     *
     * <code>optional int64 serialized_size = 9;</code>
     * @return Whether the serializedSize field is set.
     */
    @java.lang.Override
    public boolean hasSerializedSize_() {
      return ((bitField0_ & 0x00000100) != 0);
    }
    /**
     * <pre>
     * For some object column types like bitmap/hll/percentile.
     * we may estimate larger serialized_size but actually don't use that much space.
     * </pre>
     *
     * <code>optional int64 serialized_size = 9;</code>
     * @return The serializedSize.
     */
    @java.lang.Override
    public long getSerializedSize_() {
      return serializedSize__;
    }
    /**
     * <pre>
     * For some object column types like bitmap/hll/percentile.
     * we may estimate larger serialized_size but actually don't use that much space.
     * </pre>
     *
     * <code>optional int64 serialized_size = 9;</code>
     * @param value The serializedSize to set.
     * @return This builder for chaining.
     */
    public Builder setSerializedSize_(long value) {
      bitField0_ |= 0x00000100;
      serializedSize__ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * For some object column types like bitmap/hll/percentile.
     * we may estimate larger serialized_size but actually don't use that much space.
     * </pre>
     *
     * <code>optional int64 serialized_size = 9;</code>
     * @return This builder for chaining.
     */
    public Builder clearSerializedSize_() {
      bitField0_ = (bitField0_ & ~0x00000100);
      serializedSize__ = 0L;
      onChanged();
      return this;
    }

    private com.google.protobuf.Internal.IntList encodeLevel_ = emptyIntList();
    private void ensureEncodeLevelIsMutable() {
      if (!((bitField0_ & 0x00000200) != 0)) {
        encodeLevel_ = mutableCopy(encodeLevel_);
        bitField0_ |= 0x00000200;
       }
    }
    /**
     * <pre>
     * the encode level for data columns, during upgrade, this must be 0.
     * </pre>
     *
     * <code>repeated int32 encode_level = 10;</code>
     * @return A list containing the encodeLevel.
     */
    public java.util.List<java.lang.Integer>
        getEncodeLevelList() {
      return ((bitField0_ & 0x00000200) != 0) ?
               java.util.Collections.unmodifiableList(encodeLevel_) : encodeLevel_;
    }
    /**
     * <pre>
     * the encode level for data columns, during upgrade, this must be 0.
     * </pre>
     *
     * <code>repeated int32 encode_level = 10;</code>
     * @return The count of encodeLevel.
     */
    public int getEncodeLevelCount() {
      return encodeLevel_.size();
    }
    /**
     * <pre>
     * the encode level for data columns, during upgrade, this must be 0.
     * </pre>
     *
     * <code>repeated int32 encode_level = 10;</code>
     * @param index The index of the element to return.
     * @return The encodeLevel at the given index.
     */
    public int getEncodeLevel(int index) {
      return encodeLevel_.getInt(index);
    }
    /**
     * <pre>
     * the encode level for data columns, during upgrade, this must be 0.
     * </pre>
     *
     * <code>repeated int32 encode_level = 10;</code>
     * @param index The index to set the value at.
     * @param value The encodeLevel to set.
     * @return This builder for chaining.
     */
    public Builder setEncodeLevel(
        int index, int value) {
      ensureEncodeLevelIsMutable();
      encodeLevel_.setInt(index, value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * the encode level for data columns, during upgrade, this must be 0.
     * </pre>
     *
     * <code>repeated int32 encode_level = 10;</code>
     * @param value The encodeLevel to add.
     * @return This builder for chaining.
     */
    public Builder addEncodeLevel(int value) {
      ensureEncodeLevelIsMutable();
      encodeLevel_.addInt(value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * the encode level for data columns, during upgrade, this must be 0.
     * </pre>
     *
     * <code>repeated int32 encode_level = 10;</code>
     * @param values The encodeLevel to add.
     * @return This builder for chaining.
     */
    public Builder addAllEncodeLevel(
        java.lang.Iterable<? extends java.lang.Integer> values) {
      ensureEncodeLevelIsMutable();
      com.google.protobuf.AbstractMessageLite.Builder.addAll(
          values, encodeLevel_);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * the encode level for data columns, during upgrade, this must be 0.
     * </pre>
     *
     * <code>repeated int32 encode_level = 10;</code>
     * @return This builder for chaining.
     */
    public Builder clearEncodeLevel() {
      encodeLevel_ = emptyIntList();
      bitField0_ = (bitField0_ & ~0x00000200);
      onChanged();
      return this;
    }

    private java.util.List<com.starrocks.proto.ChunkExtraColumnsMetaPB> extraDataMetas_ =
      java.util.Collections.emptyList();
    private void ensureExtraDataMetasIsMutable() {
      if (!((bitField0_ & 0x00000400) != 0)) {
        extraDataMetas_ = new java.util.ArrayList<com.starrocks.proto.ChunkExtraColumnsMetaPB>(extraDataMetas_);
        bitField0_ |= 0x00000400;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.starrocks.proto.ChunkExtraColumnsMetaPB, com.starrocks.proto.ChunkExtraColumnsMetaPB.Builder, com.starrocks.proto.ChunkExtraColumnsMetaPBOrBuilder> extraDataMetasBuilder_;

    /**
     * <pre>
     * chunk's extra data meta.
     * </pre>
     *
     * <code>repeated .starrocks.ChunkExtraColumnsMetaPB extra_data_metas = 11;</code>
     */
    public java.util.List<com.starrocks.proto.ChunkExtraColumnsMetaPB> getExtraDataMetasList() {
      if (extraDataMetasBuilder_ == null) {
        return java.util.Collections.unmodifiableList(extraDataMetas_);
      } else {
        return extraDataMetasBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     * chunk's extra data meta.
     * </pre>
     *
     * <code>repeated .starrocks.ChunkExtraColumnsMetaPB extra_data_metas = 11;</code>
     */
    public int getExtraDataMetasCount() {
      if (extraDataMetasBuilder_ == null) {
        return extraDataMetas_.size();
      } else {
        return extraDataMetasBuilder_.getCount();
      }
    }
    /**
     * <pre>
     * chunk's extra data meta.
     * </pre>
     *
     * <code>repeated .starrocks.ChunkExtraColumnsMetaPB extra_data_metas = 11;</code>
     */
    public com.starrocks.proto.ChunkExtraColumnsMetaPB getExtraDataMetas(int index) {
      if (extraDataMetasBuilder_ == null) {
        return extraDataMetas_.get(index);
      } else {
        return extraDataMetasBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     * chunk's extra data meta.
     * </pre>
     *
     * <code>repeated .starrocks.ChunkExtraColumnsMetaPB extra_data_metas = 11;</code>
     */
    public Builder setExtraDataMetas(
        int index, com.starrocks.proto.ChunkExtraColumnsMetaPB value) {
      if (extraDataMetasBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureExtraDataMetasIsMutable();
        extraDataMetas_.set(index, value);
        onChanged();
      } else {
        extraDataMetasBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * chunk's extra data meta.
     * </pre>
     *
     * <code>repeated .starrocks.ChunkExtraColumnsMetaPB extra_data_metas = 11;</code>
     */
    public Builder setExtraDataMetas(
        int index, com.starrocks.proto.ChunkExtraColumnsMetaPB.Builder builderForValue) {
      if (extraDataMetasBuilder_ == null) {
        ensureExtraDataMetasIsMutable();
        extraDataMetas_.set(index, builderForValue.build());
        onChanged();
      } else {
        extraDataMetasBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * chunk's extra data meta.
     * </pre>
     *
     * <code>repeated .starrocks.ChunkExtraColumnsMetaPB extra_data_metas = 11;</code>
     */
    public Builder addExtraDataMetas(com.starrocks.proto.ChunkExtraColumnsMetaPB value) {
      if (extraDataMetasBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureExtraDataMetasIsMutable();
        extraDataMetas_.add(value);
        onChanged();
      } else {
        extraDataMetasBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     * chunk's extra data meta.
     * </pre>
     *
     * <code>repeated .starrocks.ChunkExtraColumnsMetaPB extra_data_metas = 11;</code>
     */
    public Builder addExtraDataMetas(
        int index, com.starrocks.proto.ChunkExtraColumnsMetaPB value) {
      if (extraDataMetasBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureExtraDataMetasIsMutable();
        extraDataMetas_.add(index, value);
        onChanged();
      } else {
        extraDataMetasBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * chunk's extra data meta.
     * </pre>
     *
     * <code>repeated .starrocks.ChunkExtraColumnsMetaPB extra_data_metas = 11;</code>
     */
    public Builder addExtraDataMetas(
        com.starrocks.proto.ChunkExtraColumnsMetaPB.Builder builderForValue) {
      if (extraDataMetasBuilder_ == null) {
        ensureExtraDataMetasIsMutable();
        extraDataMetas_.add(builderForValue.build());
        onChanged();
      } else {
        extraDataMetasBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * chunk's extra data meta.
     * </pre>
     *
     * <code>repeated .starrocks.ChunkExtraColumnsMetaPB extra_data_metas = 11;</code>
     */
    public Builder addExtraDataMetas(
        int index, com.starrocks.proto.ChunkExtraColumnsMetaPB.Builder builderForValue) {
      if (extraDataMetasBuilder_ == null) {
        ensureExtraDataMetasIsMutable();
        extraDataMetas_.add(index, builderForValue.build());
        onChanged();
      } else {
        extraDataMetasBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * chunk's extra data meta.
     * </pre>
     *
     * <code>repeated .starrocks.ChunkExtraColumnsMetaPB extra_data_metas = 11;</code>
     */
    public Builder addAllExtraDataMetas(
        java.lang.Iterable<? extends com.starrocks.proto.ChunkExtraColumnsMetaPB> values) {
      if (extraDataMetasBuilder_ == null) {
        ensureExtraDataMetasIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, extraDataMetas_);
        onChanged();
      } else {
        extraDataMetasBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     * chunk's extra data meta.
     * </pre>
     *
     * <code>repeated .starrocks.ChunkExtraColumnsMetaPB extra_data_metas = 11;</code>
     */
    public Builder clearExtraDataMetas() {
      if (extraDataMetasBuilder_ == null) {
        extraDataMetas_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000400);
        onChanged();
      } else {
        extraDataMetasBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * chunk's extra data meta.
     * </pre>
     *
     * <code>repeated .starrocks.ChunkExtraColumnsMetaPB extra_data_metas = 11;</code>
     */
    public Builder removeExtraDataMetas(int index) {
      if (extraDataMetasBuilder_ == null) {
        ensureExtraDataMetasIsMutable();
        extraDataMetas_.remove(index);
        onChanged();
      } else {
        extraDataMetasBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     * chunk's extra data meta.
     * </pre>
     *
     * <code>repeated .starrocks.ChunkExtraColumnsMetaPB extra_data_metas = 11;</code>
     */
    public com.starrocks.proto.ChunkExtraColumnsMetaPB.Builder getExtraDataMetasBuilder(
        int index) {
      return getExtraDataMetasFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     * chunk's extra data meta.
     * </pre>
     *
     * <code>repeated .starrocks.ChunkExtraColumnsMetaPB extra_data_metas = 11;</code>
     */
    public com.starrocks.proto.ChunkExtraColumnsMetaPBOrBuilder getExtraDataMetasOrBuilder(
        int index) {
      if (extraDataMetasBuilder_ == null) {
        return extraDataMetas_.get(index);  } else {
        return extraDataMetasBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     * chunk's extra data meta.
     * </pre>
     *
     * <code>repeated .starrocks.ChunkExtraColumnsMetaPB extra_data_metas = 11;</code>
     */
    public java.util.List<? extends com.starrocks.proto.ChunkExtraColumnsMetaPBOrBuilder> 
         getExtraDataMetasOrBuilderList() {
      if (extraDataMetasBuilder_ != null) {
        return extraDataMetasBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(extraDataMetas_);
      }
    }
    /**
     * <pre>
     * chunk's extra data meta.
     * </pre>
     *
     * <code>repeated .starrocks.ChunkExtraColumnsMetaPB extra_data_metas = 11;</code>
     */
    public com.starrocks.proto.ChunkExtraColumnsMetaPB.Builder addExtraDataMetasBuilder() {
      return getExtraDataMetasFieldBuilder().addBuilder(
          com.starrocks.proto.ChunkExtraColumnsMetaPB.getDefaultInstance());
    }
    /**
     * <pre>
     * chunk's extra data meta.
     * </pre>
     *
     * <code>repeated .starrocks.ChunkExtraColumnsMetaPB extra_data_metas = 11;</code>
     */
    public com.starrocks.proto.ChunkExtraColumnsMetaPB.Builder addExtraDataMetasBuilder(
        int index) {
      return getExtraDataMetasFieldBuilder().addBuilder(
          index, com.starrocks.proto.ChunkExtraColumnsMetaPB.getDefaultInstance());
    }
    /**
     * <pre>
     * chunk's extra data meta.
     * </pre>
     *
     * <code>repeated .starrocks.ChunkExtraColumnsMetaPB extra_data_metas = 11;</code>
     */
    public java.util.List<com.starrocks.proto.ChunkExtraColumnsMetaPB.Builder> 
         getExtraDataMetasBuilderList() {
      return getExtraDataMetasFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.starrocks.proto.ChunkExtraColumnsMetaPB, com.starrocks.proto.ChunkExtraColumnsMetaPB.Builder, com.starrocks.proto.ChunkExtraColumnsMetaPBOrBuilder> 
        getExtraDataMetasFieldBuilder() {
      if (extraDataMetasBuilder_ == null) {
        extraDataMetasBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            com.starrocks.proto.ChunkExtraColumnsMetaPB, com.starrocks.proto.ChunkExtraColumnsMetaPB.Builder, com.starrocks.proto.ChunkExtraColumnsMetaPBOrBuilder>(
                extraDataMetas_,
                ((bitField0_ & 0x00000400) != 0),
                getParentForChildren(),
                isClean());
        extraDataMetas_ = null;
      }
      return extraDataMetasBuilder_;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:starrocks.ChunkPB)
  }

  // @@protoc_insertion_point(class_scope:starrocks.ChunkPB)
  private static final com.starrocks.proto.ChunkPB DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.starrocks.proto.ChunkPB();
  }

  public static com.starrocks.proto.ChunkPB getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  @java.lang.Deprecated public static final com.google.protobuf.Parser<ChunkPB>
      PARSER = new com.google.protobuf.AbstractParser<ChunkPB>() {
    @java.lang.Override
    public ChunkPB parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<ChunkPB> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<ChunkPB> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.starrocks.proto.ChunkPB getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

