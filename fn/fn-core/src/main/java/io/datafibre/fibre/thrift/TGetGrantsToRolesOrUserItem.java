/**
 * Autogenerated by Thrift Compiler (0.19.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.starrocks.thrift;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked", "unused"})
@javax.annotation.Generated(value = "Autogenerated by Thrift Compiler (0.19.0)", date = "2024-02-22")
public class TGetGrantsToRolesOrUserItem implements org.apache.thrift.TBase<TGetGrantsToRolesOrUserItem, TGetGrantsToRolesOrUserItem._Fields>, java.io.Serializable, Cloneable, Comparable<TGetGrantsToRolesOrUserItem> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("TGetGrantsToRolesOrUserItem");

  private static final org.apache.thrift.protocol.TField GRANTEE_FIELD_DESC = new org.apache.thrift.protocol.TField("grantee", org.apache.thrift.protocol.TType.STRING, (short)1);
  private static final org.apache.thrift.protocol.TField OBJECT_CATALOG_FIELD_DESC = new org.apache.thrift.protocol.TField("object_catalog", org.apache.thrift.protocol.TType.STRING, (short)2);
  private static final org.apache.thrift.protocol.TField OBJECT_DATABASE_FIELD_DESC = new org.apache.thrift.protocol.TField("object_database", org.apache.thrift.protocol.TType.STRING, (short)3);
  private static final org.apache.thrift.protocol.TField OBJECT_NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("object_name", org.apache.thrift.protocol.TType.STRING, (short)4);
  private static final org.apache.thrift.protocol.TField OBJECT_TYPE_FIELD_DESC = new org.apache.thrift.protocol.TField("object_type", org.apache.thrift.protocol.TType.STRING, (short)5);
  private static final org.apache.thrift.protocol.TField PRIVILEGE_TYPE_FIELD_DESC = new org.apache.thrift.protocol.TField("privilege_type", org.apache.thrift.protocol.TType.STRING, (short)6);
  private static final org.apache.thrift.protocol.TField IS_GRANTABLE_FIELD_DESC = new org.apache.thrift.protocol.TField("is_grantable", org.apache.thrift.protocol.TType.BOOL, (short)7);

  private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new TGetGrantsToRolesOrUserItemStandardSchemeFactory();
  private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new TGetGrantsToRolesOrUserItemTupleSchemeFactory();

  public @org.apache.thrift.annotation.Nullable java.lang.String grantee; // optional
  public @org.apache.thrift.annotation.Nullable java.lang.String object_catalog; // optional
  public @org.apache.thrift.annotation.Nullable java.lang.String object_database; // optional
  public @org.apache.thrift.annotation.Nullable java.lang.String object_name; // optional
  public @org.apache.thrift.annotation.Nullable java.lang.String object_type; // optional
  public @org.apache.thrift.annotation.Nullable java.lang.String privilege_type; // optional
  public boolean is_grantable; // optional

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    GRANTEE((short)1, "grantee"),
    OBJECT_CATALOG((short)2, "object_catalog"),
    OBJECT_DATABASE((short)3, "object_database"),
    OBJECT_NAME((short)4, "object_name"),
    OBJECT_TYPE((short)5, "object_type"),
    PRIVILEGE_TYPE((short)6, "privilege_type"),
    IS_GRANTABLE((short)7, "is_grantable");

    private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

    static {
      for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    @org.apache.thrift.annotation.Nullable
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // GRANTEE
          return GRANTEE;
        case 2: // OBJECT_CATALOG
          return OBJECT_CATALOG;
        case 3: // OBJECT_DATABASE
          return OBJECT_DATABASE;
        case 4: // OBJECT_NAME
          return OBJECT_NAME;
        case 5: // OBJECT_TYPE
          return OBJECT_TYPE;
        case 6: // PRIVILEGE_TYPE
          return PRIVILEGE_TYPE;
        case 7: // IS_GRANTABLE
          return IS_GRANTABLE;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    @org.apache.thrift.annotation.Nullable
    public static _Fields findByName(java.lang.String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final java.lang.String _fieldName;

    _Fields(short thriftId, java.lang.String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    @Override
    public short getThriftFieldId() {
      return _thriftId;
    }

    @Override
    public java.lang.String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __IS_GRANTABLE_ISSET_ID = 0;
  private byte __isset_bitfield = 0;
  private static final _Fields optionals[] = {_Fields.GRANTEE,_Fields.OBJECT_CATALOG,_Fields.OBJECT_DATABASE,_Fields.OBJECT_NAME,_Fields.OBJECT_TYPE,_Fields.PRIVILEGE_TYPE,_Fields.IS_GRANTABLE};
  public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.GRANTEE, new org.apache.thrift.meta_data.FieldMetaData("grantee", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.OBJECT_CATALOG, new org.apache.thrift.meta_data.FieldMetaData("object_catalog", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.OBJECT_DATABASE, new org.apache.thrift.meta_data.FieldMetaData("object_database", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.OBJECT_NAME, new org.apache.thrift.meta_data.FieldMetaData("object_name", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.OBJECT_TYPE, new org.apache.thrift.meta_data.FieldMetaData("object_type", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.PRIVILEGE_TYPE, new org.apache.thrift.meta_data.FieldMetaData("privilege_type", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.IS_GRANTABLE, new org.apache.thrift.meta_data.FieldMetaData("is_grantable", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.BOOL)));
    metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(TGetGrantsToRolesOrUserItem.class, metaDataMap);
  }

  public TGetGrantsToRolesOrUserItem() {
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public TGetGrantsToRolesOrUserItem(TGetGrantsToRolesOrUserItem other) {
    __isset_bitfield = other.__isset_bitfield;
    if (other.isSetGrantee()) {
      this.grantee = other.grantee;
    }
    if (other.isSetObject_catalog()) {
      this.object_catalog = other.object_catalog;
    }
    if (other.isSetObject_database()) {
      this.object_database = other.object_database;
    }
    if (other.isSetObject_name()) {
      this.object_name = other.object_name;
    }
    if (other.isSetObject_type()) {
      this.object_type = other.object_type;
    }
    if (other.isSetPrivilege_type()) {
      this.privilege_type = other.privilege_type;
    }
    this.is_grantable = other.is_grantable;
  }

  @Override
  public TGetGrantsToRolesOrUserItem deepCopy() {
    return new TGetGrantsToRolesOrUserItem(this);
  }

  @Override
  public void clear() {
    this.grantee = null;
    this.object_catalog = null;
    this.object_database = null;
    this.object_name = null;
    this.object_type = null;
    this.privilege_type = null;
    setIs_grantableIsSet(false);
    this.is_grantable = false;
  }

  @org.apache.thrift.annotation.Nullable
  public java.lang.String getGrantee() {
    return this.grantee;
  }

  public TGetGrantsToRolesOrUserItem setGrantee(@org.apache.thrift.annotation.Nullable java.lang.String grantee) {
    this.grantee = grantee;
    return this;
  }

  public void unsetGrantee() {
    this.grantee = null;
  }

  /** Returns true if field grantee is set (has been assigned a value) and false otherwise */
  public boolean isSetGrantee() {
    return this.grantee != null;
  }

  public void setGranteeIsSet(boolean value) {
    if (!value) {
      this.grantee = null;
    }
  }

  @org.apache.thrift.annotation.Nullable
  public java.lang.String getObject_catalog() {
    return this.object_catalog;
  }

  public TGetGrantsToRolesOrUserItem setObject_catalog(@org.apache.thrift.annotation.Nullable java.lang.String object_catalog) {
    this.object_catalog = object_catalog;
    return this;
  }

  public void unsetObject_catalog() {
    this.object_catalog = null;
  }

  /** Returns true if field object_catalog is set (has been assigned a value) and false otherwise */
  public boolean isSetObject_catalog() {
    return this.object_catalog != null;
  }

  public void setObject_catalogIsSet(boolean value) {
    if (!value) {
      this.object_catalog = null;
    }
  }

  @org.apache.thrift.annotation.Nullable
  public java.lang.String getObject_database() {
    return this.object_database;
  }

  public TGetGrantsToRolesOrUserItem setObject_database(@org.apache.thrift.annotation.Nullable java.lang.String object_database) {
    this.object_database = object_database;
    return this;
  }

  public void unsetObject_database() {
    this.object_database = null;
  }

  /** Returns true if field object_database is set (has been assigned a value) and false otherwise */
  public boolean isSetObject_database() {
    return this.object_database != null;
  }

  public void setObject_databaseIsSet(boolean value) {
    if (!value) {
      this.object_database = null;
    }
  }

  @org.apache.thrift.annotation.Nullable
  public java.lang.String getObject_name() {
    return this.object_name;
  }

  public TGetGrantsToRolesOrUserItem setObject_name(@org.apache.thrift.annotation.Nullable java.lang.String object_name) {
    this.object_name = object_name;
    return this;
  }

  public void unsetObject_name() {
    this.object_name = null;
  }

  /** Returns true if field object_name is set (has been assigned a value) and false otherwise */
  public boolean isSetObject_name() {
    return this.object_name != null;
  }

  public void setObject_nameIsSet(boolean value) {
    if (!value) {
      this.object_name = null;
    }
  }

  @org.apache.thrift.annotation.Nullable
  public java.lang.String getObject_type() {
    return this.object_type;
  }

  public TGetGrantsToRolesOrUserItem setObject_type(@org.apache.thrift.annotation.Nullable java.lang.String object_type) {
    this.object_type = object_type;
    return this;
  }

  public void unsetObject_type() {
    this.object_type = null;
  }

  /** Returns true if field object_type is set (has been assigned a value) and false otherwise */
  public boolean isSetObject_type() {
    return this.object_type != null;
  }

  public void setObject_typeIsSet(boolean value) {
    if (!value) {
      this.object_type = null;
    }
  }

  @org.apache.thrift.annotation.Nullable
  public java.lang.String getPrivilege_type() {
    return this.privilege_type;
  }

  public TGetGrantsToRolesOrUserItem setPrivilege_type(@org.apache.thrift.annotation.Nullable java.lang.String privilege_type) {
    this.privilege_type = privilege_type;
    return this;
  }

  public void unsetPrivilege_type() {
    this.privilege_type = null;
  }

  /** Returns true if field privilege_type is set (has been assigned a value) and false otherwise */
  public boolean isSetPrivilege_type() {
    return this.privilege_type != null;
  }

  public void setPrivilege_typeIsSet(boolean value) {
    if (!value) {
      this.privilege_type = null;
    }
  }

  public boolean isIs_grantable() {
    return this.is_grantable;
  }

  public TGetGrantsToRolesOrUserItem setIs_grantable(boolean is_grantable) {
    this.is_grantable = is_grantable;
    setIs_grantableIsSet(true);
    return this;
  }

  public void unsetIs_grantable() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __IS_GRANTABLE_ISSET_ID);
  }

  /** Returns true if field is_grantable is set (has been assigned a value) and false otherwise */
  public boolean isSetIs_grantable() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __IS_GRANTABLE_ISSET_ID);
  }

  public void setIs_grantableIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __IS_GRANTABLE_ISSET_ID, value);
  }

  @Override
  public void setFieldValue(_Fields field, @org.apache.thrift.annotation.Nullable java.lang.Object value) {
    switch (field) {
    case GRANTEE:
      if (value == null) {
        unsetGrantee();
      } else {
        setGrantee((java.lang.String)value);
      }
      break;

    case OBJECT_CATALOG:
      if (value == null) {
        unsetObject_catalog();
      } else {
        setObject_catalog((java.lang.String)value);
      }
      break;

    case OBJECT_DATABASE:
      if (value == null) {
        unsetObject_database();
      } else {
        setObject_database((java.lang.String)value);
      }
      break;

    case OBJECT_NAME:
      if (value == null) {
        unsetObject_name();
      } else {
        setObject_name((java.lang.String)value);
      }
      break;

    case OBJECT_TYPE:
      if (value == null) {
        unsetObject_type();
      } else {
        setObject_type((java.lang.String)value);
      }
      break;

    case PRIVILEGE_TYPE:
      if (value == null) {
        unsetPrivilege_type();
      } else {
        setPrivilege_type((java.lang.String)value);
      }
      break;

    case IS_GRANTABLE:
      if (value == null) {
        unsetIs_grantable();
      } else {
        setIs_grantable((java.lang.Boolean)value);
      }
      break;

    }
  }

  @org.apache.thrift.annotation.Nullable
  @Override
  public java.lang.Object getFieldValue(_Fields field) {
    switch (field) {
    case GRANTEE:
      return getGrantee();

    case OBJECT_CATALOG:
      return getObject_catalog();

    case OBJECT_DATABASE:
      return getObject_database();

    case OBJECT_NAME:
      return getObject_name();

    case OBJECT_TYPE:
      return getObject_type();

    case PRIVILEGE_TYPE:
      return getPrivilege_type();

    case IS_GRANTABLE:
      return isIs_grantable();

    }
    throw new java.lang.IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  @Override
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new java.lang.IllegalArgumentException();
    }

    switch (field) {
    case GRANTEE:
      return isSetGrantee();
    case OBJECT_CATALOG:
      return isSetObject_catalog();
    case OBJECT_DATABASE:
      return isSetObject_database();
    case OBJECT_NAME:
      return isSetObject_name();
    case OBJECT_TYPE:
      return isSetObject_type();
    case PRIVILEGE_TYPE:
      return isSetPrivilege_type();
    case IS_GRANTABLE:
      return isSetIs_grantable();
    }
    throw new java.lang.IllegalStateException();
  }

  @Override
  public boolean equals(java.lang.Object that) {
    if (that instanceof TGetGrantsToRolesOrUserItem)
      return this.equals((TGetGrantsToRolesOrUserItem)that);
    return false;
  }

  public boolean equals(TGetGrantsToRolesOrUserItem that) {
    if (that == null)
      return false;
    if (this == that)
      return true;

    boolean this_present_grantee = true && this.isSetGrantee();
    boolean that_present_grantee = true && that.isSetGrantee();
    if (this_present_grantee || that_present_grantee) {
      if (!(this_present_grantee && that_present_grantee))
        return false;
      if (!this.grantee.equals(that.grantee))
        return false;
    }

    boolean this_present_object_catalog = true && this.isSetObject_catalog();
    boolean that_present_object_catalog = true && that.isSetObject_catalog();
    if (this_present_object_catalog || that_present_object_catalog) {
      if (!(this_present_object_catalog && that_present_object_catalog))
        return false;
      if (!this.object_catalog.equals(that.object_catalog))
        return false;
    }

    boolean this_present_object_database = true && this.isSetObject_database();
    boolean that_present_object_database = true && that.isSetObject_database();
    if (this_present_object_database || that_present_object_database) {
      if (!(this_present_object_database && that_present_object_database))
        return false;
      if (!this.object_database.equals(that.object_database))
        return false;
    }

    boolean this_present_object_name = true && this.isSetObject_name();
    boolean that_present_object_name = true && that.isSetObject_name();
    if (this_present_object_name || that_present_object_name) {
      if (!(this_present_object_name && that_present_object_name))
        return false;
      if (!this.object_name.equals(that.object_name))
        return false;
    }

    boolean this_present_object_type = true && this.isSetObject_type();
    boolean that_present_object_type = true && that.isSetObject_type();
    if (this_present_object_type || that_present_object_type) {
      if (!(this_present_object_type && that_present_object_type))
        return false;
      if (!this.object_type.equals(that.object_type))
        return false;
    }

    boolean this_present_privilege_type = true && this.isSetPrivilege_type();
    boolean that_present_privilege_type = true && that.isSetPrivilege_type();
    if (this_present_privilege_type || that_present_privilege_type) {
      if (!(this_present_privilege_type && that_present_privilege_type))
        return false;
      if (!this.privilege_type.equals(that.privilege_type))
        return false;
    }

    boolean this_present_is_grantable = true && this.isSetIs_grantable();
    boolean that_present_is_grantable = true && that.isSetIs_grantable();
    if (this_present_is_grantable || that_present_is_grantable) {
      if (!(this_present_is_grantable && that_present_is_grantable))
        return false;
      if (this.is_grantable != that.is_grantable)
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    int hashCode = 1;

    hashCode = hashCode * 8191 + ((isSetGrantee()) ? 131071 : 524287);
    if (isSetGrantee())
      hashCode = hashCode * 8191 + grantee.hashCode();

    hashCode = hashCode * 8191 + ((isSetObject_catalog()) ? 131071 : 524287);
    if (isSetObject_catalog())
      hashCode = hashCode * 8191 + object_catalog.hashCode();

    hashCode = hashCode * 8191 + ((isSetObject_database()) ? 131071 : 524287);
    if (isSetObject_database())
      hashCode = hashCode * 8191 + object_database.hashCode();

    hashCode = hashCode * 8191 + ((isSetObject_name()) ? 131071 : 524287);
    if (isSetObject_name())
      hashCode = hashCode * 8191 + object_name.hashCode();

    hashCode = hashCode * 8191 + ((isSetObject_type()) ? 131071 : 524287);
    if (isSetObject_type())
      hashCode = hashCode * 8191 + object_type.hashCode();

    hashCode = hashCode * 8191 + ((isSetPrivilege_type()) ? 131071 : 524287);
    if (isSetPrivilege_type())
      hashCode = hashCode * 8191 + privilege_type.hashCode();

    hashCode = hashCode * 8191 + ((isSetIs_grantable()) ? 131071 : 524287);
    if (isSetIs_grantable())
      hashCode = hashCode * 8191 + ((is_grantable) ? 131071 : 524287);

    return hashCode;
  }

  @Override
  public int compareTo(TGetGrantsToRolesOrUserItem other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = java.lang.Boolean.compare(isSetGrantee(), other.isSetGrantee());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetGrantee()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.grantee, other.grantee);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetObject_catalog(), other.isSetObject_catalog());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetObject_catalog()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.object_catalog, other.object_catalog);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetObject_database(), other.isSetObject_database());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetObject_database()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.object_database, other.object_database);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetObject_name(), other.isSetObject_name());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetObject_name()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.object_name, other.object_name);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetObject_type(), other.isSetObject_type());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetObject_type()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.object_type, other.object_type);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetPrivilege_type(), other.isSetPrivilege_type());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPrivilege_type()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.privilege_type, other.privilege_type);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetIs_grantable(), other.isSetIs_grantable());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetIs_grantable()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.is_grantable, other.is_grantable);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  @org.apache.thrift.annotation.Nullable
  @Override
  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  @Override
  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    scheme(iprot).read(iprot, this);
  }

  @Override
  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    scheme(oprot).write(oprot, this);
  }

  @Override
  public java.lang.String toString() {
    java.lang.StringBuilder sb = new java.lang.StringBuilder("TGetGrantsToRolesOrUserItem(");
    boolean first = true;

    if (isSetGrantee()) {
      sb.append("grantee:");
      if (this.grantee == null) {
        sb.append("null");
      } else {
        sb.append(this.grantee);
      }
      first = false;
    }
    if (isSetObject_catalog()) {
      if (!first) sb.append(", ");
      sb.append("object_catalog:");
      if (this.object_catalog == null) {
        sb.append("null");
      } else {
        sb.append(this.object_catalog);
      }
      first = false;
    }
    if (isSetObject_database()) {
      if (!first) sb.append(", ");
      sb.append("object_database:");
      if (this.object_database == null) {
        sb.append("null");
      } else {
        sb.append(this.object_database);
      }
      first = false;
    }
    if (isSetObject_name()) {
      if (!first) sb.append(", ");
      sb.append("object_name:");
      if (this.object_name == null) {
        sb.append("null");
      } else {
        sb.append(this.object_name);
      }
      first = false;
    }
    if (isSetObject_type()) {
      if (!first) sb.append(", ");
      sb.append("object_type:");
      if (this.object_type == null) {
        sb.append("null");
      } else {
        sb.append(this.object_type);
      }
      first = false;
    }
    if (isSetPrivilege_type()) {
      if (!first) sb.append(", ");
      sb.append("privilege_type:");
      if (this.privilege_type == null) {
        sb.append("null");
      } else {
        sb.append(this.privilege_type);
      }
      first = false;
    }
    if (isSetIs_grantable()) {
      if (!first) sb.append(", ");
      sb.append("is_grantable:");
      sb.append(this.is_grantable);
      first = false;
    }
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // check for sub-struct validity
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bitfield = 0;
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class TGetGrantsToRolesOrUserItemStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    @Override
    public TGetGrantsToRolesOrUserItemStandardScheme getScheme() {
      return new TGetGrantsToRolesOrUserItemStandardScheme();
    }
  }

  private static class TGetGrantsToRolesOrUserItemStandardScheme extends org.apache.thrift.scheme.StandardScheme<TGetGrantsToRolesOrUserItem> {

    @Override
    public void read(org.apache.thrift.protocol.TProtocol iprot, TGetGrantsToRolesOrUserItem struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // GRANTEE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.grantee = iprot.readString();
              struct.setGranteeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // OBJECT_CATALOG
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.object_catalog = iprot.readString();
              struct.setObject_catalogIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // OBJECT_DATABASE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.object_database = iprot.readString();
              struct.setObject_databaseIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // OBJECT_NAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.object_name = iprot.readString();
              struct.setObject_nameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // OBJECT_TYPE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.object_type = iprot.readString();
              struct.setObject_typeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 6: // PRIVILEGE_TYPE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.privilege_type = iprot.readString();
              struct.setPrivilege_typeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 7: // IS_GRANTABLE
            if (schemeField.type == org.apache.thrift.protocol.TType.BOOL) {
              struct.is_grantable = iprot.readBool();
              struct.setIs_grantableIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    @Override
    public void write(org.apache.thrift.protocol.TProtocol oprot, TGetGrantsToRolesOrUserItem struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      if (struct.grantee != null) {
        if (struct.isSetGrantee()) {
          oprot.writeFieldBegin(GRANTEE_FIELD_DESC);
          oprot.writeString(struct.grantee);
          oprot.writeFieldEnd();
        }
      }
      if (struct.object_catalog != null) {
        if (struct.isSetObject_catalog()) {
          oprot.writeFieldBegin(OBJECT_CATALOG_FIELD_DESC);
          oprot.writeString(struct.object_catalog);
          oprot.writeFieldEnd();
        }
      }
      if (struct.object_database != null) {
        if (struct.isSetObject_database()) {
          oprot.writeFieldBegin(OBJECT_DATABASE_FIELD_DESC);
          oprot.writeString(struct.object_database);
          oprot.writeFieldEnd();
        }
      }
      if (struct.object_name != null) {
        if (struct.isSetObject_name()) {
          oprot.writeFieldBegin(OBJECT_NAME_FIELD_DESC);
          oprot.writeString(struct.object_name);
          oprot.writeFieldEnd();
        }
      }
      if (struct.object_type != null) {
        if (struct.isSetObject_type()) {
          oprot.writeFieldBegin(OBJECT_TYPE_FIELD_DESC);
          oprot.writeString(struct.object_type);
          oprot.writeFieldEnd();
        }
      }
      if (struct.privilege_type != null) {
        if (struct.isSetPrivilege_type()) {
          oprot.writeFieldBegin(PRIVILEGE_TYPE_FIELD_DESC);
          oprot.writeString(struct.privilege_type);
          oprot.writeFieldEnd();
        }
      }
      if (struct.isSetIs_grantable()) {
        oprot.writeFieldBegin(IS_GRANTABLE_FIELD_DESC);
        oprot.writeBool(struct.is_grantable);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class TGetGrantsToRolesOrUserItemTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    @Override
    public TGetGrantsToRolesOrUserItemTupleScheme getScheme() {
      return new TGetGrantsToRolesOrUserItemTupleScheme();
    }
  }

  private static class TGetGrantsToRolesOrUserItemTupleScheme extends org.apache.thrift.scheme.TupleScheme<TGetGrantsToRolesOrUserItem> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, TGetGrantsToRolesOrUserItem struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      java.util.BitSet optionals = new java.util.BitSet();
      if (struct.isSetGrantee()) {
        optionals.set(0);
      }
      if (struct.isSetObject_catalog()) {
        optionals.set(1);
      }
      if (struct.isSetObject_database()) {
        optionals.set(2);
      }
      if (struct.isSetObject_name()) {
        optionals.set(3);
      }
      if (struct.isSetObject_type()) {
        optionals.set(4);
      }
      if (struct.isSetPrivilege_type()) {
        optionals.set(5);
      }
      if (struct.isSetIs_grantable()) {
        optionals.set(6);
      }
      oprot.writeBitSet(optionals, 7);
      if (struct.isSetGrantee()) {
        oprot.writeString(struct.grantee);
      }
      if (struct.isSetObject_catalog()) {
        oprot.writeString(struct.object_catalog);
      }
      if (struct.isSetObject_database()) {
        oprot.writeString(struct.object_database);
      }
      if (struct.isSetObject_name()) {
        oprot.writeString(struct.object_name);
      }
      if (struct.isSetObject_type()) {
        oprot.writeString(struct.object_type);
      }
      if (struct.isSetPrivilege_type()) {
        oprot.writeString(struct.privilege_type);
      }
      if (struct.isSetIs_grantable()) {
        oprot.writeBool(struct.is_grantable);
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, TGetGrantsToRolesOrUserItem struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      java.util.BitSet incoming = iprot.readBitSet(7);
      if (incoming.get(0)) {
        struct.grantee = iprot.readString();
        struct.setGranteeIsSet(true);
      }
      if (incoming.get(1)) {
        struct.object_catalog = iprot.readString();
        struct.setObject_catalogIsSet(true);
      }
      if (incoming.get(2)) {
        struct.object_database = iprot.readString();
        struct.setObject_databaseIsSet(true);
      }
      if (incoming.get(3)) {
        struct.object_name = iprot.readString();
        struct.setObject_nameIsSet(true);
      }
      if (incoming.get(4)) {
        struct.object_type = iprot.readString();
        struct.setObject_typeIsSet(true);
      }
      if (incoming.get(5)) {
        struct.privilege_type = iprot.readString();
        struct.setPrivilege_typeIsSet(true);
      }
      if (incoming.get(6)) {
        struct.is_grantable = iprot.readBool();
        struct.setIs_grantableIsSet(true);
      }
    }
  }

  private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
    return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
  }
}

