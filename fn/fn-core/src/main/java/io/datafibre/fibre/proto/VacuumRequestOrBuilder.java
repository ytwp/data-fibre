// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: lake_service.proto

package io.datafibre.fibre.proto;

public interface VacuumRequestOrBuilder extends
    // @@protoc_insertion_point(interface_extends:starrocks.lake.VacuumRequest)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * All tablets must be in the same partition.
   * </pre>
   *
   * <code>repeated int64 tablet_ids = 1;</code>
   * @return A list containing the tabletIds.
   */
  java.util.List<java.lang.Long> getTabletIdsList();
  /**
   * <pre>
   * All tablets must be in the same partition.
   * </pre>
   *
   * <code>repeated int64 tablet_ids = 1;</code>
   * @return The count of tabletIds.
   */
  int getTabletIdsCount();
  /**
   * <pre>
   * All tablets must be in the same partition.
   * </pre>
   *
   * <code>repeated int64 tablet_ids = 1;</code>
   * @param index The index of the element to return.
   * @return The tabletIds at the given index.
   */
  long getTabletIds(int index);

  /**
   * <pre>
   * Tablet metadata files with version numbers greater than or equals to min_retain_version
   * will NOT be vacuumed. For tablet metadata files with version numbers less than
   * min_retain_version, decide whether they should be deleted by comparing the create time
   * against the grace_timestamp.
   * </pre>
   *
   * <code>optional int64 min_retain_version = 2;</code>
   * @return Whether the minRetainVersion field is set.
   */
  boolean hasMinRetainVersion();
  /**
   * <pre>
   * Tablet metadata files with version numbers greater than or equals to min_retain_version
   * will NOT be vacuumed. For tablet metadata files with version numbers less than
   * min_retain_version, decide whether they should be deleted by comparing the create time
   * against the grace_timestamp.
   * </pre>
   *
   * <code>optional int64 min_retain_version = 2;</code>
   * @return The minRetainVersion.
   */
  long getMinRetainVersion();

  /**
   * <pre>
   * the timestamp after which created tablet metadata files will not be vacuumed.
   * In addition to retaining all versions after grace_timestamp, retain the last version before
   * grace_timestamp.
   * Meansured as the number of seconds since the Epoch, 1970-01-01 00:00:00 +0000 (UTC)
   * </pre>
   *
   * <code>optional int64 grace_timestamp = 3;</code>
   * @return Whether the graceTimestamp field is set.
   */
  boolean hasGraceTimestamp();
  /**
   * <pre>
   * the timestamp after which created tablet metadata files will not be vacuumed.
   * In addition to retaining all versions after grace_timestamp, retain the last version before
   * grace_timestamp.
   * Meansured as the number of seconds since the Epoch, 1970-01-01 00:00:00 +0000 (UTC)
   * </pre>
   *
   * <code>optional int64 grace_timestamp = 3;</code>
   * @return The graceTimestamp.
   */
  long getGraceTimestamp();

  /**
   * <pre>
   * Delete txn log files with txn IDs less than min_active_txn_id
   * </pre>
   *
   * <code>optional int64 min_active_txn_id = 4;</code>
   * @return Whether the minActiveTxnId field is set.
   */
  boolean hasMinActiveTxnId();
  /**
   * <pre>
   * Delete txn log files with txn IDs less than min_active_txn_id
   * </pre>
   *
   * <code>optional int64 min_active_txn_id = 4;</code>
   * @return The minActiveTxnId.
   */
  long getMinActiveTxnId();

  /**
   * <pre>
   * Whether need to delete committed txn logs or not.
   * </pre>
   *
   * <code>optional bool delete_txn_log = 5;</code>
   * @return Whether the deleteTxnLog field is set.
   */
  boolean hasDeleteTxnLog();
  /**
   * <pre>
   * Whether need to delete committed txn logs or not.
   * </pre>
   *
   * <code>optional bool delete_txn_log = 5;</code>
   * @return The deleteTxnLog.
   */
  boolean getDeleteTxnLog();

  /**
   * <pre>
   * ID of the partition the tablet belongs to.
   * </pre>
   *
   * <code>optional int64 partition_id = 6;</code>
   * @return Whether the partitionId field is set.
   */
  boolean hasPartitionId();
  /**
   * <pre>
   * ID of the partition the tablet belongs to.
   * </pre>
   *
   * <code>optional int64 partition_id = 6;</code>
   * @return The partitionId.
   */
  long getPartitionId();
}
