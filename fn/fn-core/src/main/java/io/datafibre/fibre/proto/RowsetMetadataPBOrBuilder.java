// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: lake_types.proto

package io.datafibre.fibre.proto;

public interface RowsetMetadataPBOrBuilder extends
    // @@protoc_insertion_point(interface_extends:starrocks.lake.RowsetMetadataPB)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <code>optional uint32 id = 1;</code>
   * @return Whether the id field is set.
   */
  boolean hasId();
  /**
   * <code>optional uint32 id = 1;</code>
   * @return The id.
   */
  int getId();

  /**
   * <code>optional bool overlapped = 2;</code>
   * @return Whether the overlapped field is set.
   */
  boolean hasOverlapped();
  /**
   * <code>optional bool overlapped = 2;</code>
   * @return The overlapped.
   */
  boolean getOverlapped();

  /**
   * <code>repeated string segments = 3;</code>
   * @return A list containing the segments.
   */
  java.util.List<java.lang.String>
      getSegmentsList();
  /**
   * <code>repeated string segments = 3;</code>
   * @return The count of segments.
   */
  int getSegmentsCount();
  /**
   * <code>repeated string segments = 3;</code>
   * @param index The index of the element to return.
   * @return The segments at the given index.
   */
  java.lang.String getSegments(int index);
  /**
   * <code>repeated string segments = 3;</code>
   * @param index The index of the value to return.
   * @return The bytes of the segments at the given index.
   */
  com.google.protobuf.ByteString
      getSegmentsBytes(int index);

  /**
   * <code>optional int64 num_rows = 4;</code>
   * @return Whether the numRows field is set.
   */
  boolean hasNumRows();
  /**
   * <code>optional int64 num_rows = 4;</code>
   * @return The numRows.
   */
  long getNumRows();

  /**
   * <code>optional int64 data_size = 5;</code>
   * @return Whether the dataSize field is set.
   */
  boolean hasDataSize();
  /**
   * <code>optional int64 data_size = 5;</code>
   * @return The dataSize.
   */
  long getDataSize();

  /**
   * <code>optional .starrocks.DeletePredicatePB delete_predicate = 6;</code>
   * @return Whether the deletePredicate field is set.
   */
  boolean hasDeletePredicate();
  /**
   * <code>optional .starrocks.DeletePredicatePB delete_predicate = 6;</code>
   * @return The deletePredicate.
   */
  io.datafibre.fibre.proto.DeletePredicatePB getDeletePredicate();
  /**
   * <code>optional .starrocks.DeletePredicatePB delete_predicate = 6;</code>
   */
  io.datafibre.fibre.proto.DeletePredicatePBOrBuilder getDeletePredicateOrBuilder();

  /**
   * <pre>
   * approximate, BE upgrade from old version can't get exact number of dels
   * </pre>
   *
   * <code>optional int64 num_dels = 7;</code>
   * @return Whether the numDels field is set.
   */
  boolean hasNumDels();
  /**
   * <pre>
   * approximate, BE upgrade from old version can't get exact number of dels
   * </pre>
   *
   * <code>optional int64 num_dels = 7;</code>
   * @return The numDels.
   */
  long getNumDels();

  /**
   * <code>repeated uint64 segment_size = 8 [packed = true];</code>
   * @return A list containing the segmentSize.
   */
  java.util.List<java.lang.Long> getSegmentSizeList();
  /**
   * <code>repeated uint64 segment_size = 8 [packed = true];</code>
   * @return The count of segmentSize.
   */
  int getSegmentSizeCount();
  /**
   * <code>repeated uint64 segment_size = 8 [packed = true];</code>
   * @param index The index of the element to return.
   * @return The segmentSize at the given index.
   */
  long getSegmentSize(int index);

  /**
   * <pre>
   * May not be empty if this rowset was generated by a compaction task in PK table.
   * We use max_compact_input_rowset_id to decide the rowset order when doing pk recover.
   * </pre>
   *
   * <code>optional uint32 max_compact_input_rowset_id = 9;</code>
   * @return Whether the maxCompactInputRowsetId field is set.
   */
  boolean hasMaxCompactInputRowsetId();
  /**
   * <pre>
   * May not be empty if this rowset was generated by a compaction task in PK table.
   * We use max_compact_input_rowset_id to decide the rowset order when doing pk recover.
   * </pre>
   *
   * <code>optional uint32 max_compact_input_rowset_id = 9;</code>
   * @return The maxCompactInputRowsetId.
   */
  int getMaxCompactInputRowsetId();
}
