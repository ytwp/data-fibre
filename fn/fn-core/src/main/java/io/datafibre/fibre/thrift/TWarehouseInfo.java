/**
 * Autogenerated by Thrift Compiler (0.19.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.starrocks.thrift;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked", "unused"})
@javax.annotation.Generated(value = "Autogenerated by Thrift Compiler (0.19.0)", date = "2024-02-22")
public class TWarehouseInfo implements org.apache.thrift.TBase<TWarehouseInfo, TWarehouseInfo._Fields>, java.io.Serializable, Cloneable, Comparable<TWarehouseInfo> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("TWarehouseInfo");

  private static final org.apache.thrift.protocol.TField WAREHOUSE_FIELD_DESC = new org.apache.thrift.protocol.TField("warehouse", org.apache.thrift.protocol.TType.STRING, (short)1);
  private static final org.apache.thrift.protocol.TField ID_FIELD_DESC = new org.apache.thrift.protocol.TField("id", org.apache.thrift.protocol.TType.I64, (short)2);
  private static final org.apache.thrift.protocol.TField NUM_UNFINISHED_QUERY_JOBS_FIELD_DESC = new org.apache.thrift.protocol.TField("num_unfinished_query_jobs", org.apache.thrift.protocol.TType.I64, (short)3);
  private static final org.apache.thrift.protocol.TField NUM_UNFINISHED_LOAD_JOBS_FIELD_DESC = new org.apache.thrift.protocol.TField("num_unfinished_load_jobs", org.apache.thrift.protocol.TType.I64, (short)4);
  private static final org.apache.thrift.protocol.TField NUM_UNFINISHED_BACKUP_JOBS_FIELD_DESC = new org.apache.thrift.protocol.TField("num_unfinished_backup_jobs", org.apache.thrift.protocol.TType.I64, (short)5);
  private static final org.apache.thrift.protocol.TField NUM_UNFINISHED_RESTORE_JOBS_FIELD_DESC = new org.apache.thrift.protocol.TField("num_unfinished_restore_jobs", org.apache.thrift.protocol.TType.I64, (short)6);
  private static final org.apache.thrift.protocol.TField LAST_FINISHED_JOB_TIMESTAMP_MS_FIELD_DESC = new org.apache.thrift.protocol.TField("last_finished_job_timestamp_ms", org.apache.thrift.protocol.TType.I64, (short)7);

  private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new TWarehouseInfoStandardSchemeFactory();
  private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new TWarehouseInfoTupleSchemeFactory();

  public @org.apache.thrift.annotation.Nullable java.lang.String warehouse; // optional
  public long id; // optional
  public long num_unfinished_query_jobs; // optional
  public long num_unfinished_load_jobs; // optional
  public long num_unfinished_backup_jobs; // optional
  public long num_unfinished_restore_jobs; // optional
  public long last_finished_job_timestamp_ms; // optional

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    WAREHOUSE((short)1, "warehouse"),
    ID((short)2, "id"),
    NUM_UNFINISHED_QUERY_JOBS((short)3, "num_unfinished_query_jobs"),
    NUM_UNFINISHED_LOAD_JOBS((short)4, "num_unfinished_load_jobs"),
    NUM_UNFINISHED_BACKUP_JOBS((short)5, "num_unfinished_backup_jobs"),
    NUM_UNFINISHED_RESTORE_JOBS((short)6, "num_unfinished_restore_jobs"),
    LAST_FINISHED_JOB_TIMESTAMP_MS((short)7, "last_finished_job_timestamp_ms");

    private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

    static {
      for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    @org.apache.thrift.annotation.Nullable
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // WAREHOUSE
          return WAREHOUSE;
        case 2: // ID
          return ID;
        case 3: // NUM_UNFINISHED_QUERY_JOBS
          return NUM_UNFINISHED_QUERY_JOBS;
        case 4: // NUM_UNFINISHED_LOAD_JOBS
          return NUM_UNFINISHED_LOAD_JOBS;
        case 5: // NUM_UNFINISHED_BACKUP_JOBS
          return NUM_UNFINISHED_BACKUP_JOBS;
        case 6: // NUM_UNFINISHED_RESTORE_JOBS
          return NUM_UNFINISHED_RESTORE_JOBS;
        case 7: // LAST_FINISHED_JOB_TIMESTAMP_MS
          return LAST_FINISHED_JOB_TIMESTAMP_MS;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    @org.apache.thrift.annotation.Nullable
    public static _Fields findByName(java.lang.String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final java.lang.String _fieldName;

    _Fields(short thriftId, java.lang.String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    @Override
    public short getThriftFieldId() {
      return _thriftId;
    }

    @Override
    public java.lang.String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __ID_ISSET_ID = 0;
  private static final int __NUM_UNFINISHED_QUERY_JOBS_ISSET_ID = 1;
  private static final int __NUM_UNFINISHED_LOAD_JOBS_ISSET_ID = 2;
  private static final int __NUM_UNFINISHED_BACKUP_JOBS_ISSET_ID = 3;
  private static final int __NUM_UNFINISHED_RESTORE_JOBS_ISSET_ID = 4;
  private static final int __LAST_FINISHED_JOB_TIMESTAMP_MS_ISSET_ID = 5;
  private byte __isset_bitfield = 0;
  private static final _Fields optionals[] = {_Fields.WAREHOUSE,_Fields.ID,_Fields.NUM_UNFINISHED_QUERY_JOBS,_Fields.NUM_UNFINISHED_LOAD_JOBS,_Fields.NUM_UNFINISHED_BACKUP_JOBS,_Fields.NUM_UNFINISHED_RESTORE_JOBS,_Fields.LAST_FINISHED_JOB_TIMESTAMP_MS};
  public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.WAREHOUSE, new org.apache.thrift.meta_data.FieldMetaData("warehouse", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.ID, new org.apache.thrift.meta_data.FieldMetaData("id", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.NUM_UNFINISHED_QUERY_JOBS, new org.apache.thrift.meta_data.FieldMetaData("num_unfinished_query_jobs", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.NUM_UNFINISHED_LOAD_JOBS, new org.apache.thrift.meta_data.FieldMetaData("num_unfinished_load_jobs", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.NUM_UNFINISHED_BACKUP_JOBS, new org.apache.thrift.meta_data.FieldMetaData("num_unfinished_backup_jobs", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.NUM_UNFINISHED_RESTORE_JOBS, new org.apache.thrift.meta_data.FieldMetaData("num_unfinished_restore_jobs", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.LAST_FINISHED_JOB_TIMESTAMP_MS, new org.apache.thrift.meta_data.FieldMetaData("last_finished_job_timestamp_ms", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(TWarehouseInfo.class, metaDataMap);
  }

  public TWarehouseInfo() {
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public TWarehouseInfo(TWarehouseInfo other) {
    __isset_bitfield = other.__isset_bitfield;
    if (other.isSetWarehouse()) {
      this.warehouse = other.warehouse;
    }
    this.id = other.id;
    this.num_unfinished_query_jobs = other.num_unfinished_query_jobs;
    this.num_unfinished_load_jobs = other.num_unfinished_load_jobs;
    this.num_unfinished_backup_jobs = other.num_unfinished_backup_jobs;
    this.num_unfinished_restore_jobs = other.num_unfinished_restore_jobs;
    this.last_finished_job_timestamp_ms = other.last_finished_job_timestamp_ms;
  }

  @Override
  public TWarehouseInfo deepCopy() {
    return new TWarehouseInfo(this);
  }

  @Override
  public void clear() {
    this.warehouse = null;
    setIdIsSet(false);
    this.id = 0;
    setNum_unfinished_query_jobsIsSet(false);
    this.num_unfinished_query_jobs = 0;
    setNum_unfinished_load_jobsIsSet(false);
    this.num_unfinished_load_jobs = 0;
    setNum_unfinished_backup_jobsIsSet(false);
    this.num_unfinished_backup_jobs = 0;
    setNum_unfinished_restore_jobsIsSet(false);
    this.num_unfinished_restore_jobs = 0;
    setLast_finished_job_timestamp_msIsSet(false);
    this.last_finished_job_timestamp_ms = 0;
  }

  @org.apache.thrift.annotation.Nullable
  public java.lang.String getWarehouse() {
    return this.warehouse;
  }

  public TWarehouseInfo setWarehouse(@org.apache.thrift.annotation.Nullable java.lang.String warehouse) {
    this.warehouse = warehouse;
    return this;
  }

  public void unsetWarehouse() {
    this.warehouse = null;
  }

  /** Returns true if field warehouse is set (has been assigned a value) and false otherwise */
  public boolean isSetWarehouse() {
    return this.warehouse != null;
  }

  public void setWarehouseIsSet(boolean value) {
    if (!value) {
      this.warehouse = null;
    }
  }

  public long getId() {
    return this.id;
  }

  public TWarehouseInfo setId(long id) {
    this.id = id;
    setIdIsSet(true);
    return this;
  }

  public void unsetId() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __ID_ISSET_ID);
  }

  /** Returns true if field id is set (has been assigned a value) and false otherwise */
  public boolean isSetId() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __ID_ISSET_ID);
  }

  public void setIdIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __ID_ISSET_ID, value);
  }

  public long getNum_unfinished_query_jobs() {
    return this.num_unfinished_query_jobs;
  }

  public TWarehouseInfo setNum_unfinished_query_jobs(long num_unfinished_query_jobs) {
    this.num_unfinished_query_jobs = num_unfinished_query_jobs;
    setNum_unfinished_query_jobsIsSet(true);
    return this;
  }

  public void unsetNum_unfinished_query_jobs() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __NUM_UNFINISHED_QUERY_JOBS_ISSET_ID);
  }

  /** Returns true if field num_unfinished_query_jobs is set (has been assigned a value) and false otherwise */
  public boolean isSetNum_unfinished_query_jobs() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __NUM_UNFINISHED_QUERY_JOBS_ISSET_ID);
  }

  public void setNum_unfinished_query_jobsIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __NUM_UNFINISHED_QUERY_JOBS_ISSET_ID, value);
  }

  public long getNum_unfinished_load_jobs() {
    return this.num_unfinished_load_jobs;
  }

  public TWarehouseInfo setNum_unfinished_load_jobs(long num_unfinished_load_jobs) {
    this.num_unfinished_load_jobs = num_unfinished_load_jobs;
    setNum_unfinished_load_jobsIsSet(true);
    return this;
  }

  public void unsetNum_unfinished_load_jobs() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __NUM_UNFINISHED_LOAD_JOBS_ISSET_ID);
  }

  /** Returns true if field num_unfinished_load_jobs is set (has been assigned a value) and false otherwise */
  public boolean isSetNum_unfinished_load_jobs() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __NUM_UNFINISHED_LOAD_JOBS_ISSET_ID);
  }

  public void setNum_unfinished_load_jobsIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __NUM_UNFINISHED_LOAD_JOBS_ISSET_ID, value);
  }

  public long getNum_unfinished_backup_jobs() {
    return this.num_unfinished_backup_jobs;
  }

  public TWarehouseInfo setNum_unfinished_backup_jobs(long num_unfinished_backup_jobs) {
    this.num_unfinished_backup_jobs = num_unfinished_backup_jobs;
    setNum_unfinished_backup_jobsIsSet(true);
    return this;
  }

  public void unsetNum_unfinished_backup_jobs() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __NUM_UNFINISHED_BACKUP_JOBS_ISSET_ID);
  }

  /** Returns true if field num_unfinished_backup_jobs is set (has been assigned a value) and false otherwise */
  public boolean isSetNum_unfinished_backup_jobs() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __NUM_UNFINISHED_BACKUP_JOBS_ISSET_ID);
  }

  public void setNum_unfinished_backup_jobsIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __NUM_UNFINISHED_BACKUP_JOBS_ISSET_ID, value);
  }

  public long getNum_unfinished_restore_jobs() {
    return this.num_unfinished_restore_jobs;
  }

  public TWarehouseInfo setNum_unfinished_restore_jobs(long num_unfinished_restore_jobs) {
    this.num_unfinished_restore_jobs = num_unfinished_restore_jobs;
    setNum_unfinished_restore_jobsIsSet(true);
    return this;
  }

  public void unsetNum_unfinished_restore_jobs() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __NUM_UNFINISHED_RESTORE_JOBS_ISSET_ID);
  }

  /** Returns true if field num_unfinished_restore_jobs is set (has been assigned a value) and false otherwise */
  public boolean isSetNum_unfinished_restore_jobs() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __NUM_UNFINISHED_RESTORE_JOBS_ISSET_ID);
  }

  public void setNum_unfinished_restore_jobsIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __NUM_UNFINISHED_RESTORE_JOBS_ISSET_ID, value);
  }

  public long getLast_finished_job_timestamp_ms() {
    return this.last_finished_job_timestamp_ms;
  }

  public TWarehouseInfo setLast_finished_job_timestamp_ms(long last_finished_job_timestamp_ms) {
    this.last_finished_job_timestamp_ms = last_finished_job_timestamp_ms;
    setLast_finished_job_timestamp_msIsSet(true);
    return this;
  }

  public void unsetLast_finished_job_timestamp_ms() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __LAST_FINISHED_JOB_TIMESTAMP_MS_ISSET_ID);
  }

  /** Returns true if field last_finished_job_timestamp_ms is set (has been assigned a value) and false otherwise */
  public boolean isSetLast_finished_job_timestamp_ms() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __LAST_FINISHED_JOB_TIMESTAMP_MS_ISSET_ID);
  }

  public void setLast_finished_job_timestamp_msIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __LAST_FINISHED_JOB_TIMESTAMP_MS_ISSET_ID, value);
  }

  @Override
  public void setFieldValue(_Fields field, @org.apache.thrift.annotation.Nullable java.lang.Object value) {
    switch (field) {
    case WAREHOUSE:
      if (value == null) {
        unsetWarehouse();
      } else {
        setWarehouse((java.lang.String)value);
      }
      break;

    case ID:
      if (value == null) {
        unsetId();
      } else {
        setId((java.lang.Long)value);
      }
      break;

    case NUM_UNFINISHED_QUERY_JOBS:
      if (value == null) {
        unsetNum_unfinished_query_jobs();
      } else {
        setNum_unfinished_query_jobs((java.lang.Long)value);
      }
      break;

    case NUM_UNFINISHED_LOAD_JOBS:
      if (value == null) {
        unsetNum_unfinished_load_jobs();
      } else {
        setNum_unfinished_load_jobs((java.lang.Long)value);
      }
      break;

    case NUM_UNFINISHED_BACKUP_JOBS:
      if (value == null) {
        unsetNum_unfinished_backup_jobs();
      } else {
        setNum_unfinished_backup_jobs((java.lang.Long)value);
      }
      break;

    case NUM_UNFINISHED_RESTORE_JOBS:
      if (value == null) {
        unsetNum_unfinished_restore_jobs();
      } else {
        setNum_unfinished_restore_jobs((java.lang.Long)value);
      }
      break;

    case LAST_FINISHED_JOB_TIMESTAMP_MS:
      if (value == null) {
        unsetLast_finished_job_timestamp_ms();
      } else {
        setLast_finished_job_timestamp_ms((java.lang.Long)value);
      }
      break;

    }
  }

  @org.apache.thrift.annotation.Nullable
  @Override
  public java.lang.Object getFieldValue(_Fields field) {
    switch (field) {
    case WAREHOUSE:
      return getWarehouse();

    case ID:
      return getId();

    case NUM_UNFINISHED_QUERY_JOBS:
      return getNum_unfinished_query_jobs();

    case NUM_UNFINISHED_LOAD_JOBS:
      return getNum_unfinished_load_jobs();

    case NUM_UNFINISHED_BACKUP_JOBS:
      return getNum_unfinished_backup_jobs();

    case NUM_UNFINISHED_RESTORE_JOBS:
      return getNum_unfinished_restore_jobs();

    case LAST_FINISHED_JOB_TIMESTAMP_MS:
      return getLast_finished_job_timestamp_ms();

    }
    throw new java.lang.IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  @Override
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new java.lang.IllegalArgumentException();
    }

    switch (field) {
    case WAREHOUSE:
      return isSetWarehouse();
    case ID:
      return isSetId();
    case NUM_UNFINISHED_QUERY_JOBS:
      return isSetNum_unfinished_query_jobs();
    case NUM_UNFINISHED_LOAD_JOBS:
      return isSetNum_unfinished_load_jobs();
    case NUM_UNFINISHED_BACKUP_JOBS:
      return isSetNum_unfinished_backup_jobs();
    case NUM_UNFINISHED_RESTORE_JOBS:
      return isSetNum_unfinished_restore_jobs();
    case LAST_FINISHED_JOB_TIMESTAMP_MS:
      return isSetLast_finished_job_timestamp_ms();
    }
    throw new java.lang.IllegalStateException();
  }

  @Override
  public boolean equals(java.lang.Object that) {
    if (that instanceof TWarehouseInfo)
      return this.equals((TWarehouseInfo)that);
    return false;
  }

  public boolean equals(TWarehouseInfo that) {
    if (that == null)
      return false;
    if (this == that)
      return true;

    boolean this_present_warehouse = true && this.isSetWarehouse();
    boolean that_present_warehouse = true && that.isSetWarehouse();
    if (this_present_warehouse || that_present_warehouse) {
      if (!(this_present_warehouse && that_present_warehouse))
        return false;
      if (!this.warehouse.equals(that.warehouse))
        return false;
    }

    boolean this_present_id = true && this.isSetId();
    boolean that_present_id = true && that.isSetId();
    if (this_present_id || that_present_id) {
      if (!(this_present_id && that_present_id))
        return false;
      if (this.id != that.id)
        return false;
    }

    boolean this_present_num_unfinished_query_jobs = true && this.isSetNum_unfinished_query_jobs();
    boolean that_present_num_unfinished_query_jobs = true && that.isSetNum_unfinished_query_jobs();
    if (this_present_num_unfinished_query_jobs || that_present_num_unfinished_query_jobs) {
      if (!(this_present_num_unfinished_query_jobs && that_present_num_unfinished_query_jobs))
        return false;
      if (this.num_unfinished_query_jobs != that.num_unfinished_query_jobs)
        return false;
    }

    boolean this_present_num_unfinished_load_jobs = true && this.isSetNum_unfinished_load_jobs();
    boolean that_present_num_unfinished_load_jobs = true && that.isSetNum_unfinished_load_jobs();
    if (this_present_num_unfinished_load_jobs || that_present_num_unfinished_load_jobs) {
      if (!(this_present_num_unfinished_load_jobs && that_present_num_unfinished_load_jobs))
        return false;
      if (this.num_unfinished_load_jobs != that.num_unfinished_load_jobs)
        return false;
    }

    boolean this_present_num_unfinished_backup_jobs = true && this.isSetNum_unfinished_backup_jobs();
    boolean that_present_num_unfinished_backup_jobs = true && that.isSetNum_unfinished_backup_jobs();
    if (this_present_num_unfinished_backup_jobs || that_present_num_unfinished_backup_jobs) {
      if (!(this_present_num_unfinished_backup_jobs && that_present_num_unfinished_backup_jobs))
        return false;
      if (this.num_unfinished_backup_jobs != that.num_unfinished_backup_jobs)
        return false;
    }

    boolean this_present_num_unfinished_restore_jobs = true && this.isSetNum_unfinished_restore_jobs();
    boolean that_present_num_unfinished_restore_jobs = true && that.isSetNum_unfinished_restore_jobs();
    if (this_present_num_unfinished_restore_jobs || that_present_num_unfinished_restore_jobs) {
      if (!(this_present_num_unfinished_restore_jobs && that_present_num_unfinished_restore_jobs))
        return false;
      if (this.num_unfinished_restore_jobs != that.num_unfinished_restore_jobs)
        return false;
    }

    boolean this_present_last_finished_job_timestamp_ms = true && this.isSetLast_finished_job_timestamp_ms();
    boolean that_present_last_finished_job_timestamp_ms = true && that.isSetLast_finished_job_timestamp_ms();
    if (this_present_last_finished_job_timestamp_ms || that_present_last_finished_job_timestamp_ms) {
      if (!(this_present_last_finished_job_timestamp_ms && that_present_last_finished_job_timestamp_ms))
        return false;
      if (this.last_finished_job_timestamp_ms != that.last_finished_job_timestamp_ms)
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    int hashCode = 1;

    hashCode = hashCode * 8191 + ((isSetWarehouse()) ? 131071 : 524287);
    if (isSetWarehouse())
      hashCode = hashCode * 8191 + warehouse.hashCode();

    hashCode = hashCode * 8191 + ((isSetId()) ? 131071 : 524287);
    if (isSetId())
      hashCode = hashCode * 8191 + org.apache.thrift.TBaseHelper.hashCode(id);

    hashCode = hashCode * 8191 + ((isSetNum_unfinished_query_jobs()) ? 131071 : 524287);
    if (isSetNum_unfinished_query_jobs())
      hashCode = hashCode * 8191 + org.apache.thrift.TBaseHelper.hashCode(num_unfinished_query_jobs);

    hashCode = hashCode * 8191 + ((isSetNum_unfinished_load_jobs()) ? 131071 : 524287);
    if (isSetNum_unfinished_load_jobs())
      hashCode = hashCode * 8191 + org.apache.thrift.TBaseHelper.hashCode(num_unfinished_load_jobs);

    hashCode = hashCode * 8191 + ((isSetNum_unfinished_backup_jobs()) ? 131071 : 524287);
    if (isSetNum_unfinished_backup_jobs())
      hashCode = hashCode * 8191 + org.apache.thrift.TBaseHelper.hashCode(num_unfinished_backup_jobs);

    hashCode = hashCode * 8191 + ((isSetNum_unfinished_restore_jobs()) ? 131071 : 524287);
    if (isSetNum_unfinished_restore_jobs())
      hashCode = hashCode * 8191 + org.apache.thrift.TBaseHelper.hashCode(num_unfinished_restore_jobs);

    hashCode = hashCode * 8191 + ((isSetLast_finished_job_timestamp_ms()) ? 131071 : 524287);
    if (isSetLast_finished_job_timestamp_ms())
      hashCode = hashCode * 8191 + org.apache.thrift.TBaseHelper.hashCode(last_finished_job_timestamp_ms);

    return hashCode;
  }

  @Override
  public int compareTo(TWarehouseInfo other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = java.lang.Boolean.compare(isSetWarehouse(), other.isSetWarehouse());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetWarehouse()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.warehouse, other.warehouse);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetId(), other.isSetId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.id, other.id);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetNum_unfinished_query_jobs(), other.isSetNum_unfinished_query_jobs());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetNum_unfinished_query_jobs()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.num_unfinished_query_jobs, other.num_unfinished_query_jobs);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetNum_unfinished_load_jobs(), other.isSetNum_unfinished_load_jobs());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetNum_unfinished_load_jobs()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.num_unfinished_load_jobs, other.num_unfinished_load_jobs);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetNum_unfinished_backup_jobs(), other.isSetNum_unfinished_backup_jobs());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetNum_unfinished_backup_jobs()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.num_unfinished_backup_jobs, other.num_unfinished_backup_jobs);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetNum_unfinished_restore_jobs(), other.isSetNum_unfinished_restore_jobs());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetNum_unfinished_restore_jobs()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.num_unfinished_restore_jobs, other.num_unfinished_restore_jobs);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetLast_finished_job_timestamp_ms(), other.isSetLast_finished_job_timestamp_ms());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetLast_finished_job_timestamp_ms()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.last_finished_job_timestamp_ms, other.last_finished_job_timestamp_ms);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  @org.apache.thrift.annotation.Nullable
  @Override
  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  @Override
  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    scheme(iprot).read(iprot, this);
  }

  @Override
  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    scheme(oprot).write(oprot, this);
  }

  @Override
  public java.lang.String toString() {
    java.lang.StringBuilder sb = new java.lang.StringBuilder("TWarehouseInfo(");
    boolean first = true;

    if (isSetWarehouse()) {
      sb.append("warehouse:");
      if (this.warehouse == null) {
        sb.append("null");
      } else {
        sb.append(this.warehouse);
      }
      first = false;
    }
    if (isSetId()) {
      if (!first) sb.append(", ");
      sb.append("id:");
      sb.append(this.id);
      first = false;
    }
    if (isSetNum_unfinished_query_jobs()) {
      if (!first) sb.append(", ");
      sb.append("num_unfinished_query_jobs:");
      sb.append(this.num_unfinished_query_jobs);
      first = false;
    }
    if (isSetNum_unfinished_load_jobs()) {
      if (!first) sb.append(", ");
      sb.append("num_unfinished_load_jobs:");
      sb.append(this.num_unfinished_load_jobs);
      first = false;
    }
    if (isSetNum_unfinished_backup_jobs()) {
      if (!first) sb.append(", ");
      sb.append("num_unfinished_backup_jobs:");
      sb.append(this.num_unfinished_backup_jobs);
      first = false;
    }
    if (isSetNum_unfinished_restore_jobs()) {
      if (!first) sb.append(", ");
      sb.append("num_unfinished_restore_jobs:");
      sb.append(this.num_unfinished_restore_jobs);
      first = false;
    }
    if (isSetLast_finished_job_timestamp_ms()) {
      if (!first) sb.append(", ");
      sb.append("last_finished_job_timestamp_ms:");
      sb.append(this.last_finished_job_timestamp_ms);
      first = false;
    }
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // check for sub-struct validity
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bitfield = 0;
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class TWarehouseInfoStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    @Override
    public TWarehouseInfoStandardScheme getScheme() {
      return new TWarehouseInfoStandardScheme();
    }
  }

  private static class TWarehouseInfoStandardScheme extends org.apache.thrift.scheme.StandardScheme<TWarehouseInfo> {

    @Override
    public void read(org.apache.thrift.protocol.TProtocol iprot, TWarehouseInfo struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // WAREHOUSE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.warehouse = iprot.readString();
              struct.setWarehouseIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.id = iprot.readI64();
              struct.setIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // NUM_UNFINISHED_QUERY_JOBS
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.num_unfinished_query_jobs = iprot.readI64();
              struct.setNum_unfinished_query_jobsIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // NUM_UNFINISHED_LOAD_JOBS
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.num_unfinished_load_jobs = iprot.readI64();
              struct.setNum_unfinished_load_jobsIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // NUM_UNFINISHED_BACKUP_JOBS
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.num_unfinished_backup_jobs = iprot.readI64();
              struct.setNum_unfinished_backup_jobsIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 6: // NUM_UNFINISHED_RESTORE_JOBS
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.num_unfinished_restore_jobs = iprot.readI64();
              struct.setNum_unfinished_restore_jobsIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 7: // LAST_FINISHED_JOB_TIMESTAMP_MS
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.last_finished_job_timestamp_ms = iprot.readI64();
              struct.setLast_finished_job_timestamp_msIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    @Override
    public void write(org.apache.thrift.protocol.TProtocol oprot, TWarehouseInfo struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      if (struct.warehouse != null) {
        if (struct.isSetWarehouse()) {
          oprot.writeFieldBegin(WAREHOUSE_FIELD_DESC);
          oprot.writeString(struct.warehouse);
          oprot.writeFieldEnd();
        }
      }
      if (struct.isSetId()) {
        oprot.writeFieldBegin(ID_FIELD_DESC);
        oprot.writeI64(struct.id);
        oprot.writeFieldEnd();
      }
      if (struct.isSetNum_unfinished_query_jobs()) {
        oprot.writeFieldBegin(NUM_UNFINISHED_QUERY_JOBS_FIELD_DESC);
        oprot.writeI64(struct.num_unfinished_query_jobs);
        oprot.writeFieldEnd();
      }
      if (struct.isSetNum_unfinished_load_jobs()) {
        oprot.writeFieldBegin(NUM_UNFINISHED_LOAD_JOBS_FIELD_DESC);
        oprot.writeI64(struct.num_unfinished_load_jobs);
        oprot.writeFieldEnd();
      }
      if (struct.isSetNum_unfinished_backup_jobs()) {
        oprot.writeFieldBegin(NUM_UNFINISHED_BACKUP_JOBS_FIELD_DESC);
        oprot.writeI64(struct.num_unfinished_backup_jobs);
        oprot.writeFieldEnd();
      }
      if (struct.isSetNum_unfinished_restore_jobs()) {
        oprot.writeFieldBegin(NUM_UNFINISHED_RESTORE_JOBS_FIELD_DESC);
        oprot.writeI64(struct.num_unfinished_restore_jobs);
        oprot.writeFieldEnd();
      }
      if (struct.isSetLast_finished_job_timestamp_ms()) {
        oprot.writeFieldBegin(LAST_FINISHED_JOB_TIMESTAMP_MS_FIELD_DESC);
        oprot.writeI64(struct.last_finished_job_timestamp_ms);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class TWarehouseInfoTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    @Override
    public TWarehouseInfoTupleScheme getScheme() {
      return new TWarehouseInfoTupleScheme();
    }
  }

  private static class TWarehouseInfoTupleScheme extends org.apache.thrift.scheme.TupleScheme<TWarehouseInfo> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, TWarehouseInfo struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      java.util.BitSet optionals = new java.util.BitSet();
      if (struct.isSetWarehouse()) {
        optionals.set(0);
      }
      if (struct.isSetId()) {
        optionals.set(1);
      }
      if (struct.isSetNum_unfinished_query_jobs()) {
        optionals.set(2);
      }
      if (struct.isSetNum_unfinished_load_jobs()) {
        optionals.set(3);
      }
      if (struct.isSetNum_unfinished_backup_jobs()) {
        optionals.set(4);
      }
      if (struct.isSetNum_unfinished_restore_jobs()) {
        optionals.set(5);
      }
      if (struct.isSetLast_finished_job_timestamp_ms()) {
        optionals.set(6);
      }
      oprot.writeBitSet(optionals, 7);
      if (struct.isSetWarehouse()) {
        oprot.writeString(struct.warehouse);
      }
      if (struct.isSetId()) {
        oprot.writeI64(struct.id);
      }
      if (struct.isSetNum_unfinished_query_jobs()) {
        oprot.writeI64(struct.num_unfinished_query_jobs);
      }
      if (struct.isSetNum_unfinished_load_jobs()) {
        oprot.writeI64(struct.num_unfinished_load_jobs);
      }
      if (struct.isSetNum_unfinished_backup_jobs()) {
        oprot.writeI64(struct.num_unfinished_backup_jobs);
      }
      if (struct.isSetNum_unfinished_restore_jobs()) {
        oprot.writeI64(struct.num_unfinished_restore_jobs);
      }
      if (struct.isSetLast_finished_job_timestamp_ms()) {
        oprot.writeI64(struct.last_finished_job_timestamp_ms);
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, TWarehouseInfo struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      java.util.BitSet incoming = iprot.readBitSet(7);
      if (incoming.get(0)) {
        struct.warehouse = iprot.readString();
        struct.setWarehouseIsSet(true);
      }
      if (incoming.get(1)) {
        struct.id = iprot.readI64();
        struct.setIdIsSet(true);
      }
      if (incoming.get(2)) {
        struct.num_unfinished_query_jobs = iprot.readI64();
        struct.setNum_unfinished_query_jobsIsSet(true);
      }
      if (incoming.get(3)) {
        struct.num_unfinished_load_jobs = iprot.readI64();
        struct.setNum_unfinished_load_jobsIsSet(true);
      }
      if (incoming.get(4)) {
        struct.num_unfinished_backup_jobs = iprot.readI64();
        struct.setNum_unfinished_backup_jobsIsSet(true);
      }
      if (incoming.get(5)) {
        struct.num_unfinished_restore_jobs = iprot.readI64();
        struct.setNum_unfinished_restore_jobsIsSet(true);
      }
      if (incoming.get(6)) {
        struct.last_finished_job_timestamp_ms = iprot.readI64();
        struct.setLast_finished_job_timestamp_msIsSet(true);
      }
    }
  }

  private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
    return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
  }
}

