// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: internal_service.proto

package com.starrocks.proto;

/**
 * <pre>
 * Transmit vectorized data chunks between Backends.
 * Try to batch enough chunk in one request to reduce each RPC call overhead.
 * </pre>
 *
 * Protobuf type {@code starrocks.PTransmitChunkParams}
 */
public final class PTransmitChunkParams extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:starrocks.PTransmitChunkParams)
    PTransmitChunkParamsOrBuilder {
private static final long serialVersionUID = 0L;
  // Use PTransmitChunkParams.newBuilder() to construct.
  private PTransmitChunkParams(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private PTransmitChunkParams() {
    chunks_ = java.util.Collections.emptyList();
    driverSequences_ = emptyIntList();
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new PTransmitChunkParams();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.starrocks.proto.InternalService.internal_static_starrocks_PTransmitChunkParams_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.starrocks.proto.InternalService.internal_static_starrocks_PTransmitChunkParams_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.starrocks.proto.PTransmitChunkParams.class, com.starrocks.proto.PTransmitChunkParams.Builder.class);
  }

  private int bitField0_;
  public static final int FINST_ID_FIELD_NUMBER = 1;
  private com.starrocks.proto.PUniqueId finstId_;
  /**
   * <pre>
   * non-change member
   * </pre>
   *
   * <code>optional .starrocks.PUniqueId finst_id = 1;</code>
   * @return Whether the finstId field is set.
   */
  @java.lang.Override
  public boolean hasFinstId() {
    return ((bitField0_ & 0x00000001) != 0);
  }
  /**
   * <pre>
   * non-change member
   * </pre>
   *
   * <code>optional .starrocks.PUniqueId finst_id = 1;</code>
   * @return The finstId.
   */
  @java.lang.Override
  public com.starrocks.proto.PUniqueId getFinstId() {
    return finstId_ == null ? com.starrocks.proto.PUniqueId.getDefaultInstance() : finstId_;
  }
  /**
   * <pre>
   * non-change member
   * </pre>
   *
   * <code>optional .starrocks.PUniqueId finst_id = 1;</code>
   */
  @java.lang.Override
  public com.starrocks.proto.PUniqueIdOrBuilder getFinstIdOrBuilder() {
    return finstId_ == null ? com.starrocks.proto.PUniqueId.getDefaultInstance() : finstId_;
  }

  public static final int NODE_ID_FIELD_NUMBER = 2;
  private int nodeId_;
  /**
   * <code>optional int32 node_id = 2;</code>
   * @return Whether the nodeId field is set.
   */
  @java.lang.Override
  public boolean hasNodeId() {
    return ((bitField0_ & 0x00000002) != 0);
  }
  /**
   * <code>optional int32 node_id = 2;</code>
   * @return The nodeId.
   */
  @java.lang.Override
  public int getNodeId() {
    return nodeId_;
  }

  public static final int SENDER_ID_FIELD_NUMBER = 3;
  private int senderId_;
  /**
   * <pre>
   * Id of this fragment in its role as a sender.
   * </pre>
   *
   * <code>optional int32 sender_id = 3;</code>
   * @return Whether the senderId field is set.
   */
  @java.lang.Override
  public boolean hasSenderId() {
    return ((bitField0_ & 0x00000004) != 0);
  }
  /**
   * <pre>
   * Id of this fragment in its role as a sender.
   * </pre>
   *
   * <code>optional int32 sender_id = 3;</code>
   * @return The senderId.
   */
  @java.lang.Override
  public int getSenderId() {
    return senderId_;
  }

  public static final int BE_NUMBER_FIELD_NUMBER = 4;
  private int beNumber_;
  /**
   * <code>optional int32 be_number = 4;</code>
   * @return Whether the beNumber field is set.
   */
  @java.lang.Override
  public boolean hasBeNumber() {
    return ((bitField0_ & 0x00000008) != 0);
  }
  /**
   * <code>optional int32 be_number = 4;</code>
   * @return The beNumber.
   */
  @java.lang.Override
  public int getBeNumber() {
    return beNumber_;
  }

  public static final int EOS_FIELD_NUMBER = 5;
  private boolean eos_;
  /**
   * <pre>
   * If set to true, indicates that no more row batches will be sent
   * for this dest_node_id.
   * </pre>
   *
   * <code>optional bool eos = 5;</code>
   * @return Whether the eos field is set.
   */
  @java.lang.Override
  public boolean hasEos() {
    return ((bitField0_ & 0x00000010) != 0);
  }
  /**
   * <pre>
   * If set to true, indicates that no more row batches will be sent
   * for this dest_node_id.
   * </pre>
   *
   * <code>optional bool eos = 5;</code>
   * @return The eos.
   */
  @java.lang.Override
  public boolean getEos() {
    return eos_;
  }

  public static final int SEQUENCE_FIELD_NUMBER = 6;
  private long sequence_;
  /**
   * <pre>
   * RPC sequence number for the send channel.
   * Sever will check this number to see if some packet has lost.
   * </pre>
   *
   * <code>optional int64 sequence = 6;</code>
   * @return Whether the sequence field is set.
   */
  @java.lang.Override
  public boolean hasSequence() {
    return ((bitField0_ & 0x00000020) != 0);
  }
  /**
   * <pre>
   * RPC sequence number for the send channel.
   * Sever will check this number to see if some packet has lost.
   * </pre>
   *
   * <code>optional int64 sequence = 6;</code>
   * @return The sequence.
   */
  @java.lang.Override
  public long getSequence() {
    return sequence_;
  }

  public static final int CHUNKS_FIELD_NUMBER = 7;
  private java.util.List<com.starrocks.proto.ChunkPB> chunks_;
  /**
   * <pre>
   * The protobuf data structure for column chunk.
   * </pre>
   *
   * <code>repeated .starrocks.ChunkPB chunks = 7;</code>
   */
  @java.lang.Override
  public java.util.List<com.starrocks.proto.ChunkPB> getChunksList() {
    return chunks_;
  }
  /**
   * <pre>
   * The protobuf data structure for column chunk.
   * </pre>
   *
   * <code>repeated .starrocks.ChunkPB chunks = 7;</code>
   */
  @java.lang.Override
  public java.util.List<? extends com.starrocks.proto.ChunkPBOrBuilder> 
      getChunksOrBuilderList() {
    return chunks_;
  }
  /**
   * <pre>
   * The protobuf data structure for column chunk.
   * </pre>
   *
   * <code>repeated .starrocks.ChunkPB chunks = 7;</code>
   */
  @java.lang.Override
  public int getChunksCount() {
    return chunks_.size();
  }
  /**
   * <pre>
   * The protobuf data structure for column chunk.
   * </pre>
   *
   * <code>repeated .starrocks.ChunkPB chunks = 7;</code>
   */
  @java.lang.Override
  public com.starrocks.proto.ChunkPB getChunks(int index) {
    return chunks_.get(index);
  }
  /**
   * <pre>
   * The protobuf data structure for column chunk.
   * </pre>
   *
   * <code>repeated .starrocks.ChunkPB chunks = 7;</code>
   */
  @java.lang.Override
  public com.starrocks.proto.ChunkPBOrBuilder getChunksOrBuilder(
      int index) {
    return chunks_.get(index);
  }

  public static final int QUERY_STATISTICS_FIELD_NUMBER = 8;
  private com.starrocks.proto.PQueryStatistics queryStatistics_;
  /**
   * <pre>
   * Some statistics for the runing query.
   * </pre>
   *
   * <code>optional .starrocks.PQueryStatistics query_statistics = 8;</code>
   * @return Whether the queryStatistics field is set.
   */
  @java.lang.Override
  public boolean hasQueryStatistics() {
    return ((bitField0_ & 0x00000040) != 0);
  }
  /**
   * <pre>
   * Some statistics for the runing query.
   * </pre>
   *
   * <code>optional .starrocks.PQueryStatistics query_statistics = 8;</code>
   * @return The queryStatistics.
   */
  @java.lang.Override
  public com.starrocks.proto.PQueryStatistics getQueryStatistics() {
    return queryStatistics_ == null ? com.starrocks.proto.PQueryStatistics.getDefaultInstance() : queryStatistics_;
  }
  /**
   * <pre>
   * Some statistics for the runing query.
   * </pre>
   *
   * <code>optional .starrocks.PQueryStatistics query_statistics = 8;</code>
   */
  @java.lang.Override
  public com.starrocks.proto.PQueryStatisticsOrBuilder getQueryStatisticsOrBuilder() {
    return queryStatistics_ == null ? com.starrocks.proto.PQueryStatistics.getDefaultInstance() : queryStatistics_;
  }

  public static final int USE_PASS_THROUGH_FIELD_NUMBER = 9;
  private boolean usePassThrough_;
  /**
   * <code>optional bool use_pass_through = 9 [default = false];</code>
   * @return Whether the usePassThrough field is set.
   */
  @java.lang.Override
  public boolean hasUsePassThrough() {
    return ((bitField0_ & 0x00000080) != 0);
  }
  /**
   * <code>optional bool use_pass_through = 9 [default = false];</code>
   * @return The usePassThrough.
   */
  @java.lang.Override
  public boolean getUsePassThrough() {
    return usePassThrough_;
  }

  public static final int IS_PIPELINE_LEVEL_SHUFFLE_FIELD_NUMBER = 10;
  private boolean isPipelineLevelShuffle_;
  /**
   * <pre>
   * Whether enable pipeline level shuffle.
   * </pre>
   *
   * <code>optional bool is_pipeline_level_shuffle = 10 [default = false];</code>
   * @return Whether the isPipelineLevelShuffle field is set.
   */
  @java.lang.Override
  public boolean hasIsPipelineLevelShuffle() {
    return ((bitField0_ & 0x00000100) != 0);
  }
  /**
   * <pre>
   * Whether enable pipeline level shuffle.
   * </pre>
   *
   * <code>optional bool is_pipeline_level_shuffle = 10 [default = false];</code>
   * @return The isPipelineLevelShuffle.
   */
  @java.lang.Override
  public boolean getIsPipelineLevelShuffle() {
    return isPipelineLevelShuffle_;
  }

  public static final int DRIVER_SEQUENCES_FIELD_NUMBER = 11;
  private com.google.protobuf.Internal.IntList driverSequences_;
  /**
   * <pre>
   * Driver sequences of pipeline level shuffle.
   * </pre>
   *
   * <code>repeated int32 driver_sequences = 11;</code>
   * @return A list containing the driverSequences.
   */
  @java.lang.Override
  public java.util.List<java.lang.Integer>
      getDriverSequencesList() {
    return driverSequences_;
  }
  /**
   * <pre>
   * Driver sequences of pipeline level shuffle.
   * </pre>
   *
   * <code>repeated int32 driver_sequences = 11;</code>
   * @return The count of driverSequences.
   */
  public int getDriverSequencesCount() {
    return driverSequences_.size();
  }
  /**
   * <pre>
   * Driver sequences of pipeline level shuffle.
   * </pre>
   *
   * <code>repeated int32 driver_sequences = 11;</code>
   * @param index The index of the element to return.
   * @return The driverSequences at the given index.
   */
  public int getDriverSequences(int index) {
    return driverSequences_.getInt(index);
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    if (hasFinstId()) {
      if (!getFinstId().isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
    }
    for (int i = 0; i < getChunksCount(); i++) {
      if (!getChunks(i).isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
    }
    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (((bitField0_ & 0x00000001) != 0)) {
      output.writeMessage(1, getFinstId());
    }
    if (((bitField0_ & 0x00000002) != 0)) {
      output.writeInt32(2, nodeId_);
    }
    if (((bitField0_ & 0x00000004) != 0)) {
      output.writeInt32(3, senderId_);
    }
    if (((bitField0_ & 0x00000008) != 0)) {
      output.writeInt32(4, beNumber_);
    }
    if (((bitField0_ & 0x00000010) != 0)) {
      output.writeBool(5, eos_);
    }
    if (((bitField0_ & 0x00000020) != 0)) {
      output.writeInt64(6, sequence_);
    }
    for (int i = 0; i < chunks_.size(); i++) {
      output.writeMessage(7, chunks_.get(i));
    }
    if (((bitField0_ & 0x00000040) != 0)) {
      output.writeMessage(8, getQueryStatistics());
    }
    if (((bitField0_ & 0x00000080) != 0)) {
      output.writeBool(9, usePassThrough_);
    }
    if (((bitField0_ & 0x00000100) != 0)) {
      output.writeBool(10, isPipelineLevelShuffle_);
    }
    for (int i = 0; i < driverSequences_.size(); i++) {
      output.writeInt32(11, driverSequences_.getInt(i));
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (((bitField0_ & 0x00000001) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(1, getFinstId());
    }
    if (((bitField0_ & 0x00000002) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(2, nodeId_);
    }
    if (((bitField0_ & 0x00000004) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(3, senderId_);
    }
    if (((bitField0_ & 0x00000008) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(4, beNumber_);
    }
    if (((bitField0_ & 0x00000010) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(5, eos_);
    }
    if (((bitField0_ & 0x00000020) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt64Size(6, sequence_);
    }
    for (int i = 0; i < chunks_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(7, chunks_.get(i));
    }
    if (((bitField0_ & 0x00000040) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(8, getQueryStatistics());
    }
    if (((bitField0_ & 0x00000080) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(9, usePassThrough_);
    }
    if (((bitField0_ & 0x00000100) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(10, isPipelineLevelShuffle_);
    }
    {
      int dataSize = 0;
      for (int i = 0; i < driverSequences_.size(); i++) {
        dataSize += com.google.protobuf.CodedOutputStream
          .computeInt32SizeNoTag(driverSequences_.getInt(i));
      }
      size += dataSize;
      size += 1 * getDriverSequencesList().size();
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.starrocks.proto.PTransmitChunkParams)) {
      return super.equals(obj);
    }
    com.starrocks.proto.PTransmitChunkParams other = (com.starrocks.proto.PTransmitChunkParams) obj;

    if (hasFinstId() != other.hasFinstId()) return false;
    if (hasFinstId()) {
      if (!getFinstId()
          .equals(other.getFinstId())) return false;
    }
    if (hasNodeId() != other.hasNodeId()) return false;
    if (hasNodeId()) {
      if (getNodeId()
          != other.getNodeId()) return false;
    }
    if (hasSenderId() != other.hasSenderId()) return false;
    if (hasSenderId()) {
      if (getSenderId()
          != other.getSenderId()) return false;
    }
    if (hasBeNumber() != other.hasBeNumber()) return false;
    if (hasBeNumber()) {
      if (getBeNumber()
          != other.getBeNumber()) return false;
    }
    if (hasEos() != other.hasEos()) return false;
    if (hasEos()) {
      if (getEos()
          != other.getEos()) return false;
    }
    if (hasSequence() != other.hasSequence()) return false;
    if (hasSequence()) {
      if (getSequence()
          != other.getSequence()) return false;
    }
    if (!getChunksList()
        .equals(other.getChunksList())) return false;
    if (hasQueryStatistics() != other.hasQueryStatistics()) return false;
    if (hasQueryStatistics()) {
      if (!getQueryStatistics()
          .equals(other.getQueryStatistics())) return false;
    }
    if (hasUsePassThrough() != other.hasUsePassThrough()) return false;
    if (hasUsePassThrough()) {
      if (getUsePassThrough()
          != other.getUsePassThrough()) return false;
    }
    if (hasIsPipelineLevelShuffle() != other.hasIsPipelineLevelShuffle()) return false;
    if (hasIsPipelineLevelShuffle()) {
      if (getIsPipelineLevelShuffle()
          != other.getIsPipelineLevelShuffle()) return false;
    }
    if (!getDriverSequencesList()
        .equals(other.getDriverSequencesList())) return false;
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (hasFinstId()) {
      hash = (37 * hash) + FINST_ID_FIELD_NUMBER;
      hash = (53 * hash) + getFinstId().hashCode();
    }
    if (hasNodeId()) {
      hash = (37 * hash) + NODE_ID_FIELD_NUMBER;
      hash = (53 * hash) + getNodeId();
    }
    if (hasSenderId()) {
      hash = (37 * hash) + SENDER_ID_FIELD_NUMBER;
      hash = (53 * hash) + getSenderId();
    }
    if (hasBeNumber()) {
      hash = (37 * hash) + BE_NUMBER_FIELD_NUMBER;
      hash = (53 * hash) + getBeNumber();
    }
    if (hasEos()) {
      hash = (37 * hash) + EOS_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getEos());
    }
    if (hasSequence()) {
      hash = (37 * hash) + SEQUENCE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getSequence());
    }
    if (getChunksCount() > 0) {
      hash = (37 * hash) + CHUNKS_FIELD_NUMBER;
      hash = (53 * hash) + getChunksList().hashCode();
    }
    if (hasQueryStatistics()) {
      hash = (37 * hash) + QUERY_STATISTICS_FIELD_NUMBER;
      hash = (53 * hash) + getQueryStatistics().hashCode();
    }
    if (hasUsePassThrough()) {
      hash = (37 * hash) + USE_PASS_THROUGH_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getUsePassThrough());
    }
    if (hasIsPipelineLevelShuffle()) {
      hash = (37 * hash) + IS_PIPELINE_LEVEL_SHUFFLE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getIsPipelineLevelShuffle());
    }
    if (getDriverSequencesCount() > 0) {
      hash = (37 * hash) + DRIVER_SEQUENCES_FIELD_NUMBER;
      hash = (53 * hash) + getDriverSequencesList().hashCode();
    }
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.starrocks.proto.PTransmitChunkParams parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.starrocks.proto.PTransmitChunkParams parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.starrocks.proto.PTransmitChunkParams parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.starrocks.proto.PTransmitChunkParams parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.starrocks.proto.PTransmitChunkParams parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.starrocks.proto.PTransmitChunkParams parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.starrocks.proto.PTransmitChunkParams parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.starrocks.proto.PTransmitChunkParams parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.starrocks.proto.PTransmitChunkParams parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static com.starrocks.proto.PTransmitChunkParams parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.starrocks.proto.PTransmitChunkParams parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.starrocks.proto.PTransmitChunkParams parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.starrocks.proto.PTransmitChunkParams prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * Transmit vectorized data chunks between Backends.
   * Try to batch enough chunk in one request to reduce each RPC call overhead.
   * </pre>
   *
   * Protobuf type {@code starrocks.PTransmitChunkParams}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:starrocks.PTransmitChunkParams)
      com.starrocks.proto.PTransmitChunkParamsOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.starrocks.proto.InternalService.internal_static_starrocks_PTransmitChunkParams_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.starrocks.proto.InternalService.internal_static_starrocks_PTransmitChunkParams_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.starrocks.proto.PTransmitChunkParams.class, com.starrocks.proto.PTransmitChunkParams.Builder.class);
    }

    // Construct using com.starrocks.proto.PTransmitChunkParams.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
        getFinstIdFieldBuilder();
        getChunksFieldBuilder();
        getQueryStatisticsFieldBuilder();
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      if (finstIdBuilder_ == null) {
        finstId_ = null;
      } else {
        finstIdBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000001);
      nodeId_ = 0;
      bitField0_ = (bitField0_ & ~0x00000002);
      senderId_ = 0;
      bitField0_ = (bitField0_ & ~0x00000004);
      beNumber_ = 0;
      bitField0_ = (bitField0_ & ~0x00000008);
      eos_ = false;
      bitField0_ = (bitField0_ & ~0x00000010);
      sequence_ = 0L;
      bitField0_ = (bitField0_ & ~0x00000020);
      if (chunksBuilder_ == null) {
        chunks_ = java.util.Collections.emptyList();
      } else {
        chunks_ = null;
        chunksBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000040);
      if (queryStatisticsBuilder_ == null) {
        queryStatistics_ = null;
      } else {
        queryStatisticsBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000080);
      usePassThrough_ = false;
      bitField0_ = (bitField0_ & ~0x00000100);
      isPipelineLevelShuffle_ = false;
      bitField0_ = (bitField0_ & ~0x00000200);
      driverSequences_ = emptyIntList();
      bitField0_ = (bitField0_ & ~0x00000400);
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.starrocks.proto.InternalService.internal_static_starrocks_PTransmitChunkParams_descriptor;
    }

    @java.lang.Override
    public com.starrocks.proto.PTransmitChunkParams getDefaultInstanceForType() {
      return com.starrocks.proto.PTransmitChunkParams.getDefaultInstance();
    }

    @java.lang.Override
    public com.starrocks.proto.PTransmitChunkParams build() {
      com.starrocks.proto.PTransmitChunkParams result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.starrocks.proto.PTransmitChunkParams buildPartial() {
      com.starrocks.proto.PTransmitChunkParams result = new com.starrocks.proto.PTransmitChunkParams(this);
      int from_bitField0_ = bitField0_;
      int to_bitField0_ = 0;
      if (((from_bitField0_ & 0x00000001) != 0)) {
        if (finstIdBuilder_ == null) {
          result.finstId_ = finstId_;
        } else {
          result.finstId_ = finstIdBuilder_.build();
        }
        to_bitField0_ |= 0x00000001;
      }
      if (((from_bitField0_ & 0x00000002) != 0)) {
        result.nodeId_ = nodeId_;
        to_bitField0_ |= 0x00000002;
      }
      if (((from_bitField0_ & 0x00000004) != 0)) {
        result.senderId_ = senderId_;
        to_bitField0_ |= 0x00000004;
      }
      if (((from_bitField0_ & 0x00000008) != 0)) {
        result.beNumber_ = beNumber_;
        to_bitField0_ |= 0x00000008;
      }
      if (((from_bitField0_ & 0x00000010) != 0)) {
        result.eos_ = eos_;
        to_bitField0_ |= 0x00000010;
      }
      if (((from_bitField0_ & 0x00000020) != 0)) {
        result.sequence_ = sequence_;
        to_bitField0_ |= 0x00000020;
      }
      if (chunksBuilder_ == null) {
        if (((bitField0_ & 0x00000040) != 0)) {
          chunks_ = java.util.Collections.unmodifiableList(chunks_);
          bitField0_ = (bitField0_ & ~0x00000040);
        }
        result.chunks_ = chunks_;
      } else {
        result.chunks_ = chunksBuilder_.build();
      }
      if (((from_bitField0_ & 0x00000080) != 0)) {
        if (queryStatisticsBuilder_ == null) {
          result.queryStatistics_ = queryStatistics_;
        } else {
          result.queryStatistics_ = queryStatisticsBuilder_.build();
        }
        to_bitField0_ |= 0x00000040;
      }
      if (((from_bitField0_ & 0x00000100) != 0)) {
        result.usePassThrough_ = usePassThrough_;
        to_bitField0_ |= 0x00000080;
      }
      if (((from_bitField0_ & 0x00000200) != 0)) {
        result.isPipelineLevelShuffle_ = isPipelineLevelShuffle_;
        to_bitField0_ |= 0x00000100;
      }
      if (((bitField0_ & 0x00000400) != 0)) {
        driverSequences_.makeImmutable();
        bitField0_ = (bitField0_ & ~0x00000400);
      }
      result.driverSequences_ = driverSequences_;
      result.bitField0_ = to_bitField0_;
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.starrocks.proto.PTransmitChunkParams) {
        return mergeFrom((com.starrocks.proto.PTransmitChunkParams)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.starrocks.proto.PTransmitChunkParams other) {
      if (other == com.starrocks.proto.PTransmitChunkParams.getDefaultInstance()) return this;
      if (other.hasFinstId()) {
        mergeFinstId(other.getFinstId());
      }
      if (other.hasNodeId()) {
        setNodeId(other.getNodeId());
      }
      if (other.hasSenderId()) {
        setSenderId(other.getSenderId());
      }
      if (other.hasBeNumber()) {
        setBeNumber(other.getBeNumber());
      }
      if (other.hasEos()) {
        setEos(other.getEos());
      }
      if (other.hasSequence()) {
        setSequence(other.getSequence());
      }
      if (chunksBuilder_ == null) {
        if (!other.chunks_.isEmpty()) {
          if (chunks_.isEmpty()) {
            chunks_ = other.chunks_;
            bitField0_ = (bitField0_ & ~0x00000040);
          } else {
            ensureChunksIsMutable();
            chunks_.addAll(other.chunks_);
          }
          onChanged();
        }
      } else {
        if (!other.chunks_.isEmpty()) {
          if (chunksBuilder_.isEmpty()) {
            chunksBuilder_.dispose();
            chunksBuilder_ = null;
            chunks_ = other.chunks_;
            bitField0_ = (bitField0_ & ~0x00000040);
            chunksBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getChunksFieldBuilder() : null;
          } else {
            chunksBuilder_.addAllMessages(other.chunks_);
          }
        }
      }
      if (other.hasQueryStatistics()) {
        mergeQueryStatistics(other.getQueryStatistics());
      }
      if (other.hasUsePassThrough()) {
        setUsePassThrough(other.getUsePassThrough());
      }
      if (other.hasIsPipelineLevelShuffle()) {
        setIsPipelineLevelShuffle(other.getIsPipelineLevelShuffle());
      }
      if (!other.driverSequences_.isEmpty()) {
        if (driverSequences_.isEmpty()) {
          driverSequences_ = other.driverSequences_;
          bitField0_ = (bitField0_ & ~0x00000400);
        } else {
          ensureDriverSequencesIsMutable();
          driverSequences_.addAll(other.driverSequences_);
        }
        onChanged();
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      if (hasFinstId()) {
        if (!getFinstId().isInitialized()) {
          return false;
        }
      }
      for (int i = 0; i < getChunksCount(); i++) {
        if (!getChunks(i).isInitialized()) {
          return false;
        }
      }
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              input.readMessage(
                  getFinstIdFieldBuilder().getBuilder(),
                  extensionRegistry);
              bitField0_ |= 0x00000001;
              break;
            } // case 10
            case 16: {
              nodeId_ = input.readInt32();
              bitField0_ |= 0x00000002;
              break;
            } // case 16
            case 24: {
              senderId_ = input.readInt32();
              bitField0_ |= 0x00000004;
              break;
            } // case 24
            case 32: {
              beNumber_ = input.readInt32();
              bitField0_ |= 0x00000008;
              break;
            } // case 32
            case 40: {
              eos_ = input.readBool();
              bitField0_ |= 0x00000010;
              break;
            } // case 40
            case 48: {
              sequence_ = input.readInt64();
              bitField0_ |= 0x00000020;
              break;
            } // case 48
            case 58: {
              com.starrocks.proto.ChunkPB m =
                  input.readMessage(
                      com.starrocks.proto.ChunkPB.PARSER,
                      extensionRegistry);
              if (chunksBuilder_ == null) {
                ensureChunksIsMutable();
                chunks_.add(m);
              } else {
                chunksBuilder_.addMessage(m);
              }
              break;
            } // case 58
            case 66: {
              input.readMessage(
                  getQueryStatisticsFieldBuilder().getBuilder(),
                  extensionRegistry);
              bitField0_ |= 0x00000080;
              break;
            } // case 66
            case 72: {
              usePassThrough_ = input.readBool();
              bitField0_ |= 0x00000100;
              break;
            } // case 72
            case 80: {
              isPipelineLevelShuffle_ = input.readBool();
              bitField0_ |= 0x00000200;
              break;
            } // case 80
            case 88: {
              int v = input.readInt32();
              ensureDriverSequencesIsMutable();
              driverSequences_.addInt(v);
              break;
            } // case 88
            case 90: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              ensureDriverSequencesIsMutable();
              while (input.getBytesUntilLimit() > 0) {
                driverSequences_.addInt(input.readInt32());
              }
              input.popLimit(limit);
              break;
            } // case 90
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int bitField0_;

    private com.starrocks.proto.PUniqueId finstId_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.starrocks.proto.PUniqueId, com.starrocks.proto.PUniqueId.Builder, com.starrocks.proto.PUniqueIdOrBuilder> finstIdBuilder_;
    /**
     * <pre>
     * non-change member
     * </pre>
     *
     * <code>optional .starrocks.PUniqueId finst_id = 1;</code>
     * @return Whether the finstId field is set.
     */
    public boolean hasFinstId() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * non-change member
     * </pre>
     *
     * <code>optional .starrocks.PUniqueId finst_id = 1;</code>
     * @return The finstId.
     */
    public com.starrocks.proto.PUniqueId getFinstId() {
      if (finstIdBuilder_ == null) {
        return finstId_ == null ? com.starrocks.proto.PUniqueId.getDefaultInstance() : finstId_;
      } else {
        return finstIdBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * non-change member
     * </pre>
     *
     * <code>optional .starrocks.PUniqueId finst_id = 1;</code>
     */
    public Builder setFinstId(com.starrocks.proto.PUniqueId value) {
      if (finstIdBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        finstId_ = value;
        onChanged();
      } else {
        finstIdBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000001;
      return this;
    }
    /**
     * <pre>
     * non-change member
     * </pre>
     *
     * <code>optional .starrocks.PUniqueId finst_id = 1;</code>
     */
    public Builder setFinstId(
        com.starrocks.proto.PUniqueId.Builder builderForValue) {
      if (finstIdBuilder_ == null) {
        finstId_ = builderForValue.build();
        onChanged();
      } else {
        finstIdBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000001;
      return this;
    }
    /**
     * <pre>
     * non-change member
     * </pre>
     *
     * <code>optional .starrocks.PUniqueId finst_id = 1;</code>
     */
    public Builder mergeFinstId(com.starrocks.proto.PUniqueId value) {
      if (finstIdBuilder_ == null) {
        if (((bitField0_ & 0x00000001) != 0) &&
            finstId_ != null &&
            finstId_ != com.starrocks.proto.PUniqueId.getDefaultInstance()) {
          finstId_ =
            com.starrocks.proto.PUniqueId.newBuilder(finstId_).mergeFrom(value).buildPartial();
        } else {
          finstId_ = value;
        }
        onChanged();
      } else {
        finstIdBuilder_.mergeFrom(value);
      }
      bitField0_ |= 0x00000001;
      return this;
    }
    /**
     * <pre>
     * non-change member
     * </pre>
     *
     * <code>optional .starrocks.PUniqueId finst_id = 1;</code>
     */
    public Builder clearFinstId() {
      if (finstIdBuilder_ == null) {
        finstId_ = null;
        onChanged();
      } else {
        finstIdBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000001);
      return this;
    }
    /**
     * <pre>
     * non-change member
     * </pre>
     *
     * <code>optional .starrocks.PUniqueId finst_id = 1;</code>
     */
    public com.starrocks.proto.PUniqueId.Builder getFinstIdBuilder() {
      bitField0_ |= 0x00000001;
      onChanged();
      return getFinstIdFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * non-change member
     * </pre>
     *
     * <code>optional .starrocks.PUniqueId finst_id = 1;</code>
     */
    public com.starrocks.proto.PUniqueIdOrBuilder getFinstIdOrBuilder() {
      if (finstIdBuilder_ != null) {
        return finstIdBuilder_.getMessageOrBuilder();
      } else {
        return finstId_ == null ?
            com.starrocks.proto.PUniqueId.getDefaultInstance() : finstId_;
      }
    }
    /**
     * <pre>
     * non-change member
     * </pre>
     *
     * <code>optional .starrocks.PUniqueId finst_id = 1;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.starrocks.proto.PUniqueId, com.starrocks.proto.PUniqueId.Builder, com.starrocks.proto.PUniqueIdOrBuilder> 
        getFinstIdFieldBuilder() {
      if (finstIdBuilder_ == null) {
        finstIdBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.starrocks.proto.PUniqueId, com.starrocks.proto.PUniqueId.Builder, com.starrocks.proto.PUniqueIdOrBuilder>(
                getFinstId(),
                getParentForChildren(),
                isClean());
        finstId_ = null;
      }
      return finstIdBuilder_;
    }

    private int nodeId_ ;
    /**
     * <code>optional int32 node_id = 2;</code>
     * @return Whether the nodeId field is set.
     */
    @java.lang.Override
    public boolean hasNodeId() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <code>optional int32 node_id = 2;</code>
     * @return The nodeId.
     */
    @java.lang.Override
    public int getNodeId() {
      return nodeId_;
    }
    /**
     * <code>optional int32 node_id = 2;</code>
     * @param value The nodeId to set.
     * @return This builder for chaining.
     */
    public Builder setNodeId(int value) {
      bitField0_ |= 0x00000002;
      nodeId_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>optional int32 node_id = 2;</code>
     * @return This builder for chaining.
     */
    public Builder clearNodeId() {
      bitField0_ = (bitField0_ & ~0x00000002);
      nodeId_ = 0;
      onChanged();
      return this;
    }

    private int senderId_ ;
    /**
     * <pre>
     * Id of this fragment in its role as a sender.
     * </pre>
     *
     * <code>optional int32 sender_id = 3;</code>
     * @return Whether the senderId field is set.
     */
    @java.lang.Override
    public boolean hasSenderId() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <pre>
     * Id of this fragment in its role as a sender.
     * </pre>
     *
     * <code>optional int32 sender_id = 3;</code>
     * @return The senderId.
     */
    @java.lang.Override
    public int getSenderId() {
      return senderId_;
    }
    /**
     * <pre>
     * Id of this fragment in its role as a sender.
     * </pre>
     *
     * <code>optional int32 sender_id = 3;</code>
     * @param value The senderId to set.
     * @return This builder for chaining.
     */
    public Builder setSenderId(int value) {
      bitField0_ |= 0x00000004;
      senderId_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Id of this fragment in its role as a sender.
     * </pre>
     *
     * <code>optional int32 sender_id = 3;</code>
     * @return This builder for chaining.
     */
    public Builder clearSenderId() {
      bitField0_ = (bitField0_ & ~0x00000004);
      senderId_ = 0;
      onChanged();
      return this;
    }

    private int beNumber_ ;
    /**
     * <code>optional int32 be_number = 4;</code>
     * @return Whether the beNumber field is set.
     */
    @java.lang.Override
    public boolean hasBeNumber() {
      return ((bitField0_ & 0x00000008) != 0);
    }
    /**
     * <code>optional int32 be_number = 4;</code>
     * @return The beNumber.
     */
    @java.lang.Override
    public int getBeNumber() {
      return beNumber_;
    }
    /**
     * <code>optional int32 be_number = 4;</code>
     * @param value The beNumber to set.
     * @return This builder for chaining.
     */
    public Builder setBeNumber(int value) {
      bitField0_ |= 0x00000008;
      beNumber_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>optional int32 be_number = 4;</code>
     * @return This builder for chaining.
     */
    public Builder clearBeNumber() {
      bitField0_ = (bitField0_ & ~0x00000008);
      beNumber_ = 0;
      onChanged();
      return this;
    }

    private boolean eos_ ;
    /**
     * <pre>
     * If set to true, indicates that no more row batches will be sent
     * for this dest_node_id.
     * </pre>
     *
     * <code>optional bool eos = 5;</code>
     * @return Whether the eos field is set.
     */
    @java.lang.Override
    public boolean hasEos() {
      return ((bitField0_ & 0x00000010) != 0);
    }
    /**
     * <pre>
     * If set to true, indicates that no more row batches will be sent
     * for this dest_node_id.
     * </pre>
     *
     * <code>optional bool eos = 5;</code>
     * @return The eos.
     */
    @java.lang.Override
    public boolean getEos() {
      return eos_;
    }
    /**
     * <pre>
     * If set to true, indicates that no more row batches will be sent
     * for this dest_node_id.
     * </pre>
     *
     * <code>optional bool eos = 5;</code>
     * @param value The eos to set.
     * @return This builder for chaining.
     */
    public Builder setEos(boolean value) {
      bitField0_ |= 0x00000010;
      eos_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * If set to true, indicates that no more row batches will be sent
     * for this dest_node_id.
     * </pre>
     *
     * <code>optional bool eos = 5;</code>
     * @return This builder for chaining.
     */
    public Builder clearEos() {
      bitField0_ = (bitField0_ & ~0x00000010);
      eos_ = false;
      onChanged();
      return this;
    }

    private long sequence_ ;
    /**
     * <pre>
     * RPC sequence number for the send channel.
     * Sever will check this number to see if some packet has lost.
     * </pre>
     *
     * <code>optional int64 sequence = 6;</code>
     * @return Whether the sequence field is set.
     */
    @java.lang.Override
    public boolean hasSequence() {
      return ((bitField0_ & 0x00000020) != 0);
    }
    /**
     * <pre>
     * RPC sequence number for the send channel.
     * Sever will check this number to see if some packet has lost.
     * </pre>
     *
     * <code>optional int64 sequence = 6;</code>
     * @return The sequence.
     */
    @java.lang.Override
    public long getSequence() {
      return sequence_;
    }
    /**
     * <pre>
     * RPC sequence number for the send channel.
     * Sever will check this number to see if some packet has lost.
     * </pre>
     *
     * <code>optional int64 sequence = 6;</code>
     * @param value The sequence to set.
     * @return This builder for chaining.
     */
    public Builder setSequence(long value) {
      bitField0_ |= 0x00000020;
      sequence_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * RPC sequence number for the send channel.
     * Sever will check this number to see if some packet has lost.
     * </pre>
     *
     * <code>optional int64 sequence = 6;</code>
     * @return This builder for chaining.
     */
    public Builder clearSequence() {
      bitField0_ = (bitField0_ & ~0x00000020);
      sequence_ = 0L;
      onChanged();
      return this;
    }

    private java.util.List<com.starrocks.proto.ChunkPB> chunks_ =
      java.util.Collections.emptyList();
    private void ensureChunksIsMutable() {
      if (!((bitField0_ & 0x00000040) != 0)) {
        chunks_ = new java.util.ArrayList<com.starrocks.proto.ChunkPB>(chunks_);
        bitField0_ |= 0x00000040;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.starrocks.proto.ChunkPB, com.starrocks.proto.ChunkPB.Builder, com.starrocks.proto.ChunkPBOrBuilder> chunksBuilder_;

    /**
     * <pre>
     * The protobuf data structure for column chunk.
     * </pre>
     *
     * <code>repeated .starrocks.ChunkPB chunks = 7;</code>
     */
    public java.util.List<com.starrocks.proto.ChunkPB> getChunksList() {
      if (chunksBuilder_ == null) {
        return java.util.Collections.unmodifiableList(chunks_);
      } else {
        return chunksBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     * The protobuf data structure for column chunk.
     * </pre>
     *
     * <code>repeated .starrocks.ChunkPB chunks = 7;</code>
     */
    public int getChunksCount() {
      if (chunksBuilder_ == null) {
        return chunks_.size();
      } else {
        return chunksBuilder_.getCount();
      }
    }
    /**
     * <pre>
     * The protobuf data structure for column chunk.
     * </pre>
     *
     * <code>repeated .starrocks.ChunkPB chunks = 7;</code>
     */
    public com.starrocks.proto.ChunkPB getChunks(int index) {
      if (chunksBuilder_ == null) {
        return chunks_.get(index);
      } else {
        return chunksBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     * The protobuf data structure for column chunk.
     * </pre>
     *
     * <code>repeated .starrocks.ChunkPB chunks = 7;</code>
     */
    public Builder setChunks(
        int index, com.starrocks.proto.ChunkPB value) {
      if (chunksBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureChunksIsMutable();
        chunks_.set(index, value);
        onChanged();
      } else {
        chunksBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * The protobuf data structure for column chunk.
     * </pre>
     *
     * <code>repeated .starrocks.ChunkPB chunks = 7;</code>
     */
    public Builder setChunks(
        int index, com.starrocks.proto.ChunkPB.Builder builderForValue) {
      if (chunksBuilder_ == null) {
        ensureChunksIsMutable();
        chunks_.set(index, builderForValue.build());
        onChanged();
      } else {
        chunksBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * The protobuf data structure for column chunk.
     * </pre>
     *
     * <code>repeated .starrocks.ChunkPB chunks = 7;</code>
     */
    public Builder addChunks(com.starrocks.proto.ChunkPB value) {
      if (chunksBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureChunksIsMutable();
        chunks_.add(value);
        onChanged();
      } else {
        chunksBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     * The protobuf data structure for column chunk.
     * </pre>
     *
     * <code>repeated .starrocks.ChunkPB chunks = 7;</code>
     */
    public Builder addChunks(
        int index, com.starrocks.proto.ChunkPB value) {
      if (chunksBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureChunksIsMutable();
        chunks_.add(index, value);
        onChanged();
      } else {
        chunksBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * The protobuf data structure for column chunk.
     * </pre>
     *
     * <code>repeated .starrocks.ChunkPB chunks = 7;</code>
     */
    public Builder addChunks(
        com.starrocks.proto.ChunkPB.Builder builderForValue) {
      if (chunksBuilder_ == null) {
        ensureChunksIsMutable();
        chunks_.add(builderForValue.build());
        onChanged();
      } else {
        chunksBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * The protobuf data structure for column chunk.
     * </pre>
     *
     * <code>repeated .starrocks.ChunkPB chunks = 7;</code>
     */
    public Builder addChunks(
        int index, com.starrocks.proto.ChunkPB.Builder builderForValue) {
      if (chunksBuilder_ == null) {
        ensureChunksIsMutable();
        chunks_.add(index, builderForValue.build());
        onChanged();
      } else {
        chunksBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * The protobuf data structure for column chunk.
     * </pre>
     *
     * <code>repeated .starrocks.ChunkPB chunks = 7;</code>
     */
    public Builder addAllChunks(
        java.lang.Iterable<? extends com.starrocks.proto.ChunkPB> values) {
      if (chunksBuilder_ == null) {
        ensureChunksIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, chunks_);
        onChanged();
      } else {
        chunksBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     * The protobuf data structure for column chunk.
     * </pre>
     *
     * <code>repeated .starrocks.ChunkPB chunks = 7;</code>
     */
    public Builder clearChunks() {
      if (chunksBuilder_ == null) {
        chunks_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000040);
        onChanged();
      } else {
        chunksBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * The protobuf data structure for column chunk.
     * </pre>
     *
     * <code>repeated .starrocks.ChunkPB chunks = 7;</code>
     */
    public Builder removeChunks(int index) {
      if (chunksBuilder_ == null) {
        ensureChunksIsMutable();
        chunks_.remove(index);
        onChanged();
      } else {
        chunksBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     * The protobuf data structure for column chunk.
     * </pre>
     *
     * <code>repeated .starrocks.ChunkPB chunks = 7;</code>
     */
    public com.starrocks.proto.ChunkPB.Builder getChunksBuilder(
        int index) {
      return getChunksFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     * The protobuf data structure for column chunk.
     * </pre>
     *
     * <code>repeated .starrocks.ChunkPB chunks = 7;</code>
     */
    public com.starrocks.proto.ChunkPBOrBuilder getChunksOrBuilder(
        int index) {
      if (chunksBuilder_ == null) {
        return chunks_.get(index);  } else {
        return chunksBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     * The protobuf data structure for column chunk.
     * </pre>
     *
     * <code>repeated .starrocks.ChunkPB chunks = 7;</code>
     */
    public java.util.List<? extends com.starrocks.proto.ChunkPBOrBuilder> 
         getChunksOrBuilderList() {
      if (chunksBuilder_ != null) {
        return chunksBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(chunks_);
      }
    }
    /**
     * <pre>
     * The protobuf data structure for column chunk.
     * </pre>
     *
     * <code>repeated .starrocks.ChunkPB chunks = 7;</code>
     */
    public com.starrocks.proto.ChunkPB.Builder addChunksBuilder() {
      return getChunksFieldBuilder().addBuilder(
          com.starrocks.proto.ChunkPB.getDefaultInstance());
    }
    /**
     * <pre>
     * The protobuf data structure for column chunk.
     * </pre>
     *
     * <code>repeated .starrocks.ChunkPB chunks = 7;</code>
     */
    public com.starrocks.proto.ChunkPB.Builder addChunksBuilder(
        int index) {
      return getChunksFieldBuilder().addBuilder(
          index, com.starrocks.proto.ChunkPB.getDefaultInstance());
    }
    /**
     * <pre>
     * The protobuf data structure for column chunk.
     * </pre>
     *
     * <code>repeated .starrocks.ChunkPB chunks = 7;</code>
     */
    public java.util.List<com.starrocks.proto.ChunkPB.Builder> 
         getChunksBuilderList() {
      return getChunksFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.starrocks.proto.ChunkPB, com.starrocks.proto.ChunkPB.Builder, com.starrocks.proto.ChunkPBOrBuilder> 
        getChunksFieldBuilder() {
      if (chunksBuilder_ == null) {
        chunksBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            com.starrocks.proto.ChunkPB, com.starrocks.proto.ChunkPB.Builder, com.starrocks.proto.ChunkPBOrBuilder>(
                chunks_,
                ((bitField0_ & 0x00000040) != 0),
                getParentForChildren(),
                isClean());
        chunks_ = null;
      }
      return chunksBuilder_;
    }

    private com.starrocks.proto.PQueryStatistics queryStatistics_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.starrocks.proto.PQueryStatistics, com.starrocks.proto.PQueryStatistics.Builder, com.starrocks.proto.PQueryStatisticsOrBuilder> queryStatisticsBuilder_;
    /**
     * <pre>
     * Some statistics for the runing query.
     * </pre>
     *
     * <code>optional .starrocks.PQueryStatistics query_statistics = 8;</code>
     * @return Whether the queryStatistics field is set.
     */
    public boolean hasQueryStatistics() {
      return ((bitField0_ & 0x00000080) != 0);
    }
    /**
     * <pre>
     * Some statistics for the runing query.
     * </pre>
     *
     * <code>optional .starrocks.PQueryStatistics query_statistics = 8;</code>
     * @return The queryStatistics.
     */
    public com.starrocks.proto.PQueryStatistics getQueryStatistics() {
      if (queryStatisticsBuilder_ == null) {
        return queryStatistics_ == null ? com.starrocks.proto.PQueryStatistics.getDefaultInstance() : queryStatistics_;
      } else {
        return queryStatisticsBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * Some statistics for the runing query.
     * </pre>
     *
     * <code>optional .starrocks.PQueryStatistics query_statistics = 8;</code>
     */
    public Builder setQueryStatistics(com.starrocks.proto.PQueryStatistics value) {
      if (queryStatisticsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        queryStatistics_ = value;
        onChanged();
      } else {
        queryStatisticsBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000080;
      return this;
    }
    /**
     * <pre>
     * Some statistics for the runing query.
     * </pre>
     *
     * <code>optional .starrocks.PQueryStatistics query_statistics = 8;</code>
     */
    public Builder setQueryStatistics(
        com.starrocks.proto.PQueryStatistics.Builder builderForValue) {
      if (queryStatisticsBuilder_ == null) {
        queryStatistics_ = builderForValue.build();
        onChanged();
      } else {
        queryStatisticsBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000080;
      return this;
    }
    /**
     * <pre>
     * Some statistics for the runing query.
     * </pre>
     *
     * <code>optional .starrocks.PQueryStatistics query_statistics = 8;</code>
     */
    public Builder mergeQueryStatistics(com.starrocks.proto.PQueryStatistics value) {
      if (queryStatisticsBuilder_ == null) {
        if (((bitField0_ & 0x00000080) != 0) &&
            queryStatistics_ != null &&
            queryStatistics_ != com.starrocks.proto.PQueryStatistics.getDefaultInstance()) {
          queryStatistics_ =
            com.starrocks.proto.PQueryStatistics.newBuilder(queryStatistics_).mergeFrom(value).buildPartial();
        } else {
          queryStatistics_ = value;
        }
        onChanged();
      } else {
        queryStatisticsBuilder_.mergeFrom(value);
      }
      bitField0_ |= 0x00000080;
      return this;
    }
    /**
     * <pre>
     * Some statistics for the runing query.
     * </pre>
     *
     * <code>optional .starrocks.PQueryStatistics query_statistics = 8;</code>
     */
    public Builder clearQueryStatistics() {
      if (queryStatisticsBuilder_ == null) {
        queryStatistics_ = null;
        onChanged();
      } else {
        queryStatisticsBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000080);
      return this;
    }
    /**
     * <pre>
     * Some statistics for the runing query.
     * </pre>
     *
     * <code>optional .starrocks.PQueryStatistics query_statistics = 8;</code>
     */
    public com.starrocks.proto.PQueryStatistics.Builder getQueryStatisticsBuilder() {
      bitField0_ |= 0x00000080;
      onChanged();
      return getQueryStatisticsFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Some statistics for the runing query.
     * </pre>
     *
     * <code>optional .starrocks.PQueryStatistics query_statistics = 8;</code>
     */
    public com.starrocks.proto.PQueryStatisticsOrBuilder getQueryStatisticsOrBuilder() {
      if (queryStatisticsBuilder_ != null) {
        return queryStatisticsBuilder_.getMessageOrBuilder();
      } else {
        return queryStatistics_ == null ?
            com.starrocks.proto.PQueryStatistics.getDefaultInstance() : queryStatistics_;
      }
    }
    /**
     * <pre>
     * Some statistics for the runing query.
     * </pre>
     *
     * <code>optional .starrocks.PQueryStatistics query_statistics = 8;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.starrocks.proto.PQueryStatistics, com.starrocks.proto.PQueryStatistics.Builder, com.starrocks.proto.PQueryStatisticsOrBuilder> 
        getQueryStatisticsFieldBuilder() {
      if (queryStatisticsBuilder_ == null) {
        queryStatisticsBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.starrocks.proto.PQueryStatistics, com.starrocks.proto.PQueryStatistics.Builder, com.starrocks.proto.PQueryStatisticsOrBuilder>(
                getQueryStatistics(),
                getParentForChildren(),
                isClean());
        queryStatistics_ = null;
      }
      return queryStatisticsBuilder_;
    }

    private boolean usePassThrough_ ;
    /**
     * <code>optional bool use_pass_through = 9 [default = false];</code>
     * @return Whether the usePassThrough field is set.
     */
    @java.lang.Override
    public boolean hasUsePassThrough() {
      return ((bitField0_ & 0x00000100) != 0);
    }
    /**
     * <code>optional bool use_pass_through = 9 [default = false];</code>
     * @return The usePassThrough.
     */
    @java.lang.Override
    public boolean getUsePassThrough() {
      return usePassThrough_;
    }
    /**
     * <code>optional bool use_pass_through = 9 [default = false];</code>
     * @param value The usePassThrough to set.
     * @return This builder for chaining.
     */
    public Builder setUsePassThrough(boolean value) {
      bitField0_ |= 0x00000100;
      usePassThrough_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>optional bool use_pass_through = 9 [default = false];</code>
     * @return This builder for chaining.
     */
    public Builder clearUsePassThrough() {
      bitField0_ = (bitField0_ & ~0x00000100);
      usePassThrough_ = false;
      onChanged();
      return this;
    }

    private boolean isPipelineLevelShuffle_ ;
    /**
     * <pre>
     * Whether enable pipeline level shuffle.
     * </pre>
     *
     * <code>optional bool is_pipeline_level_shuffle = 10 [default = false];</code>
     * @return Whether the isPipelineLevelShuffle field is set.
     */
    @java.lang.Override
    public boolean hasIsPipelineLevelShuffle() {
      return ((bitField0_ & 0x00000200) != 0);
    }
    /**
     * <pre>
     * Whether enable pipeline level shuffle.
     * </pre>
     *
     * <code>optional bool is_pipeline_level_shuffle = 10 [default = false];</code>
     * @return The isPipelineLevelShuffle.
     */
    @java.lang.Override
    public boolean getIsPipelineLevelShuffle() {
      return isPipelineLevelShuffle_;
    }
    /**
     * <pre>
     * Whether enable pipeline level shuffle.
     * </pre>
     *
     * <code>optional bool is_pipeline_level_shuffle = 10 [default = false];</code>
     * @param value The isPipelineLevelShuffle to set.
     * @return This builder for chaining.
     */
    public Builder setIsPipelineLevelShuffle(boolean value) {
      bitField0_ |= 0x00000200;
      isPipelineLevelShuffle_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Whether enable pipeline level shuffle.
     * </pre>
     *
     * <code>optional bool is_pipeline_level_shuffle = 10 [default = false];</code>
     * @return This builder for chaining.
     */
    public Builder clearIsPipelineLevelShuffle() {
      bitField0_ = (bitField0_ & ~0x00000200);
      isPipelineLevelShuffle_ = false;
      onChanged();
      return this;
    }

    private com.google.protobuf.Internal.IntList driverSequences_ = emptyIntList();
    private void ensureDriverSequencesIsMutable() {
      if (!((bitField0_ & 0x00000400) != 0)) {
        driverSequences_ = mutableCopy(driverSequences_);
        bitField0_ |= 0x00000400;
       }
    }
    /**
     * <pre>
     * Driver sequences of pipeline level shuffle.
     * </pre>
     *
     * <code>repeated int32 driver_sequences = 11;</code>
     * @return A list containing the driverSequences.
     */
    public java.util.List<java.lang.Integer>
        getDriverSequencesList() {
      return ((bitField0_ & 0x00000400) != 0) ?
               java.util.Collections.unmodifiableList(driverSequences_) : driverSequences_;
    }
    /**
     * <pre>
     * Driver sequences of pipeline level shuffle.
     * </pre>
     *
     * <code>repeated int32 driver_sequences = 11;</code>
     * @return The count of driverSequences.
     */
    public int getDriverSequencesCount() {
      return driverSequences_.size();
    }
    /**
     * <pre>
     * Driver sequences of pipeline level shuffle.
     * </pre>
     *
     * <code>repeated int32 driver_sequences = 11;</code>
     * @param index The index of the element to return.
     * @return The driverSequences at the given index.
     */
    public int getDriverSequences(int index) {
      return driverSequences_.getInt(index);
    }
    /**
     * <pre>
     * Driver sequences of pipeline level shuffle.
     * </pre>
     *
     * <code>repeated int32 driver_sequences = 11;</code>
     * @param index The index to set the value at.
     * @param value The driverSequences to set.
     * @return This builder for chaining.
     */
    public Builder setDriverSequences(
        int index, int value) {
      ensureDriverSequencesIsMutable();
      driverSequences_.setInt(index, value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Driver sequences of pipeline level shuffle.
     * </pre>
     *
     * <code>repeated int32 driver_sequences = 11;</code>
     * @param value The driverSequences to add.
     * @return This builder for chaining.
     */
    public Builder addDriverSequences(int value) {
      ensureDriverSequencesIsMutable();
      driverSequences_.addInt(value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Driver sequences of pipeline level shuffle.
     * </pre>
     *
     * <code>repeated int32 driver_sequences = 11;</code>
     * @param values The driverSequences to add.
     * @return This builder for chaining.
     */
    public Builder addAllDriverSequences(
        java.lang.Iterable<? extends java.lang.Integer> values) {
      ensureDriverSequencesIsMutable();
      com.google.protobuf.AbstractMessageLite.Builder.addAll(
          values, driverSequences_);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Driver sequences of pipeline level shuffle.
     * </pre>
     *
     * <code>repeated int32 driver_sequences = 11;</code>
     * @return This builder for chaining.
     */
    public Builder clearDriverSequences() {
      driverSequences_ = emptyIntList();
      bitField0_ = (bitField0_ & ~0x00000400);
      onChanged();
      return this;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:starrocks.PTransmitChunkParams)
  }

  // @@protoc_insertion_point(class_scope:starrocks.PTransmitChunkParams)
  private static final com.starrocks.proto.PTransmitChunkParams DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.starrocks.proto.PTransmitChunkParams();
  }

  public static com.starrocks.proto.PTransmitChunkParams getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  @java.lang.Deprecated public static final com.google.protobuf.Parser<PTransmitChunkParams>
      PARSER = new com.google.protobuf.AbstractParser<PTransmitChunkParams>() {
    @java.lang.Override
    public PTransmitChunkParams parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<PTransmitChunkParams> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<PTransmitChunkParams> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.starrocks.proto.PTransmitChunkParams getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

