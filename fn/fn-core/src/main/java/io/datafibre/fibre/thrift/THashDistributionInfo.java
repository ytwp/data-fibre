/**
 * Autogenerated by Thrift Compiler (0.19.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package io.datafibre.fibre.thrift;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked", "unused"})
@javax.annotation.Generated(value = "Autogenerated by Thrift Compiler (0.19.0)", date = "2024-02-22")
public class THashDistributionInfo implements org.apache.thrift.TBase<THashDistributionInfo, THashDistributionInfo._Fields>, java.io.Serializable, Cloneable, Comparable<THashDistributionInfo> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("THashDistributionInfo");

  private static final org.apache.thrift.protocol.TField BUCKET_NUM_FIELD_DESC = new org.apache.thrift.protocol.TField("bucket_num", org.apache.thrift.protocol.TType.I32, (short)1);
  private static final org.apache.thrift.protocol.TField DISTRIBUTION_COLUMNS_FIELD_DESC = new org.apache.thrift.protocol.TField("distribution_columns", org.apache.thrift.protocol.TType.LIST, (short)2);

  private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new THashDistributionInfoStandardSchemeFactory();
  private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new THashDistributionInfoTupleSchemeFactory();

  public int bucket_num; // optional
  public @org.apache.thrift.annotation.Nullable java.util.List<java.lang.String> distribution_columns; // optional

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    BUCKET_NUM((short)1, "bucket_num"),
    DISTRIBUTION_COLUMNS((short)2, "distribution_columns");

    private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

    static {
      for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    @org.apache.thrift.annotation.Nullable
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // BUCKET_NUM
          return BUCKET_NUM;
        case 2: // DISTRIBUTION_COLUMNS
          return DISTRIBUTION_COLUMNS;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    @org.apache.thrift.annotation.Nullable
    public static _Fields findByName(java.lang.String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final java.lang.String _fieldName;

    _Fields(short thriftId, java.lang.String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    @Override
    public short getThriftFieldId() {
      return _thriftId;
    }

    @Override
    public java.lang.String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __BUCKET_NUM_ISSET_ID = 0;
  private byte __isset_bitfield = 0;
  private static final _Fields optionals[] = {_Fields.BUCKET_NUM,_Fields.DISTRIBUTION_COLUMNS};
  public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.BUCKET_NUM, new org.apache.thrift.meta_data.FieldMetaData("bucket_num", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.DISTRIBUTION_COLUMNS, new org.apache.thrift.meta_data.FieldMetaData("distribution_columns", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.ListMetaData(org.apache.thrift.protocol.TType.LIST, 
            new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING))));
    metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(THashDistributionInfo.class, metaDataMap);
  }

  public THashDistributionInfo() {
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public THashDistributionInfo(THashDistributionInfo other) {
    __isset_bitfield = other.__isset_bitfield;
    this.bucket_num = other.bucket_num;
    if (other.isSetDistribution_columns()) {
      java.util.List<java.lang.String> __this__distribution_columns = new java.util.ArrayList<java.lang.String>(other.distribution_columns);
      this.distribution_columns = __this__distribution_columns;
    }
  }

  @Override
  public THashDistributionInfo deepCopy() {
    return new THashDistributionInfo(this);
  }

  @Override
  public void clear() {
    setBucket_numIsSet(false);
    this.bucket_num = 0;
    this.distribution_columns = null;
  }

  public int getBucket_num() {
    return this.bucket_num;
  }

  public THashDistributionInfo setBucket_num(int bucket_num) {
    this.bucket_num = bucket_num;
    setBucket_numIsSet(true);
    return this;
  }

  public void unsetBucket_num() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __BUCKET_NUM_ISSET_ID);
  }

  /** Returns true if field bucket_num is set (has been assigned a value) and false otherwise */
  public boolean isSetBucket_num() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __BUCKET_NUM_ISSET_ID);
  }

  public void setBucket_numIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __BUCKET_NUM_ISSET_ID, value);
  }

  public int getDistribution_columnsSize() {
    return (this.distribution_columns == null) ? 0 : this.distribution_columns.size();
  }

  @org.apache.thrift.annotation.Nullable
  public java.util.Iterator<java.lang.String> getDistribution_columnsIterator() {
    return (this.distribution_columns == null) ? null : this.distribution_columns.iterator();
  }

  public void addToDistribution_columns(java.lang.String elem) {
    if (this.distribution_columns == null) {
      this.distribution_columns = new java.util.ArrayList<java.lang.String>();
    }
    this.distribution_columns.add(elem);
  }

  @org.apache.thrift.annotation.Nullable
  public java.util.List<java.lang.String> getDistribution_columns() {
    return this.distribution_columns;
  }

  public THashDistributionInfo setDistribution_columns(@org.apache.thrift.annotation.Nullable java.util.List<java.lang.String> distribution_columns) {
    this.distribution_columns = distribution_columns;
    return this;
  }

  public void unsetDistribution_columns() {
    this.distribution_columns = null;
  }

  /** Returns true if field distribution_columns is set (has been assigned a value) and false otherwise */
  public boolean isSetDistribution_columns() {
    return this.distribution_columns != null;
  }

  public void setDistribution_columnsIsSet(boolean value) {
    if (!value) {
      this.distribution_columns = null;
    }
  }

  @Override
  public void setFieldValue(_Fields field, @org.apache.thrift.annotation.Nullable java.lang.Object value) {
    switch (field) {
    case BUCKET_NUM:
      if (value == null) {
        unsetBucket_num();
      } else {
        setBucket_num((java.lang.Integer)value);
      }
      break;

    case DISTRIBUTION_COLUMNS:
      if (value == null) {
        unsetDistribution_columns();
      } else {
        setDistribution_columns((java.util.List<java.lang.String>)value);
      }
      break;

    }
  }

  @org.apache.thrift.annotation.Nullable
  @Override
  public java.lang.Object getFieldValue(_Fields field) {
    switch (field) {
    case BUCKET_NUM:
      return getBucket_num();

    case DISTRIBUTION_COLUMNS:
      return getDistribution_columns();

    }
    throw new java.lang.IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  @Override
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new java.lang.IllegalArgumentException();
    }

    switch (field) {
    case BUCKET_NUM:
      return isSetBucket_num();
    case DISTRIBUTION_COLUMNS:
      return isSetDistribution_columns();
    }
    throw new java.lang.IllegalStateException();
  }

  @Override
  public boolean equals(java.lang.Object that) {
    if (that instanceof THashDistributionInfo)
      return this.equals((THashDistributionInfo)that);
    return false;
  }

  public boolean equals(THashDistributionInfo that) {
    if (that == null)
      return false;
    if (this == that)
      return true;

    boolean this_present_bucket_num = true && this.isSetBucket_num();
    boolean that_present_bucket_num = true && that.isSetBucket_num();
    if (this_present_bucket_num || that_present_bucket_num) {
      if (!(this_present_bucket_num && that_present_bucket_num))
        return false;
      if (this.bucket_num != that.bucket_num)
        return false;
    }

    boolean this_present_distribution_columns = true && this.isSetDistribution_columns();
    boolean that_present_distribution_columns = true && that.isSetDistribution_columns();
    if (this_present_distribution_columns || that_present_distribution_columns) {
      if (!(this_present_distribution_columns && that_present_distribution_columns))
        return false;
      if (!this.distribution_columns.equals(that.distribution_columns))
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    int hashCode = 1;

    hashCode = hashCode * 8191 + ((isSetBucket_num()) ? 131071 : 524287);
    if (isSetBucket_num())
      hashCode = hashCode * 8191 + bucket_num;

    hashCode = hashCode * 8191 + ((isSetDistribution_columns()) ? 131071 : 524287);
    if (isSetDistribution_columns())
      hashCode = hashCode * 8191 + distribution_columns.hashCode();

    return hashCode;
  }

  @Override
  public int compareTo(THashDistributionInfo other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = java.lang.Boolean.compare(isSetBucket_num(), other.isSetBucket_num());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetBucket_num()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.bucket_num, other.bucket_num);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetDistribution_columns(), other.isSetDistribution_columns());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetDistribution_columns()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.distribution_columns, other.distribution_columns);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  @org.apache.thrift.annotation.Nullable
  @Override
  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  @Override
  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    scheme(iprot).read(iprot, this);
  }

  @Override
  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    scheme(oprot).write(oprot, this);
  }

  @Override
  public java.lang.String toString() {
    java.lang.StringBuilder sb = new java.lang.StringBuilder("THashDistributionInfo(");
    boolean first = true;

    if (isSetBucket_num()) {
      sb.append("bucket_num:");
      sb.append(this.bucket_num);
      first = false;
    }
    if (isSetDistribution_columns()) {
      if (!first) sb.append(", ");
      sb.append("distribution_columns:");
      if (this.distribution_columns == null) {
        sb.append("null");
      } else {
        sb.append(this.distribution_columns);
      }
      first = false;
    }
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // check for sub-struct validity
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bitfield = 0;
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class THashDistributionInfoStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    @Override
    public THashDistributionInfoStandardScheme getScheme() {
      return new THashDistributionInfoStandardScheme();
    }
  }

  private static class THashDistributionInfoStandardScheme extends org.apache.thrift.scheme.StandardScheme<THashDistributionInfo> {

    @Override
    public void read(org.apache.thrift.protocol.TProtocol iprot, THashDistributionInfo struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // BUCKET_NUM
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.bucket_num = iprot.readI32();
              struct.setBucket_numIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // DISTRIBUTION_COLUMNS
            if (schemeField.type == org.apache.thrift.protocol.TType.LIST) {
              {
                org.apache.thrift.protocol.TList _list484 = iprot.readListBegin();
                struct.distribution_columns = new java.util.ArrayList<java.lang.String>(_list484.size);
                @org.apache.thrift.annotation.Nullable java.lang.String _elem485;
                for (int _i486 = 0; _i486 < _list484.size; ++_i486)
                {
                  _elem485 = iprot.readString();
                  struct.distribution_columns.add(_elem485);
                }
                iprot.readListEnd();
              }
              struct.setDistribution_columnsIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    @Override
    public void write(org.apache.thrift.protocol.TProtocol oprot, THashDistributionInfo struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      if (struct.isSetBucket_num()) {
        oprot.writeFieldBegin(BUCKET_NUM_FIELD_DESC);
        oprot.writeI32(struct.bucket_num);
        oprot.writeFieldEnd();
      }
      if (struct.distribution_columns != null) {
        if (struct.isSetDistribution_columns()) {
          oprot.writeFieldBegin(DISTRIBUTION_COLUMNS_FIELD_DESC);
          {
            oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRING, struct.distribution_columns.size()));
            for (java.lang.String _iter487 : struct.distribution_columns)
            {
              oprot.writeString(_iter487);
            }
            oprot.writeListEnd();
          }
          oprot.writeFieldEnd();
        }
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class THashDistributionInfoTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    @Override
    public THashDistributionInfoTupleScheme getScheme() {
      return new THashDistributionInfoTupleScheme();
    }
  }

  private static class THashDistributionInfoTupleScheme extends org.apache.thrift.scheme.TupleScheme<THashDistributionInfo> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, THashDistributionInfo struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      java.util.BitSet optionals = new java.util.BitSet();
      if (struct.isSetBucket_num()) {
        optionals.set(0);
      }
      if (struct.isSetDistribution_columns()) {
        optionals.set(1);
      }
      oprot.writeBitSet(optionals, 2);
      if (struct.isSetBucket_num()) {
        oprot.writeI32(struct.bucket_num);
      }
      if (struct.isSetDistribution_columns()) {
        {
          oprot.writeI32(struct.distribution_columns.size());
          for (java.lang.String _iter488 : struct.distribution_columns)
          {
            oprot.writeString(_iter488);
          }
        }
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, THashDistributionInfo struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      java.util.BitSet incoming = iprot.readBitSet(2);
      if (incoming.get(0)) {
        struct.bucket_num = iprot.readI32();
        struct.setBucket_numIsSet(true);
      }
      if (incoming.get(1)) {
        {
          org.apache.thrift.protocol.TList _list489 = iprot.readListBegin(org.apache.thrift.protocol.TType.STRING);
          struct.distribution_columns = new java.util.ArrayList<java.lang.String>(_list489.size);
          @org.apache.thrift.annotation.Nullable java.lang.String _elem490;
          for (int _i491 = 0; _i491 < _list489.size; ++_i491)
          {
            _elem490 = iprot.readString();
            struct.distribution_columns.add(_elem490);
          }
        }
        struct.setDistribution_columnsIsSet(true);
      }
    }
  }

  private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
    return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
  }
}

