// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: binlog.proto

package io.datafibre.fibre.proto;

public interface PageHeaderPBOrBuilder extends
    // @@protoc_insertion_point(interface_extends:starrocks.PageHeaderPB)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * type of page
   * </pre>
   *
   * <code>optional .starrocks.PageType page_type = 1;</code>
   * @return Whether the pageType field is set.
   */
  boolean hasPageType();
  /**
   * <pre>
   * type of page
   * </pre>
   *
   * <code>optional .starrocks.PageType page_type = 1;</code>
   * @return The pageType.
   */
  io.datafibre.fibre.proto.PageType getPageType();

  /**
   * <pre>
   * compress type
   * </pre>
   *
   * <code>optional .starrocks.CompressionTypePB compress_type = 2;</code>
   * @return Whether the compressType field is set.
   */
  boolean hasCompressType();
  /**
   * <pre>
   * compress type
   * </pre>
   *
   * <code>optional .starrocks.CompressionTypePB compress_type = 2;</code>
   * @return The compressType.
   */
  io.datafibre.fibre.proto.CompressionTypePB getCompressType();

  /**
   * <pre>
   * size of uncompressed page
   * </pre>
   *
   * <code>optional int32 uncompressed_size = 3;</code>
   * @return Whether the uncompressedSize field is set.
   */
  boolean hasUncompressedSize();
  /**
   * <pre>
   * size of uncompressed page
   * </pre>
   *
   * <code>optional int32 uncompressed_size = 3;</code>
   * @return The uncompressedSize.
   */
  int getUncompressedSize();

  /**
   * <pre>
   * size of compressed page
   * </pre>
   *
   * <code>optional int32 compressed_size = 4;</code>
   * @return Whether the compressedSize field is set.
   */
  boolean hasCompressedSize();
  /**
   * <pre>
   * size of compressed page
   * </pre>
   *
   * <code>optional int32 compressed_size = 4;</code>
   * @return The compressedSize.
   */
  int getCompressedSize();

  /**
   * <pre>
   * crc for compressed page
   * </pre>
   *
   * <code>optional int32 compressed_page_crc = 5;</code>
   * @return Whether the compressedPageCrc field is set.
   */
  boolean hasCompressedPageCrc();
  /**
   * <pre>
   * crc for compressed page
   * </pre>
   *
   * <code>optional int32 compressed_page_crc = 5;</code>
   * @return The compressedPageCrc.
   */
  int getCompressedPageCrc();

  /**
   * <pre>
   * the version of change events in the page
   * </pre>
   *
   * <code>optional int64 version = 6;</code>
   * @return Whether the version field is set.
   */
  boolean hasVersion();
  /**
   * <pre>
   * the version of change events in the page
   * </pre>
   *
   * <code>optional int64 version = 6;</code>
   * @return The version.
   */
  long getVersion();

  /**
   * <pre>
   * number of log entries
   * </pre>
   *
   * <code>optional int32 num_log_entries = 7;</code>
   * @return Whether the numLogEntries field is set.
   */
  boolean hasNumLogEntries();
  /**
   * <pre>
   * number of log entries
   * </pre>
   *
   * <code>optional int32 num_log_entries = 7;</code>
   * @return The numLogEntries.
   */
  int getNumLogEntries();

  /**
   * <pre>
   * sequence number of the first change event in the page
   * </pre>
   *
   * <code>optional int64 start_seq_id = 8;</code>
   * @return Whether the startSeqId field is set.
   */
  boolean hasStartSeqId();
  /**
   * <pre>
   * sequence number of the first change event in the page
   * </pre>
   *
   * <code>optional int64 start_seq_id = 8;</code>
   * @return The startSeqId.
   */
  long getStartSeqId();

  /**
   * <pre>
   * sequence number of the last change event in the page
   * </pre>
   *
   * <code>optional int64 end_seq_id = 9;</code>
   * @return Whether the endSeqId field is set.
   */
  boolean hasEndSeqId();
  /**
   * <pre>
   * sequence number of the last change event in the page
   * </pre>
   *
   * <code>optional int64 end_seq_id = 9;</code>
   * @return The endSeqId.
   */
  long getEndSeqId();

  /**
   * <pre>
   * timestamp of change events in the page. Currently events
   * in a version have the same timestamp
   * </pre>
   *
   * <code>optional int64 timestamp_in_us = 10;</code>
   * @return Whether the timestampInUs field is set.
   */
  boolean hasTimestampInUs();
  /**
   * <pre>
   * timestamp of change events in the page. Currently events
   * in a version have the same timestamp
   * </pre>
   *
   * <code>optional int64 timestamp_in_us = 10;</code>
   * @return The timestampInUs.
   */
  long getTimestampInUs();

  /**
   * <pre>
   * whether this is the last page of the version
   * </pre>
   *
   * <code>optional bool end_of_version = 11;</code>
   * @return Whether the endOfVersion field is set.
   */
  boolean hasEndOfVersion();
  /**
   * <pre>
   * whether this is the last page of the version
   * </pre>
   *
   * <code>optional bool end_of_version = 11;</code>
   * @return The endOfVersion.
   */
  boolean getEndOfVersion();

  /**
   * <pre>
   * rowsets that this page uses
   * </pre>
   *
   * <code>repeated int64 rowsets = 12;</code>
   * @return A list containing the rowsets.
   */
  java.util.List<java.lang.Long> getRowsetsList();
  /**
   * <pre>
   * rowsets that this page uses
   * </pre>
   *
   * <code>repeated int64 rowsets = 12;</code>
   * @return The count of rowsets.
   */
  int getRowsetsCount();
  /**
   * <pre>
   * rowsets that this page uses
   * </pre>
   *
   * <code>repeated int64 rowsets = 12;</code>
   * @param index The index of the element to return.
   * @return The rowsets at the given index.
   */
  long getRowsets(int index);
}
