// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: snapshot.proto

package io.datafibre.fibre.proto;

public interface SnapshotMetaFooterPBOrBuilder extends
    // @@protoc_insertion_point(interface_extends:starrocks.SnapshotMetaFooterPB)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * See gensrc/thrift/types.thrift
   * </pre>
   *
   * <code>optional int32 format_version = 1;</code>
   * @return Whether the formatVersion field is set.
   */
  boolean hasFormatVersion();
  /**
   * <pre>
   * See gensrc/thrift/types.thrift
   * </pre>
   *
   * <code>optional int32 format_version = 1;</code>
   * @return The formatVersion.
   */
  int getFormatVersion();

  /**
   * <code>optional .starrocks.SnapshotTypePB snapshot_type = 2;</code>
   * @return Whether the snapshotType field is set.
   */
  boolean hasSnapshotType();
  /**
   * <code>optional .starrocks.SnapshotTypePB snapshot_type = 2;</code>
   * @return The snapshotType.
   */
  io.datafibre.fibre.proto.SnapshotTypePB getSnapshotType();

  /**
   * <code>optional int64 snapshot_version = 3;</code>
   * @return Whether the snapshotVersion field is set.
   */
  boolean hasSnapshotVersion();
  /**
   * <code>optional int64 snapshot_version = 3;</code>
   * @return The snapshotVersion.
   */
  long getSnapshotVersion();

  /**
   * <code>repeated int64 rowset_meta_offsets = 4;</code>
   * @return A list containing the rowsetMetaOffsets.
   */
  java.util.List<java.lang.Long> getRowsetMetaOffsetsList();
  /**
   * <code>repeated int64 rowset_meta_offsets = 4;</code>
   * @return The count of rowsetMetaOffsets.
   */
  int getRowsetMetaOffsetsCount();
  /**
   * <code>repeated int64 rowset_meta_offsets = 4;</code>
   * @param index The index of the element to return.
   * @return The rowsetMetaOffsets at the given index.
   */
  long getRowsetMetaOffsets(int index);

  /**
   * <pre>
   * delvec_segids[i] is the segment id of the i'th delete vector.
   * </pre>
   *
   * <code>repeated int64 delvec_segids = 5;</code>
   * @return A list containing the delvecSegids.
   */
  java.util.List<java.lang.Long> getDelvecSegidsList();
  /**
   * <pre>
   * delvec_segids[i] is the segment id of the i'th delete vector.
   * </pre>
   *
   * <code>repeated int64 delvec_segids = 5;</code>
   * @return The count of delvecSegids.
   */
  int getDelvecSegidsCount();
  /**
   * <pre>
   * delvec_segids[i] is the segment id of the i'th delete vector.
   * </pre>
   *
   * <code>repeated int64 delvec_segids = 5;</code>
   * @param index The index of the element to return.
   * @return The delvecSegids at the given index.
   */
  long getDelvecSegids(int index);

  /**
   * <pre>
   * delvec_offsets[i] is the file offset of the i'th delete vector.
   * </pre>
   *
   * <code>repeated int64 delvec_offsets = 6;</code>
   * @return A list containing the delvecOffsets.
   */
  java.util.List<java.lang.Long> getDelvecOffsetsList();
  /**
   * <pre>
   * delvec_offsets[i] is the file offset of the i'th delete vector.
   * </pre>
   *
   * <code>repeated int64 delvec_offsets = 6;</code>
   * @return The count of delvecOffsets.
   */
  int getDelvecOffsetsCount();
  /**
   * <pre>
   * delvec_offsets[i] is the file offset of the i'th delete vector.
   * </pre>
   *
   * <code>repeated int64 delvec_offsets = 6;</code>
   * @param index The index of the element to return.
   * @return The delvecOffsets at the given index.
   */
  long getDelvecOffsets(int index);

  /**
   * <pre>
   * delvec_versions[i] is the version of i'th delete vector.
   * </pre>
   *
   * <code>repeated int64 delvec_versions = 7;</code>
   * @return A list containing the delvecVersions.
   */
  java.util.List<java.lang.Long> getDelvecVersionsList();
  /**
   * <pre>
   * delvec_versions[i] is the version of i'th delete vector.
   * </pre>
   *
   * <code>repeated int64 delvec_versions = 7;</code>
   * @return The count of delvecVersions.
   */
  int getDelvecVersionsCount();
  /**
   * <pre>
   * delvec_versions[i] is the version of i'th delete vector.
   * </pre>
   *
   * <code>repeated int64 delvec_versions = 7;</code>
   * @param index The index of the element to return.
   * @return The delvecVersions at the given index.
   */
  long getDelvecVersions(int index);

  /**
   * <code>optional int64 tablet_meta_offset = 8;</code>
   * @return Whether the tabletMetaOffset field is set.
   */
  boolean hasTabletMetaOffset();
  /**
   * <code>optional int64 tablet_meta_offset = 8;</code>
   * @return The tabletMetaOffset.
   */
  long getTabletMetaOffset();

  /**
   * <pre>
   * 'dcg' means Delta Column Group
   * dcg_segids[i] is the segment id of the i'th delta column group list
   * </pre>
   *
   * <code>repeated int64 dcg_segids = 9;</code>
   * @return A list containing the dcgSegids.
   */
  java.util.List<java.lang.Long> getDcgSegidsList();
  /**
   * <pre>
   * 'dcg' means Delta Column Group
   * dcg_segids[i] is the segment id of the i'th delta column group list
   * </pre>
   *
   * <code>repeated int64 dcg_segids = 9;</code>
   * @return The count of dcgSegids.
   */
  int getDcgSegidsCount();
  /**
   * <pre>
   * 'dcg' means Delta Column Group
   * dcg_segids[i] is the segment id of the i'th delta column group list
   * </pre>
   *
   * <code>repeated int64 dcg_segids = 9;</code>
   * @param index The index of the element to return.
   * @return The dcgSegids at the given index.
   */
  long getDcgSegids(int index);

  /**
   * <pre>
   * dcg_offsets[i] is the file offset of the i'th delta column group list.
   * </pre>
   *
   * <code>repeated int64 dcg_offsets = 10;</code>
   * @return A list containing the dcgOffsets.
   */
  java.util.List<java.lang.Long> getDcgOffsetsList();
  /**
   * <pre>
   * dcg_offsets[i] is the file offset of the i'th delta column group list.
   * </pre>
   *
   * <code>repeated int64 dcg_offsets = 10;</code>
   * @return The count of dcgOffsets.
   */
  int getDcgOffsetsCount();
  /**
   * <pre>
   * dcg_offsets[i] is the file offset of the i'th delta column group list.
   * </pre>
   *
   * <code>repeated int64 dcg_offsets = 10;</code>
   * @param index The index of the element to return.
   * @return The dcgOffsets at the given index.
   */
  long getDcgOffsets(int index);
}
