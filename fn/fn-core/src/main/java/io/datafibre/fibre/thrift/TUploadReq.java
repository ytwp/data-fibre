/**
 * Autogenerated by Thrift Compiler (0.19.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.starrocks.thrift;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked", "unused"})
@javax.annotation.Generated(value = "Autogenerated by Thrift Compiler (0.19.0)", date = "2024-02-22")
public class TUploadReq implements org.apache.thrift.TBase<TUploadReq, TUploadReq._Fields>, java.io.Serializable, Cloneable, Comparable<TUploadReq> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("TUploadReq");

  private static final org.apache.thrift.protocol.TField JOB_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("job_id", org.apache.thrift.protocol.TType.I64, (short)1);
  private static final org.apache.thrift.protocol.TField SRC_DEST_MAP_FIELD_DESC = new org.apache.thrift.protocol.TField("src_dest_map", org.apache.thrift.protocol.TType.MAP, (short)2);
  private static final org.apache.thrift.protocol.TField BROKER_ADDR_FIELD_DESC = new org.apache.thrift.protocol.TField("broker_addr", org.apache.thrift.protocol.TType.STRUCT, (short)3);
  private static final org.apache.thrift.protocol.TField BROKER_PROP_FIELD_DESC = new org.apache.thrift.protocol.TField("broker_prop", org.apache.thrift.protocol.TType.MAP, (short)4);
  private static final org.apache.thrift.protocol.TField USE_BROKER_FIELD_DESC = new org.apache.thrift.protocol.TField("use_broker", org.apache.thrift.protocol.TType.BOOL, (short)5);
  private static final org.apache.thrift.protocol.TField HDFS_WRITE_BUFFER_SIZE_KB_FIELD_DESC = new org.apache.thrift.protocol.TField("hdfs_write_buffer_size_kb", org.apache.thrift.protocol.TType.I32, (short)6);
  private static final org.apache.thrift.protocol.TField HDFS_PROPERTIES_FIELD_DESC = new org.apache.thrift.protocol.TField("hdfs_properties", org.apache.thrift.protocol.TType.STRUCT, (short)7);

  private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new TUploadReqStandardSchemeFactory();
  private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new TUploadReqTupleSchemeFactory();

  public long job_id; // required
  public @org.apache.thrift.annotation.Nullable java.util.Map<java.lang.String,java.lang.String> src_dest_map; // required
  public @org.apache.thrift.annotation.Nullable com.starrocks.thrift.TNetworkAddress broker_addr; // required
  public @org.apache.thrift.annotation.Nullable java.util.Map<java.lang.String,java.lang.String> broker_prop; // optional
  public boolean use_broker; // optional
  public int hdfs_write_buffer_size_kb; // optional
  public @org.apache.thrift.annotation.Nullable com.starrocks.thrift.THdfsProperties hdfs_properties; // optional

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    JOB_ID((short)1, "job_id"),
    SRC_DEST_MAP((short)2, "src_dest_map"),
    BROKER_ADDR((short)3, "broker_addr"),
    BROKER_PROP((short)4, "broker_prop"),
    USE_BROKER((short)5, "use_broker"),
    HDFS_WRITE_BUFFER_SIZE_KB((short)6, "hdfs_write_buffer_size_kb"),
    HDFS_PROPERTIES((short)7, "hdfs_properties");

    private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

    static {
      for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    @org.apache.thrift.annotation.Nullable
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // JOB_ID
          return JOB_ID;
        case 2: // SRC_DEST_MAP
          return SRC_DEST_MAP;
        case 3: // BROKER_ADDR
          return BROKER_ADDR;
        case 4: // BROKER_PROP
          return BROKER_PROP;
        case 5: // USE_BROKER
          return USE_BROKER;
        case 6: // HDFS_WRITE_BUFFER_SIZE_KB
          return HDFS_WRITE_BUFFER_SIZE_KB;
        case 7: // HDFS_PROPERTIES
          return HDFS_PROPERTIES;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    @org.apache.thrift.annotation.Nullable
    public static _Fields findByName(java.lang.String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final java.lang.String _fieldName;

    _Fields(short thriftId, java.lang.String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    @Override
    public short getThriftFieldId() {
      return _thriftId;
    }

    @Override
    public java.lang.String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __JOB_ID_ISSET_ID = 0;
  private static final int __USE_BROKER_ISSET_ID = 1;
  private static final int __HDFS_WRITE_BUFFER_SIZE_KB_ISSET_ID = 2;
  private byte __isset_bitfield = 0;
  private static final _Fields optionals[] = {_Fields.BROKER_PROP,_Fields.USE_BROKER,_Fields.HDFS_WRITE_BUFFER_SIZE_KB,_Fields.HDFS_PROPERTIES};
  public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.JOB_ID, new org.apache.thrift.meta_data.FieldMetaData("job_id", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.SRC_DEST_MAP, new org.apache.thrift.meta_data.FieldMetaData("src_dest_map", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.MapMetaData(org.apache.thrift.protocol.TType.MAP, 
            new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING), 
            new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING))));
    tmpMap.put(_Fields.BROKER_ADDR, new org.apache.thrift.meta_data.FieldMetaData("broker_addr", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, com.starrocks.thrift.TNetworkAddress.class)));
    tmpMap.put(_Fields.BROKER_PROP, new org.apache.thrift.meta_data.FieldMetaData("broker_prop", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.MapMetaData(org.apache.thrift.protocol.TType.MAP, 
            new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING), 
            new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING))));
    tmpMap.put(_Fields.USE_BROKER, new org.apache.thrift.meta_data.FieldMetaData("use_broker", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.BOOL)));
    tmpMap.put(_Fields.HDFS_WRITE_BUFFER_SIZE_KB, new org.apache.thrift.meta_data.FieldMetaData("hdfs_write_buffer_size_kb", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.HDFS_PROPERTIES, new org.apache.thrift.meta_data.FieldMetaData("hdfs_properties", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, com.starrocks.thrift.THdfsProperties.class)));
    metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(TUploadReq.class, metaDataMap);
  }

  public TUploadReq() {
    this.hdfs_write_buffer_size_kb = 0;

  }

  public TUploadReq(
    long job_id,
    java.util.Map<java.lang.String,java.lang.String> src_dest_map,
    com.starrocks.thrift.TNetworkAddress broker_addr)
  {
    this();
    this.job_id = job_id;
    setJob_idIsSet(true);
    this.src_dest_map = src_dest_map;
    this.broker_addr = broker_addr;
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public TUploadReq(TUploadReq other) {
    __isset_bitfield = other.__isset_bitfield;
    this.job_id = other.job_id;
    if (other.isSetSrc_dest_map()) {
      java.util.Map<java.lang.String,java.lang.String> __this__src_dest_map = new java.util.HashMap<java.lang.String,java.lang.String>(other.src_dest_map);
      this.src_dest_map = __this__src_dest_map;
    }
    if (other.isSetBroker_addr()) {
      this.broker_addr = new com.starrocks.thrift.TNetworkAddress(other.broker_addr);
    }
    if (other.isSetBroker_prop()) {
      java.util.Map<java.lang.String,java.lang.String> __this__broker_prop = new java.util.HashMap<java.lang.String,java.lang.String>(other.broker_prop);
      this.broker_prop = __this__broker_prop;
    }
    this.use_broker = other.use_broker;
    this.hdfs_write_buffer_size_kb = other.hdfs_write_buffer_size_kb;
    if (other.isSetHdfs_properties()) {
      this.hdfs_properties = new com.starrocks.thrift.THdfsProperties(other.hdfs_properties);
    }
  }

  @Override
  public TUploadReq deepCopy() {
    return new TUploadReq(this);
  }

  @Override
  public void clear() {
    setJob_idIsSet(false);
    this.job_id = 0;
    this.src_dest_map = null;
    this.broker_addr = null;
    this.broker_prop = null;
    setUse_brokerIsSet(false);
    this.use_broker = false;
    this.hdfs_write_buffer_size_kb = 0;

    this.hdfs_properties = null;
  }

  public long getJob_id() {
    return this.job_id;
  }

  public TUploadReq setJob_id(long job_id) {
    this.job_id = job_id;
    setJob_idIsSet(true);
    return this;
  }

  public void unsetJob_id() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __JOB_ID_ISSET_ID);
  }

  /** Returns true if field job_id is set (has been assigned a value) and false otherwise */
  public boolean isSetJob_id() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __JOB_ID_ISSET_ID);
  }

  public void setJob_idIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __JOB_ID_ISSET_ID, value);
  }

  public int getSrc_dest_mapSize() {
    return (this.src_dest_map == null) ? 0 : this.src_dest_map.size();
  }

  public void putToSrc_dest_map(java.lang.String key, java.lang.String val) {
    if (this.src_dest_map == null) {
      this.src_dest_map = new java.util.HashMap<java.lang.String,java.lang.String>();
    }
    this.src_dest_map.put(key, val);
  }

  @org.apache.thrift.annotation.Nullable
  public java.util.Map<java.lang.String,java.lang.String> getSrc_dest_map() {
    return this.src_dest_map;
  }

  public TUploadReq setSrc_dest_map(@org.apache.thrift.annotation.Nullable java.util.Map<java.lang.String,java.lang.String> src_dest_map) {
    this.src_dest_map = src_dest_map;
    return this;
  }

  public void unsetSrc_dest_map() {
    this.src_dest_map = null;
  }

  /** Returns true if field src_dest_map is set (has been assigned a value) and false otherwise */
  public boolean isSetSrc_dest_map() {
    return this.src_dest_map != null;
  }

  public void setSrc_dest_mapIsSet(boolean value) {
    if (!value) {
      this.src_dest_map = null;
    }
  }

  @org.apache.thrift.annotation.Nullable
  public com.starrocks.thrift.TNetworkAddress getBroker_addr() {
    return this.broker_addr;
  }

  public TUploadReq setBroker_addr(@org.apache.thrift.annotation.Nullable com.starrocks.thrift.TNetworkAddress broker_addr) {
    this.broker_addr = broker_addr;
    return this;
  }

  public void unsetBroker_addr() {
    this.broker_addr = null;
  }

  /** Returns true if field broker_addr is set (has been assigned a value) and false otherwise */
  public boolean isSetBroker_addr() {
    return this.broker_addr != null;
  }

  public void setBroker_addrIsSet(boolean value) {
    if (!value) {
      this.broker_addr = null;
    }
  }

  public int getBroker_propSize() {
    return (this.broker_prop == null) ? 0 : this.broker_prop.size();
  }

  public void putToBroker_prop(java.lang.String key, java.lang.String val) {
    if (this.broker_prop == null) {
      this.broker_prop = new java.util.HashMap<java.lang.String,java.lang.String>();
    }
    this.broker_prop.put(key, val);
  }

  @org.apache.thrift.annotation.Nullable
  public java.util.Map<java.lang.String,java.lang.String> getBroker_prop() {
    return this.broker_prop;
  }

  public TUploadReq setBroker_prop(@org.apache.thrift.annotation.Nullable java.util.Map<java.lang.String,java.lang.String> broker_prop) {
    this.broker_prop = broker_prop;
    return this;
  }

  public void unsetBroker_prop() {
    this.broker_prop = null;
  }

  /** Returns true if field broker_prop is set (has been assigned a value) and false otherwise */
  public boolean isSetBroker_prop() {
    return this.broker_prop != null;
  }

  public void setBroker_propIsSet(boolean value) {
    if (!value) {
      this.broker_prop = null;
    }
  }

  public boolean isUse_broker() {
    return this.use_broker;
  }

  public TUploadReq setUse_broker(boolean use_broker) {
    this.use_broker = use_broker;
    setUse_brokerIsSet(true);
    return this;
  }

  public void unsetUse_broker() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __USE_BROKER_ISSET_ID);
  }

  /** Returns true if field use_broker is set (has been assigned a value) and false otherwise */
  public boolean isSetUse_broker() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __USE_BROKER_ISSET_ID);
  }

  public void setUse_brokerIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __USE_BROKER_ISSET_ID, value);
  }

  public int getHdfs_write_buffer_size_kb() {
    return this.hdfs_write_buffer_size_kb;
  }

  public TUploadReq setHdfs_write_buffer_size_kb(int hdfs_write_buffer_size_kb) {
    this.hdfs_write_buffer_size_kb = hdfs_write_buffer_size_kb;
    setHdfs_write_buffer_size_kbIsSet(true);
    return this;
  }

  public void unsetHdfs_write_buffer_size_kb() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __HDFS_WRITE_BUFFER_SIZE_KB_ISSET_ID);
  }

  /** Returns true if field hdfs_write_buffer_size_kb is set (has been assigned a value) and false otherwise */
  public boolean isSetHdfs_write_buffer_size_kb() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __HDFS_WRITE_BUFFER_SIZE_KB_ISSET_ID);
  }

  public void setHdfs_write_buffer_size_kbIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __HDFS_WRITE_BUFFER_SIZE_KB_ISSET_ID, value);
  }

  @org.apache.thrift.annotation.Nullable
  public com.starrocks.thrift.THdfsProperties getHdfs_properties() {
    return this.hdfs_properties;
  }

  public TUploadReq setHdfs_properties(@org.apache.thrift.annotation.Nullable com.starrocks.thrift.THdfsProperties hdfs_properties) {
    this.hdfs_properties = hdfs_properties;
    return this;
  }

  public void unsetHdfs_properties() {
    this.hdfs_properties = null;
  }

  /** Returns true if field hdfs_properties is set (has been assigned a value) and false otherwise */
  public boolean isSetHdfs_properties() {
    return this.hdfs_properties != null;
  }

  public void setHdfs_propertiesIsSet(boolean value) {
    if (!value) {
      this.hdfs_properties = null;
    }
  }

  @Override
  public void setFieldValue(_Fields field, @org.apache.thrift.annotation.Nullable java.lang.Object value) {
    switch (field) {
    case JOB_ID:
      if (value == null) {
        unsetJob_id();
      } else {
        setJob_id((java.lang.Long)value);
      }
      break;

    case SRC_DEST_MAP:
      if (value == null) {
        unsetSrc_dest_map();
      } else {
        setSrc_dest_map((java.util.Map<java.lang.String,java.lang.String>)value);
      }
      break;

    case BROKER_ADDR:
      if (value == null) {
        unsetBroker_addr();
      } else {
        setBroker_addr((com.starrocks.thrift.TNetworkAddress)value);
      }
      break;

    case BROKER_PROP:
      if (value == null) {
        unsetBroker_prop();
      } else {
        setBroker_prop((java.util.Map<java.lang.String,java.lang.String>)value);
      }
      break;

    case USE_BROKER:
      if (value == null) {
        unsetUse_broker();
      } else {
        setUse_broker((java.lang.Boolean)value);
      }
      break;

    case HDFS_WRITE_BUFFER_SIZE_KB:
      if (value == null) {
        unsetHdfs_write_buffer_size_kb();
      } else {
        setHdfs_write_buffer_size_kb((java.lang.Integer)value);
      }
      break;

    case HDFS_PROPERTIES:
      if (value == null) {
        unsetHdfs_properties();
      } else {
        setHdfs_properties((com.starrocks.thrift.THdfsProperties)value);
      }
      break;

    }
  }

  @org.apache.thrift.annotation.Nullable
  @Override
  public java.lang.Object getFieldValue(_Fields field) {
    switch (field) {
    case JOB_ID:
      return getJob_id();

    case SRC_DEST_MAP:
      return getSrc_dest_map();

    case BROKER_ADDR:
      return getBroker_addr();

    case BROKER_PROP:
      return getBroker_prop();

    case USE_BROKER:
      return isUse_broker();

    case HDFS_WRITE_BUFFER_SIZE_KB:
      return getHdfs_write_buffer_size_kb();

    case HDFS_PROPERTIES:
      return getHdfs_properties();

    }
    throw new java.lang.IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  @Override
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new java.lang.IllegalArgumentException();
    }

    switch (field) {
    case JOB_ID:
      return isSetJob_id();
    case SRC_DEST_MAP:
      return isSetSrc_dest_map();
    case BROKER_ADDR:
      return isSetBroker_addr();
    case BROKER_PROP:
      return isSetBroker_prop();
    case USE_BROKER:
      return isSetUse_broker();
    case HDFS_WRITE_BUFFER_SIZE_KB:
      return isSetHdfs_write_buffer_size_kb();
    case HDFS_PROPERTIES:
      return isSetHdfs_properties();
    }
    throw new java.lang.IllegalStateException();
  }

  @Override
  public boolean equals(java.lang.Object that) {
    if (that instanceof TUploadReq)
      return this.equals((TUploadReq)that);
    return false;
  }

  public boolean equals(TUploadReq that) {
    if (that == null)
      return false;
    if (this == that)
      return true;

    boolean this_present_job_id = true;
    boolean that_present_job_id = true;
    if (this_present_job_id || that_present_job_id) {
      if (!(this_present_job_id && that_present_job_id))
        return false;
      if (this.job_id != that.job_id)
        return false;
    }

    boolean this_present_src_dest_map = true && this.isSetSrc_dest_map();
    boolean that_present_src_dest_map = true && that.isSetSrc_dest_map();
    if (this_present_src_dest_map || that_present_src_dest_map) {
      if (!(this_present_src_dest_map && that_present_src_dest_map))
        return false;
      if (!this.src_dest_map.equals(that.src_dest_map))
        return false;
    }

    boolean this_present_broker_addr = true && this.isSetBroker_addr();
    boolean that_present_broker_addr = true && that.isSetBroker_addr();
    if (this_present_broker_addr || that_present_broker_addr) {
      if (!(this_present_broker_addr && that_present_broker_addr))
        return false;
      if (!this.broker_addr.equals(that.broker_addr))
        return false;
    }

    boolean this_present_broker_prop = true && this.isSetBroker_prop();
    boolean that_present_broker_prop = true && that.isSetBroker_prop();
    if (this_present_broker_prop || that_present_broker_prop) {
      if (!(this_present_broker_prop && that_present_broker_prop))
        return false;
      if (!this.broker_prop.equals(that.broker_prop))
        return false;
    }

    boolean this_present_use_broker = true && this.isSetUse_broker();
    boolean that_present_use_broker = true && that.isSetUse_broker();
    if (this_present_use_broker || that_present_use_broker) {
      if (!(this_present_use_broker && that_present_use_broker))
        return false;
      if (this.use_broker != that.use_broker)
        return false;
    }

    boolean this_present_hdfs_write_buffer_size_kb = true && this.isSetHdfs_write_buffer_size_kb();
    boolean that_present_hdfs_write_buffer_size_kb = true && that.isSetHdfs_write_buffer_size_kb();
    if (this_present_hdfs_write_buffer_size_kb || that_present_hdfs_write_buffer_size_kb) {
      if (!(this_present_hdfs_write_buffer_size_kb && that_present_hdfs_write_buffer_size_kb))
        return false;
      if (this.hdfs_write_buffer_size_kb != that.hdfs_write_buffer_size_kb)
        return false;
    }

    boolean this_present_hdfs_properties = true && this.isSetHdfs_properties();
    boolean that_present_hdfs_properties = true && that.isSetHdfs_properties();
    if (this_present_hdfs_properties || that_present_hdfs_properties) {
      if (!(this_present_hdfs_properties && that_present_hdfs_properties))
        return false;
      if (!this.hdfs_properties.equals(that.hdfs_properties))
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    int hashCode = 1;

    hashCode = hashCode * 8191 + org.apache.thrift.TBaseHelper.hashCode(job_id);

    hashCode = hashCode * 8191 + ((isSetSrc_dest_map()) ? 131071 : 524287);
    if (isSetSrc_dest_map())
      hashCode = hashCode * 8191 + src_dest_map.hashCode();

    hashCode = hashCode * 8191 + ((isSetBroker_addr()) ? 131071 : 524287);
    if (isSetBroker_addr())
      hashCode = hashCode * 8191 + broker_addr.hashCode();

    hashCode = hashCode * 8191 + ((isSetBroker_prop()) ? 131071 : 524287);
    if (isSetBroker_prop())
      hashCode = hashCode * 8191 + broker_prop.hashCode();

    hashCode = hashCode * 8191 + ((isSetUse_broker()) ? 131071 : 524287);
    if (isSetUse_broker())
      hashCode = hashCode * 8191 + ((use_broker) ? 131071 : 524287);

    hashCode = hashCode * 8191 + ((isSetHdfs_write_buffer_size_kb()) ? 131071 : 524287);
    if (isSetHdfs_write_buffer_size_kb())
      hashCode = hashCode * 8191 + hdfs_write_buffer_size_kb;

    hashCode = hashCode * 8191 + ((isSetHdfs_properties()) ? 131071 : 524287);
    if (isSetHdfs_properties())
      hashCode = hashCode * 8191 + hdfs_properties.hashCode();

    return hashCode;
  }

  @Override
  public int compareTo(TUploadReq other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = java.lang.Boolean.compare(isSetJob_id(), other.isSetJob_id());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetJob_id()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.job_id, other.job_id);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetSrc_dest_map(), other.isSetSrc_dest_map());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetSrc_dest_map()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.src_dest_map, other.src_dest_map);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetBroker_addr(), other.isSetBroker_addr());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetBroker_addr()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.broker_addr, other.broker_addr);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetBroker_prop(), other.isSetBroker_prop());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetBroker_prop()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.broker_prop, other.broker_prop);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetUse_broker(), other.isSetUse_broker());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetUse_broker()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.use_broker, other.use_broker);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetHdfs_write_buffer_size_kb(), other.isSetHdfs_write_buffer_size_kb());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetHdfs_write_buffer_size_kb()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.hdfs_write_buffer_size_kb, other.hdfs_write_buffer_size_kb);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetHdfs_properties(), other.isSetHdfs_properties());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetHdfs_properties()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.hdfs_properties, other.hdfs_properties);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  @org.apache.thrift.annotation.Nullable
  @Override
  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  @Override
  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    scheme(iprot).read(iprot, this);
  }

  @Override
  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    scheme(oprot).write(oprot, this);
  }

  @Override
  public java.lang.String toString() {
    java.lang.StringBuilder sb = new java.lang.StringBuilder("TUploadReq(");
    boolean first = true;

    sb.append("job_id:");
    sb.append(this.job_id);
    first = false;
    if (!first) sb.append(", ");
    sb.append("src_dest_map:");
    if (this.src_dest_map == null) {
      sb.append("null");
    } else {
      sb.append(this.src_dest_map);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("broker_addr:");
    if (this.broker_addr == null) {
      sb.append("null");
    } else {
      sb.append(this.broker_addr);
    }
    first = false;
    if (isSetBroker_prop()) {
      if (!first) sb.append(", ");
      sb.append("broker_prop:");
      if (this.broker_prop == null) {
        sb.append("null");
      } else {
        sb.append(this.broker_prop);
      }
      first = false;
    }
    if (isSetUse_broker()) {
      if (!first) sb.append(", ");
      sb.append("use_broker:");
      sb.append(this.use_broker);
      first = false;
    }
    if (isSetHdfs_write_buffer_size_kb()) {
      if (!first) sb.append(", ");
      sb.append("hdfs_write_buffer_size_kb:");
      sb.append(this.hdfs_write_buffer_size_kb);
      first = false;
    }
    if (isSetHdfs_properties()) {
      if (!first) sb.append(", ");
      sb.append("hdfs_properties:");
      if (this.hdfs_properties == null) {
        sb.append("null");
      } else {
        sb.append(this.hdfs_properties);
      }
      first = false;
    }
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // alas, we cannot check 'job_id' because it's a primitive and you chose the non-beans generator.
    if (src_dest_map == null) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field 'src_dest_map' was not present! Struct: " + toString());
    }
    if (broker_addr == null) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field 'broker_addr' was not present! Struct: " + toString());
    }
    // check for sub-struct validity
    if (broker_addr != null) {
      broker_addr.validate();
    }
    if (hdfs_properties != null) {
      hdfs_properties.validate();
    }
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bitfield = 0;
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class TUploadReqStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    @Override
    public TUploadReqStandardScheme getScheme() {
      return new TUploadReqStandardScheme();
    }
  }

  private static class TUploadReqStandardScheme extends org.apache.thrift.scheme.StandardScheme<TUploadReq> {

    @Override
    public void read(org.apache.thrift.protocol.TProtocol iprot, TUploadReq struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // JOB_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.job_id = iprot.readI64();
              struct.setJob_idIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // SRC_DEST_MAP
            if (schemeField.type == org.apache.thrift.protocol.TType.MAP) {
              {
                org.apache.thrift.protocol.TMap _map106 = iprot.readMapBegin();
                struct.src_dest_map = new java.util.HashMap<java.lang.String,java.lang.String>(2*_map106.size);
                @org.apache.thrift.annotation.Nullable java.lang.String _key107;
                @org.apache.thrift.annotation.Nullable java.lang.String _val108;
                for (int _i109 = 0; _i109 < _map106.size; ++_i109)
                {
                  _key107 = iprot.readString();
                  _val108 = iprot.readString();
                  struct.src_dest_map.put(_key107, _val108);
                }
                iprot.readMapEnd();
              }
              struct.setSrc_dest_mapIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // BROKER_ADDR
            if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
              struct.broker_addr = new com.starrocks.thrift.TNetworkAddress();
              struct.broker_addr.read(iprot);
              struct.setBroker_addrIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // BROKER_PROP
            if (schemeField.type == org.apache.thrift.protocol.TType.MAP) {
              {
                org.apache.thrift.protocol.TMap _map110 = iprot.readMapBegin();
                struct.broker_prop = new java.util.HashMap<java.lang.String,java.lang.String>(2*_map110.size);
                @org.apache.thrift.annotation.Nullable java.lang.String _key111;
                @org.apache.thrift.annotation.Nullable java.lang.String _val112;
                for (int _i113 = 0; _i113 < _map110.size; ++_i113)
                {
                  _key111 = iprot.readString();
                  _val112 = iprot.readString();
                  struct.broker_prop.put(_key111, _val112);
                }
                iprot.readMapEnd();
              }
              struct.setBroker_propIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // USE_BROKER
            if (schemeField.type == org.apache.thrift.protocol.TType.BOOL) {
              struct.use_broker = iprot.readBool();
              struct.setUse_brokerIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 6: // HDFS_WRITE_BUFFER_SIZE_KB
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.hdfs_write_buffer_size_kb = iprot.readI32();
              struct.setHdfs_write_buffer_size_kbIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 7: // HDFS_PROPERTIES
            if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
              struct.hdfs_properties = new com.starrocks.thrift.THdfsProperties();
              struct.hdfs_properties.read(iprot);
              struct.setHdfs_propertiesIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      if (!struct.isSetJob_id()) {
        throw new org.apache.thrift.protocol.TProtocolException("Required field 'job_id' was not found in serialized data! Struct: " + toString());
      }
      struct.validate();
    }

    @Override
    public void write(org.apache.thrift.protocol.TProtocol oprot, TUploadReq struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      oprot.writeFieldBegin(JOB_ID_FIELD_DESC);
      oprot.writeI64(struct.job_id);
      oprot.writeFieldEnd();
      if (struct.src_dest_map != null) {
        oprot.writeFieldBegin(SRC_DEST_MAP_FIELD_DESC);
        {
          oprot.writeMapBegin(new org.apache.thrift.protocol.TMap(org.apache.thrift.protocol.TType.STRING, org.apache.thrift.protocol.TType.STRING, struct.src_dest_map.size()));
          for (java.util.Map.Entry<java.lang.String, java.lang.String> _iter114 : struct.src_dest_map.entrySet())
          {
            oprot.writeString(_iter114.getKey());
            oprot.writeString(_iter114.getValue());
          }
          oprot.writeMapEnd();
        }
        oprot.writeFieldEnd();
      }
      if (struct.broker_addr != null) {
        oprot.writeFieldBegin(BROKER_ADDR_FIELD_DESC);
        struct.broker_addr.write(oprot);
        oprot.writeFieldEnd();
      }
      if (struct.broker_prop != null) {
        if (struct.isSetBroker_prop()) {
          oprot.writeFieldBegin(BROKER_PROP_FIELD_DESC);
          {
            oprot.writeMapBegin(new org.apache.thrift.protocol.TMap(org.apache.thrift.protocol.TType.STRING, org.apache.thrift.protocol.TType.STRING, struct.broker_prop.size()));
            for (java.util.Map.Entry<java.lang.String, java.lang.String> _iter115 : struct.broker_prop.entrySet())
            {
              oprot.writeString(_iter115.getKey());
              oprot.writeString(_iter115.getValue());
            }
            oprot.writeMapEnd();
          }
          oprot.writeFieldEnd();
        }
      }
      if (struct.isSetUse_broker()) {
        oprot.writeFieldBegin(USE_BROKER_FIELD_DESC);
        oprot.writeBool(struct.use_broker);
        oprot.writeFieldEnd();
      }
      if (struct.isSetHdfs_write_buffer_size_kb()) {
        oprot.writeFieldBegin(HDFS_WRITE_BUFFER_SIZE_KB_FIELD_DESC);
        oprot.writeI32(struct.hdfs_write_buffer_size_kb);
        oprot.writeFieldEnd();
      }
      if (struct.hdfs_properties != null) {
        if (struct.isSetHdfs_properties()) {
          oprot.writeFieldBegin(HDFS_PROPERTIES_FIELD_DESC);
          struct.hdfs_properties.write(oprot);
          oprot.writeFieldEnd();
        }
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class TUploadReqTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    @Override
    public TUploadReqTupleScheme getScheme() {
      return new TUploadReqTupleScheme();
    }
  }

  private static class TUploadReqTupleScheme extends org.apache.thrift.scheme.TupleScheme<TUploadReq> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, TUploadReq struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      oprot.writeI64(struct.job_id);
      {
        oprot.writeI32(struct.src_dest_map.size());
        for (java.util.Map.Entry<java.lang.String, java.lang.String> _iter116 : struct.src_dest_map.entrySet())
        {
          oprot.writeString(_iter116.getKey());
          oprot.writeString(_iter116.getValue());
        }
      }
      struct.broker_addr.write(oprot);
      java.util.BitSet optionals = new java.util.BitSet();
      if (struct.isSetBroker_prop()) {
        optionals.set(0);
      }
      if (struct.isSetUse_broker()) {
        optionals.set(1);
      }
      if (struct.isSetHdfs_write_buffer_size_kb()) {
        optionals.set(2);
      }
      if (struct.isSetHdfs_properties()) {
        optionals.set(3);
      }
      oprot.writeBitSet(optionals, 4);
      if (struct.isSetBroker_prop()) {
        {
          oprot.writeI32(struct.broker_prop.size());
          for (java.util.Map.Entry<java.lang.String, java.lang.String> _iter117 : struct.broker_prop.entrySet())
          {
            oprot.writeString(_iter117.getKey());
            oprot.writeString(_iter117.getValue());
          }
        }
      }
      if (struct.isSetUse_broker()) {
        oprot.writeBool(struct.use_broker);
      }
      if (struct.isSetHdfs_write_buffer_size_kb()) {
        oprot.writeI32(struct.hdfs_write_buffer_size_kb);
      }
      if (struct.isSetHdfs_properties()) {
        struct.hdfs_properties.write(oprot);
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, TUploadReq struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      struct.job_id = iprot.readI64();
      struct.setJob_idIsSet(true);
      {
        org.apache.thrift.protocol.TMap _map118 = iprot.readMapBegin(org.apache.thrift.protocol.TType.STRING, org.apache.thrift.protocol.TType.STRING); 
        struct.src_dest_map = new java.util.HashMap<java.lang.String,java.lang.String>(2*_map118.size);
        @org.apache.thrift.annotation.Nullable java.lang.String _key119;
        @org.apache.thrift.annotation.Nullable java.lang.String _val120;
        for (int _i121 = 0; _i121 < _map118.size; ++_i121)
        {
          _key119 = iprot.readString();
          _val120 = iprot.readString();
          struct.src_dest_map.put(_key119, _val120);
        }
      }
      struct.setSrc_dest_mapIsSet(true);
      struct.broker_addr = new com.starrocks.thrift.TNetworkAddress();
      struct.broker_addr.read(iprot);
      struct.setBroker_addrIsSet(true);
      java.util.BitSet incoming = iprot.readBitSet(4);
      if (incoming.get(0)) {
        {
          org.apache.thrift.protocol.TMap _map122 = iprot.readMapBegin(org.apache.thrift.protocol.TType.STRING, org.apache.thrift.protocol.TType.STRING); 
          struct.broker_prop = new java.util.HashMap<java.lang.String,java.lang.String>(2*_map122.size);
          @org.apache.thrift.annotation.Nullable java.lang.String _key123;
          @org.apache.thrift.annotation.Nullable java.lang.String _val124;
          for (int _i125 = 0; _i125 < _map122.size; ++_i125)
          {
            _key123 = iprot.readString();
            _val124 = iprot.readString();
            struct.broker_prop.put(_key123, _val124);
          }
        }
        struct.setBroker_propIsSet(true);
      }
      if (incoming.get(1)) {
        struct.use_broker = iprot.readBool();
        struct.setUse_brokerIsSet(true);
      }
      if (incoming.get(2)) {
        struct.hdfs_write_buffer_size_kb = iprot.readI32();
        struct.setHdfs_write_buffer_size_kbIsSet(true);
      }
      if (incoming.get(3)) {
        struct.hdfs_properties = new com.starrocks.thrift.THdfsProperties();
        struct.hdfs_properties.read(iprot);
        struct.setHdfs_propertiesIsSet(true);
      }
    }
  }

  private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
    return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
  }
}

